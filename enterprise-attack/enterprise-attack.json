{
    "type": "bundle",
    "id": "bundle--4ee91158-54a2-4744-8722-be32f062b9e8",
    "spec_version": "2.0",
    "objects": [{
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "name": ".bash_profile and .bashrc",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1156",
                        "url": "https://attack.mitre.org/techniques/T1156"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2017/04/unit42-new-iotlinux-malware-targets-dvrs-forms-botnet/",
                        "description": "Claud Xiao, Cong Zheng, Yanhui Jia. (2017, April 6). New IoT/Linux Malware Targets DVRs, Forms Botnet. Retrieved February 19, 2018.",
                        "source_name": "amnesia malware"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T14:14:05.452Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.004",
                        "url": "https://attack.mitre.org/techniques/T1546/004"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2017/04/unit42-new-iotlinux-malware-targets-dvrs-forms-botnet/",
                        "description": "Claud Xiao, Cong Zheng, Yanhui Jia. (2017, April 6). New IoT/Linux Malware Targets DVRs, Forms Botnet. Retrieved February 19, 2018.",
                        "source_name": "amnesia malware"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": ".bash_profile and .bashrc",
                "description": "Adversaries may establish persistence by executing malicious content triggered by a user\u2019s shell. <code>~/.bash_profile</code> and <code>~/.bashrc</code> are shell scripts that contain shell commands. These files are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly.\n\n<code>~/.bash_profile</code> is executed for login shells and <code>~/.bashrc</code> is executed for interactive non-login shells. This means that when a user logs in (via username and password) to the console (either locally or remotely via something like SSH), the <code>~/.bash_profile</code> script is executed before the initial command prompt is returned to the user. After that, every time a new shell is opened, the <code>~/.bashrc</code> script is executed. This allows users more fine-grained control over when they want certain commands executed. These shell scripts are meant to be written to by the local user to configure their own environment.\n\nThe macOS Terminal.app is a little different in that it runs a login shell by default each time a new terminal window is opened, thus calling <code>~/.bash_profile</code> each time instead of <code>~/.bashrc</code>.\n\nAdversaries may abuse these shell scripts by inserting arbitrary shell commands that may be used to execute other binaries to gain persistence. Every time the user logs in or opens a new shell, the modified ~/.bash_profile and/or ~/.bashrc scripts will be executed.(Citation: amnesia malware)",
                "id": "attack-pattern--b63a34e8-0a61-4c97-a23b-bf8a2ed812e2",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-24T16:28:04.990Z",
                "created": "2020-01-24T14:13:45.936Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_detection": "While users may customize their <code>~/.bashrc</code> and <code>~/.bash_profile</code> files , there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.",
                "x_mitre_data_sources": [
                    "Process use of network",
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "url": "https://attack.mitre.org/techniques/T1003/008",
                        "external_id": "T1003.008",
                        "source_name": "mitre-attack"
                    },
                    {
                        "description": "The Linux Documentation Project. (n.d.). Linux Password and Shadow File Formats. Retrieved February 19, 2020.",
                        "url": "https://www.tldp.org/LDP/lame/LAME/linux-admin-made-easy/shadow-file-formats.html",
                        "source_name": "Linux Password and Shadow File Formats"
                    },
                    {
                        "description": "Vivek Gite. (2014, September 17). Linux Password Cracking: Explain unshadow and john Commands (John the Ripper Tool). Retrieved February 19, 2020.",
                        "url": "https://www.cyberciti.biz/faq/unix-linux-password-cracking-john-the-ripper/",
                        "source_name": "nixCraft - John the Ripper"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "/etc/passwd and /etc/shadow",
                "description": "Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>\n",
                "id": "attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-20T15:56:55.022Z",
                "created": "2020-02-11T18:46:56.263Z",
                "x_mitre_detection": "The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.",
                "x_mitre_permissions_required": [
                    "root"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Linux"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1548",
                    "url": "https://attack.mitre.org/techniques/T1548"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Abuse Elevation Control Mechanism",
                "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.",
                "id": "attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-25T19:57:54.923Z",
                "created": "2020-01-30T13:58:14.373Z",
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "File monitoring",
                    "Process command-line parameters",
                    "API monitoring",
                    "Process monitoring"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_detection": "Monitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).\n\nConsider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\n\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1134",
                        "url": "https://attack.mitre.org/techniques/T1134"
                    },
                    {
                        "external_id": "CAPEC-633",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/633.html"
                    },
                    {
                        "url": "https://pentestlab.blog/2017/04/03/token-manipulation/",
                        "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
                        "source_name": "Pentestlab Token Manipulation"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing",
                        "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
                        "source_name": "Microsoft Command-line Logging"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx",
                        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                        "source_name": "Microsoft LogonUser"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx",
                        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                        "source_name": "Microsoft DuplicateTokenEx"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx",
                        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
                        "source_name": "Microsoft ImpersonateLoggedOnUser"
                    },
                    {
                        "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf",
                        "description": "Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",
                        "source_name": "BlackHat Atkinson Winchester Token Manipulation"
                    }
                ],
                "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "name": "Access Token Manipulation",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-04-16T19:37:02.355Z",
                "created": "2017-12-14T16:46:06.044Z",
                "x_mitre_defense_bypassed": [
                    "Windows User Account Control",
                    "System access controls",
                    "File system access controls",
                    "Heuristic Detection",
                    "Host forensic analysis"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "2.0",
                "x_mitre_contributors": [
                    "Tom Ueltschi @c_APT_ure",
                    "Travis Smith, Tripwire",
                    "Robby Winchester, @robwinchester3",
                    "Jared Atkinson, @jaredcatkinson"
                ],
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Windows event logs",
                    "API monitoring",
                    "Access tokens",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_effective_permissions": [
                    "SYSTEM"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1015",
                        "url": "https://attack.mitre.org/techniques/T1015"
                    },
                    {
                        "external_id": "CAPEC-558",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/558.html"
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-1.html",
                        "description": "Glyer, C., Kazanciyan, R. (2012, August 20). The \u201cHikit\u201d Rootkit: Advanced and Persistent Attack Techniques (Part 1). Retrieved June 6, 2016.",
                        "source_name": "FireEye Hikit Rootkit"
                    },
                    {
                        "url": "https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom",
                        "description": "Maldonado, D., McGuffin, T. (2016, August 6). Sticky Keys to the Kingdom. Retrieved July 5, 2017.",
                        "source_name": "DEFCON2016 Sticky Keys"
                    },
                    {
                        "url": "http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/",
                        "description": "Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.",
                        "source_name": "Tilbury 2014"
                    }
                ],
                "name": "Accessibility Features",
                "id": "attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-05-13T20:37:30.008Z",
                "created": "2017-05-31T21:30:26.946Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.008",
                        "url": "https://attack.mitre.org/techniques/T1546/008"
                    },
                    {
                        "external_id": "CAPEC-558",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/558.html"
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-1.html",
                        "description": "Glyer, C., Kazanciyan, R. (2012, August 20). The \u201cHikit\u201d Rootkit: Advanced and Persistent Attack Techniques (Part 1). Retrieved June 6, 2016.",
                        "source_name": "FireEye Hikit Rootkit"
                    },
                    {
                        "url": "https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom",
                        "description": "Maldonado, D., McGuffin, T. (2016, August 6). Sticky Keys to the Kingdom. Retrieved July 5, 2017.",
                        "source_name": "DEFCON2016 Sticky Keys"
                    },
                    {
                        "url": "http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/",
                        "description": "Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.",
                        "source_name": "Tilbury 2014"
                    },
                    {
                        "source_name": "Narrator Accessibility Abuse",
                        "url": "https://giuliocomi.blogspot.com/2019/10/abusing-windows-10-narrators-feedback.html",
                        "description": "Comi, G. (2019, October 19). Abusing Windows 10 Narrator's 'Feedback-Hub' URI for Fileless Persistence. Retrieved April 28, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Accessibility Features",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)\n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
                "id": "attack-pattern--70e52b04-2a0c-4cea-9d18-7149f1df9dc5",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-05-13T20:37:30.048Z",
                "created": "2020-01-24T14:32:40.315Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_effective_permissions": [
                    "SYSTEM"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring",
                    "Windows Registry"
                ],
                "x_mitre_contributors": [
                    "Paul Speulstra, AECOM Global Security Operations Center"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "url": "https://attack.mitre.org/techniques/T1531",
                        "source_name": "mitre-attack",
                        "external_id": "T1531"
                    },
                    {
                        "description": "CarbonBlack Threat Analysis Unit. (2019, March 22). TAU Threat Intelligence Notification \u2013 LockerGoga Ransomware. Retrieved April 16, 2019.",
                        "url": "https://www.carbonblack.com/2019/03/22/tau-threat-intelligence-notification-lockergoga-ransomware/",
                        "source_name": "CarbonBlack LockerGoga 2019"
                    },
                    {
                        "source_name": "Unit42 LockerGoga 2019",
                        "url": "https://unit42.paloaltonetworks.com/born-this-way-origins-of-lockergoga/",
                        "description": "Harbison, M.. (2019, March 26). Born This Way? Origins of LockerGoga. Retrieved April 16, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Account Access Removal",
                "description": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.\n\nAdversaries may also subsequently log off and/or reboot boxes to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)",
                "id": "attack-pattern--b24e2a20-3b3d-4bf0-823b-1ed765398fb0",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-07-14T19:15:29.911Z",
                "created": "2019-10-09T18:48:31.906Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_detection": "Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary's attempt to remove access to an account:\n\n* Event ID 4723 - An attempt was made to change an account's password\n* Event ID 4724 - An attempt was made to reset an account's password\n* Event ID 4726 - A user account was deleted\n* Event ID 4740 - A user account was locked out\n\nAlerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
                "x_mitre_version": "1.0",
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "root",
                    "SYSTEM"
                ],
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Account Discovery",
                "description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1087",
                    "url": "https://attack.mitre.org/techniques/T1087"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-26T15:27:59.127Z",
                "created": "2017-05-31T21:31:06.988Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Office 365",
                    "Azure AD",
                    "AWS",
                    "GCP",
                    "Azure",
                    "SaaS"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "Office 365 account logs",
                    "API monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_contributors": [
                    "Microsoft Threat Intelligence Center (MSTIC)",
                    "Travis Smith, Tripwire"
                ],
                "x_mitre_version": "2.1"
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1098",
                        "url": "https://attack.mitre.org/techniques/T1098"
                    },
                    {
                        "source_name": "Microsoft User Modified Event",
                        "description": "Lich, B., Miroshnikov, A. (2017, April 5). 4738(S): A user account was changed. Retrieved June 30, 2017.",
                        "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4738"
                    },
                    {
                        "description": "Franklin Smith, R. (n.d.). Windows Security Log Event ID 4670. Retrieved November 4, 2019.",
                        "url": "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4670",
                        "source_name": "Microsoft Security Event 4670"
                    },
                    {
                        "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM",
                        "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.",
                        "source_name": "InsiderThreat ChangeNTLM July 2017"
                    },
                    {
                        "url": "https://github.com/gentilkiwi/mimikatz/issues/92",
                        "description": "Warren, J. (2017, June 22). lsadump::changentlm and lsadump::setntlm work, but generate Windows events #92. Retrieved December 4, 2017.",
                        "source_name": "GitHub Mimikatz Issue 92 June 2017"
                    }
                ],
                "description": "Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.",
                "name": "Account Manipulation",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-07-15T12:43:37.469Z",
                "created": "2017-05-31T21:31:12.196Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "2.1",
                "x_mitre_contributors": [
                    "Jannie Li, Microsoft Threat Intelligence\u202fCenter\u202f(MSTIC)",
                    "Praetorian",
                    "Tim MalcomVetter"
                ],
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Windows event logs"
                ],
                "x_mitre_detection": "Collect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.(Citation: Microsoft User Modified Event)(Citation: Microsoft Security Event 4670)(Citation: Microsoft Security Event 4670) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ(Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password.(Citation: GitHub Mimikatz Issue 92 June 2017)\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\n\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.",
                "x_mitre_platforms": [
                    "Windows",
                    "Office 365",
                    "Azure",
                    "GCP",
                    "Azure AD",
                    "AWS",
                    "Linux",
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1098.003",
                        "url": "https://attack.mitre.org/techniques/T1098/003"
                    },
                    {
                        "source_name": "Microsoft Support O365 Add Another Admin, October 2019",
                        "url": "https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d",
                        "description": "Microsoft. (n.d.). Add Another Admin. Retrieved October 18, 2019."
                    },
                    {
                        "source_name": "Microsoft O365 Admin Roles",
                        "url": "https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide",
                        "description": "Ako-Adjei, K., Dickhaus, M., Baumgartner, P., Faigel, D., et. al.. (2019, October 8). About admin roles. Retrieved October 18, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Add Office 365 Global Administrator Role",
                "description": "An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins) via the global admin role.(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity.",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-24T12:40:02.331Z",
                "created": "2020-01-19T16:59:45.362Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. ",
                "x_mitre_data_sources": [
                    "Office 365 audit logs"
                ],
                "x_mitre_contributors": [
                    "Microsoft Threat Intelligence Center (MSTIC)"
                ],
                "x_mitre_platforms": [
                    "Office 365"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1137.006",
                        "url": "https://attack.mitre.org/techniques/T1137/006"
                    },
                    {
                        "url": "https://support.office.com/article/Add-or-remove-add-ins-0af570c4-5cf3-4fa9-9b88-403625a0b460",
                        "description": "Microsoft. (n.d.). Add or remove add-ins. Retrieved July 3, 2017.",
                        "source_name": "Microsoft Office Add-ins"
                    },
                    {
                        "url": "https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/",
                        "description": "Knowles, W. (2017, April 21). Add-In Opportunities for Office Persistence. Retrieved July 3, 2017.",
                        "source_name": "MRWLabs Office Persistence Add-ins"
                    },
                    {
                        "source_name": "FireEye Mail CDS 2018",
                        "url": "https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s03-youve-got-mail.pdf",
                        "description": "Caban, D. and Hirani, M. (2018, October 3). You\u2019ve Got Mail! Enterprise Email Compromise. Retrieved April 22, 2019."
                    },
                    {
                        "source_name": "GlobalDotName Jun 2019",
                        "url": "https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique",
                        "description": "Shukrun, S. (2019, June 2). Office Templates and GlobalDotName - A Stealthy Office Persistence Technique. Retrieved August 26, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Add-ins",
                "description": "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)\n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ",
                "id": "attack-pattern--34f1d81d-fe88-4f97-bd3b-a3164536255d",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-26T17:34:02.877Z",
                "created": "2019-11-07T19:52:52.801Z",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_detection": "Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "File monitoring",
                    "Windows Registry",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "Office 365"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1098.001",
                        "url": "https://attack.mitre.org/techniques/T1098/001"
                    },
                    {
                        "source_name": "Create Azure Service Principal",
                        "url": "https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?toc=%2Fazure%2Fazure-resource-manager%2Ftoc.json&view=azure-cli-latest",
                        "description": "Microsoft. (2020, January 8). Create an Azure service principal with Azure CLI. Retrieved January 19, 2020."
                    },
                    {
                        "source_name": "Blue Cloud of Death",
                        "url": "https://speakerdeck.com/tweekfawkes/blue-cloud-of-death-red-teaming-azure-1",
                        "description": "Kunz, Bryce. (2018, May 11). Blue Cloud of Death: Red Teaming Azure. Retrieved October 23, 2019."
                    },
                    {
                        "source_name": "Blue Cloud of Death Video",
                        "url": "https://www.youtube.com/watch?v=wQ1CuAPnrLM&feature=youtu.be&t=2815",
                        "description": "Kunz, Bruce. (2018, October 14). Blue Cloud of Death: Red Teaming Azure. Retrieved November 21, 2019."
                    },
                    {
                        "source_name": "Why AAD Service Principals",
                        "url": "https://github.com/microsoft/AzureSuperpowers/blob/master/docs/AzureSuperpowers.md#why-aad-service-principals",
                        "description": "Microsoft. (2019, September 23). Azure Superpowers Lab Manual. Retrieved January 19, 2020."
                    },
                    {
                        "source_name": "Demystifying Azure AD Service Principals",
                        "url": "https://nedinthecloud.com/2019/07/16/demystifying-azure-ad-service-principals/",
                        "description": "Bellavance, Ned. (2019, July 16). Demystifying Azure AD Service Principals. Retrieved January 19, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Additional Azure Service Principal Credentials",
                "description": "Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials(Citation: Create Azure Service Principal) to maintain persistent access to victim Azure accounts.(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) Azure Service Principals support both password and certificate credentials.(Citation: Why AAD Service Principals) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules.(Citation: Demystifying Azure AD Service Principals)",
                "id": "attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-07-15T12:43:36.340Z",
                "created": "2020-01-19T16:10:15.008Z",
                "x_mitre_contributors": [
                    "Oleg Kolesnikov, Securonix",
                    "Jannie Li, Microsoft Threat Intelligence\u202fCenter\u202f(MSTIC)"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor Azure Activity Logs for service principal modifications.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.",
                "x_mitre_data_sources": [
                    "Azure activity logs"
                ],
                "x_mitre_platforms": [
                    "Azure AD",
                    "Azure"
                ]
            },
            {
                "id": "attack-pattern--4bf5845d-a814-4490-bc5c-ccdee6043025",
                "name": "AppCert DLLs",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1182",
                        "url": "https://attack.mitre.org/techniques/T1182"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    },
                    {
                        "url": "https://forum.sysinternals.com/appcertdlls_topic12546.html",
                        "description": "Microsoft. (2007, October 24). Windows Sysinternals - AppCertDlls. Retrieved December 18, 2017.",
                        "source_name": "Sysinternals AppCertDlls Oct 2007"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T14:48:05.567Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.009",
                        "url": "https://attack.mitre.org/techniques/T1546/009"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    },
                    {
                        "url": "https://forum.sysinternals.com/appcertdlls_topic12546.html",
                        "description": "Microsoft. (2007, October 24). Windows Sysinternals - AppCertDlls. Retrieved December 18, 2017.",
                        "source_name": "Sysinternals AppCertDlls Oct 2007"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "AppCert DLLs",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Endgame Process Injection July 2017)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ",
                "id": "attack-pattern--7d57b371-10c2-45e5-b3cc-83a8fb380e4c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-24T20:22:45.298Z",
                "created": "2020-01-24T14:47:41.795Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_effective_permissions": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Endgame Process Injection July 2017) \n\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "Process command-line parameters",
                    "Process monitoring",
                    "Loaded DLLs"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--317fefa6-46c7-4062-adb6-2008cf6bcb41",
                "name": "AppInit DLLs",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1103",
                        "url": "https://attack.mitre.org/techniques/T1103"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://support.microsoft.com/en-us/kb/197571",
                        "description": "Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.",
                        "source_name": "AppInit Registry"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/dn280412",
                        "description": "Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.",
                        "source_name": "AppInit Secure Boot"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T14:52:55.240Z",
                "created": "2017-05-31T21:31:15.409Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.010",
                        "url": "https://attack.mitre.org/techniques/T1546/010"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://support.microsoft.com/en-us/kb/197571",
                        "description": "Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.",
                        "source_name": "AppInit Registry"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/dn280412",
                        "description": "Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.",
                        "source_name": "AppInit Secure Boot"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "AppInit DLLs",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Endgame Process Injection July 2017)\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",
                "id": "attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-24T20:34:09.996Z",
                "created": "2020-01-24T14:52:25.589Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_system_requirements": [
                    "Secure boot disabled on systems running Windows 8 and later"
                ],
                "x_mitre_effective_permissions": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Endgame Process Injection July 2017)\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "Process command-line parameters",
                    "Process monitoring",
                    "Loaded DLLs"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--5ad95aaa-49c1-4784-821d-2e83f47b079b",
                "name": "AppleScript",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1155",
                        "url": "https://attack.mitre.org/techniques/T1155"
                    },
                    {
                        "url": "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/macro-malware-targets-macs/",
                        "description": "Yerko Grbic. (2017, February 14). Macro Malware Targets Macs. Retrieved July 8, 2017.",
                        "source_name": "Macro Malware Targets Macs"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-04-14T13:26:00.846Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1059.002",
                        "url": "https://attack.mitre.org/techniques/T1059/002"
                    },
                    {
                        "source_name": "Apple AppleScript",
                        "url": "https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html",
                        "description": "Apple. (2016, January 25). Introduction to AppleScript Language Guide. Retrieved March 28, 2020."
                    },
                    {
                        "url": "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/macro-malware-targets-macs/",
                        "description": "Yerko Grbic. (2017, February 14). Macro Malware Targets Macs. Retrieved July 8, 2017.",
                        "source_name": "Macro Malware Targets Macs"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "AppleScript",
                "description": "Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. (Citation: Apple AppleScript) These AppleEvent messages can be easily scripted with AppleScript for local or remote execution.\n\n<code>osascript</code> executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the <code>osalang</code> program. AppleEvent messages can be sent independently or as part of a script. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nAdversaries can use this to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally though), but can interact with applications if they're already running remotely. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006)(Citation: Macro Malware Targets Macs). Scripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \"script here\"</code>.",
                "id": "attack-pattern--37b11151-1776-4f8f-b328-30939fbf2ceb",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "modified": "2020-04-14T13:28:17.696Z",
                "created": "2020-03-09T14:07:54.329Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor for execution of AppleScript through osascript that may be related to other suspicious behavior occurring on the system.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_platforms": [
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "url": "https://attack.mitre.org/techniques/T1527",
                        "external_id": "T1527",
                        "source_name": "mitre-attack"
                    },
                    {
                        "description": "Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.",
                        "url": "https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/",
                        "source_name": "Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019"
                    },
                    {
                        "description": "okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved September 12, 2019.",
                        "url": "https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen",
                        "source_name": "okta"
                    },
                    {
                        "description": "Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27). Microsoft identity platform access tokens. Retrieved October 4, 2019.",
                        "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens",
                        "source_name": "Microsoft Identity Platform Access 2019"
                    },
                    {
                        "description": "Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure. Retrieved October 4, 2019.",
                        "url": "https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/",
                        "source_name": "Staaldraad Phishing with OAuth 2017"
                    }
                ],
                "name": "Application Access Token",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-23T15:59:40.457Z",
                "created": "2019-08-30T12:55:58.607Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1550.001",
                        "url": "https://attack.mitre.org/techniques/T1550/001"
                    },
                    {
                        "description": "Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.",
                        "url": "https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/",
                        "source_name": "Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019"
                    },
                    {
                        "source_name": "okta",
                        "url": "https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen",
                        "description": "okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved September 12, 2019."
                    },
                    {
                        "source_name": "Microsoft Identity Platform Access 2019",
                        "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens",
                        "description": "Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27). Microsoft identity platform access tokens. Retrieved October 4, 2019."
                    },
                    {
                        "source_name": "Staaldraad Phishing with OAuth 2017",
                        "url": "https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/",
                        "description": "Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure. Retrieved October 4, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Application Access Token",
                "description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
                "id": "attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "lateral-movement"
                    }
                ],
                "modified": "2020-03-23T20:24:52.899Z",
                "created": "2020-01-30T17:37:22.261Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_defense_bypassed": [
                    "System Access Controls"
                ],
                "x_mitre_detection": "Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs.",
                "x_mitre_data_sources": [
                    "Office 365 audit logs",
                    "OAuth audit logs"
                ],
                "x_mitre_contributors": [
                    "Shailesh Tiwary (Indian Army)",
                    "Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)",
                    "Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)",
                    "Mark Wee"
                ],
                "x_mitre_platforms": [
                    "Office 365",
                    "SaaS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1017",
                        "external_id": "T1017"
                    },
                    {
                        "external_id": "CAPEC-187",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/187.html"
                    }
                ],
                "name": "Application Deployment Software",
                "id": "attack-pattern--327f3cc5-eea1-42d4-a6cd-ed34b7ce8f61",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-23T15:40:50.965Z",
                "created": "2017-05-31T21:30:27.755Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1499.003",
                        "url": "https://attack.mitre.org/techniques/T1499/003"
                    },
                    {
                        "source_name": "Arbor AnnualDoSreport Jan 2018",
                        "url": "https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf",
                        "description": "Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor's 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019."
                    },
                    {
                        "source_name": "Cisco DoSdetectNetflow",
                        "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf",
                        "description": "Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of web applications to cause a denial of service (DoS). Specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself. (Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-29T02:01:10.832Z",
                "created": "2020-02-20T15:35:00.025Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.",
                "x_mitre_data_sources": [
                    "Network device logs",
                    "Network device logs",
                    "Network intrusion detection system",
                    "Web application firewall logs",
                    "Web logs",
                    "SSL/TLS inspection"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD",
                    "SaaS"
                ]
            },
            {
                "created": "2017-05-31T21:30:56.776Z",
                "modified": "2020-03-27T19:02:44.772Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Application Layer Protocol",
                "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1071",
                        "url": "https://attack.mitre.org/techniques/T1071"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "DNS records",
                    "Network protocol analysis",
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Process use of network",
                    "Process monitoring"
                ],
                "x_mitre_version": "2.0"
            },
            {
                "id": "attack-pattern--7c93aa74-4bc0-4a9e-90ea-f25f86301566",
                "name": "Application Shimming",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1138",
                        "url": "https://attack.mitre.org/techniques/T1138"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf",
                        "description": "Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017.",
                        "source_name": "Black Hat 2015 App Shim"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T15:00:47.185Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.011",
                        "url": "https://attack.mitre.org/techniques/T1546/011"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "source_name": "FireEye Application Shimming",
                        "url": "http://files.brucon.org/2015/Tomczak_and_Ballenthin_Shims_for_the_Win.pdf",
                        "description": "Ballenthin, W., Tomczak, J.. (2015). The Real Shim Shary. Retrieved May 4, 2020."
                    },
                    {
                        "url": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf",
                        "description": "Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017.",
                        "source_name": "Black Hat 2015 App Shim"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Application Shimming",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Endgame Process Injection July 2017)\n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\nCustom databases are stored in:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.",
                "id": "attack-pattern--42fe883a-21ea-4cfb-b94a-78b6476dcc83",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-05-04T19:05:30.140Z",
                "created": "2020-01-24T14:56:24.231Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):\n\n* Shim-Process-Scanner - checks memory of every running process for any shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "Windows Registry"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Application Window Discovery",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1010",
                    "external_id": "T1010"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-26T15:44:27.068Z",
                "created": "2017-05-31T21:30:24.512Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_version": "1.1"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1499.004",
                        "url": "https://attack.mitre.org/techniques/T1499/004"
                    },
                    {
                        "source_name": "Sucuri BIND9 August 2015",
                        "url": "https://blog.sucuri.net/2015/08/bind9-denial-of-service-exploit-in-the-wild.html",
                        "description": "Cid, D.. (2015, August 2). BIND9 \u2013 Denial of Service Exploit in the Wild. Retrieved April 26, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent DoS condition.",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-29T02:07:27.508Z",
                "created": "2020-02-20T15:37:27.052Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_detection": "Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.",
                "x_mitre_data_sources": [
                    "Network device logs",
                    "Network intrusion detection system",
                    "Web application firewall logs",
                    "Web logs",
                    "SSL/TLS inspection"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD",
                    "SaaS"
                ]
            },
            {
                "created": "2020-02-20T20:53:45.725Z",
                "modified": "2020-03-29T18:27:31.040Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
                "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
                "name": "Archive Collected Data",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1560",
                        "url": "https://attack.mitre.org/techniques/T1560"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/List_of_file_signatures",
                        "description": "Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.",
                        "source_name": "Wikipedia File Header Signatures"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters",
                    "File monitoring",
                    "Binary file metadata"
                ],
                "x_mitre_detection": "Archival software and archived files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0"
            },
            {
                "created": "2020-02-20T21:09:55.995Z",
                "modified": "2020-03-25T22:48:14.605Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--143c0cbb-a297-4142-9624-87ffc778980b",
                "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)",
                "name": "Archive via Custom Method",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1560.003",
                        "url": "https://attack.mitre.org/techniques/T1560/003"
                    },
                    {
                        "url": "http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf",
                        "description": "ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016.",
                        "source_name": "ESET Sednit Part 2"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_detection": "Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1560.002",
                        "url": "https://attack.mitre.org/techniques/T1560/002"
                    },
                    {
                        "source_name": "PyPI RAR",
                        "url": "https://pypi.org/project/rarfile/",
                        "description": "mkz. (2020). rarfile 3.1. Retrieved February 20, 2020."
                    },
                    {
                        "source_name": "libzip",
                        "url": "https://libzip.org/",
                        "description": "D. Baron, T. Klausner. (2020). libzip. Retrieved February 20, 2020."
                    },
                    {
                        "source_name": "Zlib Github",
                        "url": "https://github.com/madler/zlib",
                        "description": "madler. (2017). zlib. Retrieved February 20, 2020."
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/List_of_file_signatures",
                        "description": "Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.",
                        "source_name": "Wikipedia File Header Signatures"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Archive via Library",
                "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
                "id": "attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-29T18:27:30.891Z",
                "created": "2020-02-20T21:08:52.529Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1560.001",
                        "url": "https://attack.mitre.org/techniques/T1560/001"
                    },
                    {
                        "source_name": "7zip Homepage",
                        "url": "https://www.7-zip.org/",
                        "description": "I. Pavlov. (2019). 7-Zip. Retrieved February 20, 2020."
                    },
                    {
                        "source_name": "WinRAR Homepage",
                        "url": "https://www.rarlab.com/",
                        "description": "A. Roshal. (2020). RARLAB. Retrieved February 20, 2020."
                    },
                    {
                        "source_name": "WinZip Homepage",
                        "url": "https://www.winzip.com/win/en/",
                        "description": "Corel Corporation. (2020). WinZip. Retrieved February 20, 2020."
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/List_of_file_signatures",
                        "description": "Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.",
                        "source_name": "Wikipedia File Header Signatures"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Archive via Utility",
                "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation: WinZip Homepage). Most utilities include functionality to encrypt and/or compress data.\n\nSome 3rd party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems.",
                "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-25T21:54:37.374Z",
                "created": "2020-02-20T21:01:25.428Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters",
                    "File monitoring",
                    "Binary file metadata"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1573.002",
                        "url": "https://attack.mitre.org/techniques/T1573/002"
                    },
                    {
                        "url": "http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840",
                        "description": "Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.",
                        "source_name": "SANS Decrypting SSL"
                    },
                    {
                        "url": "https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html",
                        "description": "Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.",
                        "source_name": "SEI SSL Inspection Risks"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Asymmetric Cryptography",
                "description": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, may protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",
                "id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-30T00:37:16.593Z",
                "created": "2020-03-16T15:48:33.882Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process use of network",
                    "Malware reverse engineering",
                    "Netflow/Enclave netflow",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1055.004",
                        "url": "https://attack.mitre.org/techniques/T1055/004"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms681951.aspx",
                        "description": "Microsoft. (n.d.). Asynchronous Procedure Calls. Retrieved December 8, 2017.",
                        "source_name": "Microsoft APC"
                    },
                    {
                        "url": "https://www.cyberbit.com/blog/endpoint-security/new-early-bird-code-injection-technique-discovered/",
                        "description": "Gavriel, H. & Erbesfeld, B. (2018, April 11). New \u2018Early Bird\u2019 Code Injection Technique Discovered. Retrieved May 24, 2018.",
                        "source_name": "CyberBit Early Bird Apr 2018"
                    },
                    {
                        "url": "https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows",
                        "description": "Liberman, T. (2016, October 27). ATOMBOMBING: BRAND NEW CODE INJECTION FOR WINDOWS. Retrieved December 8, 2017.",
                        "source_name": "ENSIL AtomBombing Oct 2016"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms649053.aspx",
                        "description": "Microsoft. (n.d.). About Atom Tables. Retrieved December 8, 2017.",
                        "source_name": "Microsoft Atom Table"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Asynchronous Procedure Call",
                "description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--7c0f17c9-1af6-4628-9cbd-9e45482dd605",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-06-20T22:17:05.394Z",
                "created": "2020-01-14T01:29:43.786Z",
                "x_mitre_defense_bypassed": [
                    "Application control",
                    "Anti-virus"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "API monitoring"
                ],
                "x_mitre_detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1053.001",
                        "url": "https://attack.mitre.org/techniques/T1053/001"
                    },
                    {
                        "source_name": "Kifarunix - Task Scheduling in Linux",
                        "url": "https://kifarunix.com/scheduling-tasks-using-at-command-in-linux/",
                        "description": "Koromicha. (2019, September 7). Scheduling tasks using at command in Linux. Retrieved December 3, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "At (Linux)",
                "description": "Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) command within Linux operating systems enables administrators to schedule tasks.(Citation: Kifarunix - Task Scheduling in Linux)\n\nAn adversary may use [at](https://attack.mitre.org/software/S0110) in Linux environments to execute programs at system startup or on a scheduled basis for persistence. [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.",
                "id": "attack-pattern--6636bc83-0611-45a6-b74f-1f3daf635b8e",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "execution"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-23T22:35:13.112Z",
                "created": "2019-12-03T12:59:36.749Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_remote_support": true,
                "x_mitre_detection": "Monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1053.002",
                        "url": "https://attack.mitre.org/techniques/T1053/002"
                    },
                    {
                        "url": "https://twitter.com/leoloobeek/status/939248813465853953",
                        "description": "Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.",
                        "source_name": "Twitter Leoloobeek Scheduled Task"
                    },
                    {
                        "url": "https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen",
                        "description": "Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.",
                        "source_name": "TechNet Forum Scheduled Task Operational Setting"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/dd315590.aspx",
                        "description": "Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.",
                        "source_name": "TechNet Scheduled Task Events"
                    },
                    {
                        "source_name": "Microsoft Scheduled Task Events Win10",
                        "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events",
                        "description": "Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019."
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "At (Windows)",
                "description": "Adversaries may abuse the <code>at.exe</code> utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. \n\nAn adversary may use <code>at.exe</code> in Windows environments to execute programs at system startup or on a scheduled basis for persistence. [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\n\nNote: The <code>at.exe</code> command line utility has been deprecated in current versions of Windows in favor of <code>schtasks</code>.",
                "id": "attack-pattern--f3d95a1f-bba2-44ce-9af7-37866cd63fd0",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "execution"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-24T13:43:40.776Z",
                "created": "2019-11-27T13:52:45.853Z",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring",
                    "Windows event logs"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_remote_support": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.",
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1123",
                        "external_id": "T1123"
                    },
                    {
                        "external_id": "CAPEC-634",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/634.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-07-14T19:42:10.235Z",
                "created": "2017-05-31T21:31:34.528Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--52d40641-c480-4ad5-81a3-c80ccaddf82d",
                "name": "Authentication Package",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1131",
                        "url": "https://attack.mitre.org/techniques/T1131"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx",
                        "description": "Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.",
                        "source_name": "MSDN Authentication Packages"
                    },
                    {
                        "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html",
                        "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.",
                        "source_name": "Graeber 2014"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/dn408187.aspx",
                        "description": "Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.",
                        "source_name": "Microsoft Configure LSA"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T15:43:25.280Z",
                "created": "2017-05-31T21:31:43.135Z"
            },
            {
                "id": "attack-pattern--b8cfed42-6a8a-4989-ad72-541af74475ec",
                "description": "Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. (Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.",
                "name": "Authentication Package",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1547.002",
                        "url": "https://attack.mitre.org/techniques/T1547/002"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx",
                        "description": "Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.",
                        "source_name": "MSDN Authentication Packages"
                    },
                    {
                        "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html",
                        "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.",
                        "source_name": "Graeber 2014"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/dn408187.aspx",
                        "description": "Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.",
                        "source_name": "Microsoft Configure LSA"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-25T15:11:25.821Z",
                "created": "2020-01-24T14:54:42.757Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "DLL monitoring",
                    "Windows Registry",
                    "Loaded DLLs"
                ],
                "x_mitre_detection": "Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)",
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "created": "2017-05-31T21:31:27.985Z",
                "modified": "2020-03-31T22:18:43.019Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Automated Collection",
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1119",
                    "external_id": "T1119"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "x_mitre_system_requirements": [
                    "Permissions to access directories and files that store information of interest."
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [Data Staged](https://attack.mitre.org/techniques/T1074). As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Data loss prevention",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Automated Exfiltration",
                "description": "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1020",
                    "external_id": "T1020"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-11T13:58:08.219Z",
                "created": "2017-05-31T21:30:29.458Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process use of network"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "id": "attack-pattern--c8e87b83-edbb-48d4-9295-4974897525b7",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "BITS Jobs",
                "description": "Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM). (Citation: Microsoft COM) (Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001)  (Citation: Microsoft BITS) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool. (Citation: Microsoft BITSAdmin)\n\nAdversaries may abuse BITS to download, execute, and even clean up after running malicious code. BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls. (Citation: CTU BITS Malware June 2016) (Citation: Mondok Windows PiggyBack BITS May 2007) (Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots). (Citation: PaloAlto UBoatRAT Nov 2017) (Citation: CTU BITS Malware June 2016)\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). (Citation: CTU BITS Malware June 2016)",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1197",
                        "url": "https://attack.mitre.org/techniques/T1197"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx",
                        "description": "Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.",
                        "source_name": "Microsoft COM"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/bb968799.aspx",
                        "description": "Microsoft. (n.d.). Background Intelligent Transfer Service. Retrieved January 12, 2018.",
                        "source_name": "Microsoft BITS"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/aa362813.aspx",
                        "description": "Microsoft. (n.d.). BITSAdmin Tool. Retrieved January 12, 2018.",
                        "source_name": "Microsoft BITSAdmin"
                    },
                    {
                        "url": "https://www.secureworks.com/blog/malware-lingers-with-bits",
                        "description": "Counter Threat Unit Research Team. (2016, June 6). Malware Lingers with BITS. Retrieved January 12, 2018.",
                        "source_name": "CTU BITS Malware June 2016"
                    },
                    {
                        "url": "https://arstechnica.com/information-technology/2007/05/malware-piggybacks-on-windows-background-intelligent-transfer-service/",
                        "description": "Mondok, M. (2007, May 11). Malware piggybacks on Windows\u2019 Background Intelligent Transfer Service. Retrieved January 12, 2018.",
                        "source_name": "Mondok Windows PiggyBack BITS May 2007"
                    },
                    {
                        "url": "https://www.symantec.com/connect/blogs/malware-update-windows-update",
                        "description": "Florio, E. (2007, May 9). Malware Update with Windows Update. Retrieved January 12, 2018.",
                        "source_name": "Symantec BITS May 2007"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2017/11/unit42-uboatrat-navigates-east-asia/",
                        "description": "Hayashi, K. (2017, November 28). UBoatRAT Navigates East Asia. Retrieved January 12, 2018.",
                        "source_name": "PaloAlto UBoatRAT Nov 2017"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/dd939934.aspx",
                        "description": "Microsoft. (2011, July 19). Issues with BITS. Retrieved January 12, 2018.",
                        "source_name": "Microsoft Issues with BITS July 2011"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-25T23:28:10.049Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>). (Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (<code>bitsadmin /list /allusers /verbose</code>). (Citation: Microsoft BITS)\n\nMonitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the \u2018Transfer\u2019, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)  (Citation: Microsoft BITS)Admin and the Windows Event log for BITS activity. Also consider investigating more detailed information about jobs by parsing the BITS job database. (Citation: CTU BITS Malware June 2016)\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account). (Citation: Microsoft BITS)",
                "x_mitre_defense_bypassed": [
                    "Firewall",
                    "Host forensic analysis"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters",
                    "Packet capture",
                    "Windows event logs"
                ],
                "x_mitre_contributors": [
                    "Ricardo Dias",
                    "Red Canary"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1139",
                        "url": "https://attack.mitre.org/techniques/T1139"
                    },
                    {
                        "url": "http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way",
                        "description": "Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.",
                        "source_name": "External to DA, the OS X Way"
                    }
                ],
                "name": "Bash History",
                "id": "attack-pattern--44dca04b-808d-46ca-b25f-d85236d4b9f8",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-04T13:03:03.354Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1552.003",
                        "url": "https://attack.mitre.org/techniques/T1552/003"
                    },
                    {
                        "url": "http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way",
                        "description": "Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.",
                        "source_name": "External to DA, the OS X Way"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Bash History",
                "description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
                "id": "attack-pattern--8187bd2a-866f-4457-9009-86b0ddedffa3",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-02-07T20:48:49.878Z",
                "created": "2020-02-04T13:02:11.685Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS"
                ]
            },
            {
                "created": "2020-03-14T22:34:03.024Z",
                "modified": "2020-03-26T23:15:47.861Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--be055942-6e63-49d7-9fa1-9cb7d8a8f3f4",
                "description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",
                "name": "Bidirectional Communication",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1102.002",
                        "url": "https://attack.mitre.org/techniques/T1102/002"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Host network interface",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "Packet capture",
                    "SSL/TLS inspection"
                ],
                "x_mitre_detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "revoked": true,
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1009",
                        "url": "https://attack.mitre.org/techniques/T1009"
                    },
                    {
                        "external_id": "CAPEC-572",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/572.html"
                    },
                    {
                        "source_name": "ESET OceanLotus",
                        "description": "Folt\u00fdn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.",
                        "url": "https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/"
                    },
                    {
                        "source_name": "Securelist Malware Tricks April 2017",
                        "url": "https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/",
                        "description": "Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019."
                    },
                    {
                        "source_name": "VirusTotal FAQ",
                        "url": "https://www.virustotal.com/en/faq/ ",
                        "description": "VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019."
                    }
                ],
                "name": "Binary Padding",
                "id": "attack-pattern--519630c5-f03f-4882-825c-3af924935817",
                "type": "attack-pattern",
                "modified": "2020-02-05T15:08:05.575Z",
                "created": "2017-05-31T21:30:22.096Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1027.001",
                        "url": "https://attack.mitre.org/techniques/T1027/001"
                    },
                    {
                        "external_id": "CAPEC-572",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/572.html"
                    },
                    {
                        "source_name": "ESET OceanLotus",
                        "description": "Folt\u00fdn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.",
                        "url": "https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/"
                    },
                    {
                        "source_name": "Securelist Malware Tricks April 2017",
                        "url": "https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/",
                        "description": "Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019."
                    },
                    {
                        "source_name": "VirusTotal FAQ",
                        "url": "https://www.virustotal.com/en/faq/ ",
                        "description": "VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Binary Padding",
                "description": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ",
                "id": "attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T20:50:48.023Z",
                "created": "2020-02-05T14:04:25.865Z",
                "x_mitre_contributors": [
                    "Martin Jirkal, ESET"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Binary file metadata",
                    "File monitoring",
                    "Malware reverse engineering"
                ],
                "x_mitre_detection": "Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. ",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Signature-based detection"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1547",
                        "url": "https://attack.mitre.org/techniques/T1547"
                    },
                    {
                        "url": "http://msdn.microsoft.com/en-us/library/aa376977",
                        "description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.",
                        "source_name": "Microsoft Run Key"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx",
                        "description": "Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.",
                        "source_name": "MSDN Authentication Packages"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx",
                        "description": "Microsoft. (n.d.). Time Provider. Retrieved March 26, 2018.",
                        "source_name": "Microsoft TimeProvider"
                    },
                    {
                        "url": "https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order",
                        "description": "Langendorf, S. (2013, September 24). Windows Registry Persistence, Part 2: The Run Keys and Search-Order. Retrieved April 11, 2018.",
                        "source_name": "Cylance Reg Persistence Sept 2013"
                    },
                    {
                        "source_name": "Linux Kernel Programming",
                        "url": "https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf",
                        "description": "Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018."
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Boot or Logon Autostart Execution",
                "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\u00a0 These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
                "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-06-30T21:23:15.683Z",
                "created": "2020-01-23T17:46:59.535Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "root"
                ],
                "x_mitre_detection": "Monitor for additions or modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. Look for changes that are not correlated with known updates, patches, or other planned administrative activity. Tools such as Sysinternals Autoruns may also be used to detect system autostart configuration changes that could be attempts at persistence.(Citation: TechNet Autoruns)  Changes to some autostart configuration settings may happen under normal conditions when legitimate software is installed. \n\nSuspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data.To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.\n\nMonitor for abnormal usage of utilities and command-line parameters involved in kernel modification or driver installation.",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1037",
                        "url": "https://attack.mitre.org/techniques/T1037"
                    },
                    {
                        "external_id": "CAPEC-564",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/564.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-27T16:49:15.953Z",
                "created": "2017-05-31T21:30:38.910Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "macOS",
                    "Windows"
                ],
                "x_mitre_detection": "Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring"
                ],
                "x_mitre_version": "2.0"
            },
            {
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "name": "Bootkit",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1067",
                        "url": "https://attack.mitre.org/techniques/T1067"
                    },
                    {
                        "url": "https://www.fireeye.com/content/dam/fireeye-www/regional/fr_FR/offers/pdfs/ig-mtrends-2016.pdf",
                        "description": "Mandiant. (2016, February). M-Trends 2016. Retrieved January 4, 2017.",
                        "source_name": "MTrends 2016"
                    },
                    {
                        "url": "http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion",
                        "description": "Lau, H. (2011, August 8). Are MBR Infections Back in Fashion? (Infographic). Retrieved November 13, 2014.",
                        "source_name": "Lau 2011"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-20T19:53:25.628Z",
                "created": "2017-05-31T21:30:54.661Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1542.003",
                        "url": "https://attack.mitre.org/techniques/T1542/003"
                    },
                    {
                        "source_name": "Mandiant M Trends 2016",
                        "url": "https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf",
                        "description": "Mandiant. (2016, February 25). Mandiant M-Trends 2016. Retrieved March 5, 2019."
                    },
                    {
                        "url": "http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion",
                        "description": "Lau, H. (2011, August 8). Are MBR Infections Back in Fashion? (Infographic). Retrieved November 13, 2014.",
                        "source_name": "Lau 2011"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Bootkit",
                "description": "Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--1b7b1806-7746-41a1-a35d-e48dae25ddba",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-05-07T22:32:05.335Z",
                "created": "2019-12-19T21:05:38.123Z",
                "x_mitre_defense_bypassed": [
                    "Host intrusion prevention systems",
                    "Anti-virus",
                    "File monitoring"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.",
                "x_mitre_data_sources": [
                    "VBR",
                    "MBR",
                    "API monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--5e4a2073-9643-44cb-a0b5-e7f4048446c7",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Browser Bookmark Discovery",
                "description": "Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\n\nBrowser bookmarks may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser bookmarks are typically stored in local files/databases.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1217",
                    "external_id": "T1217"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-26T16:06:07.367Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_contributors": [
                    "Mike Kemmerer"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Browser Extensions",
                "description": "Adversaries may abuse Internet browser extensions to establish persistence access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access. (Citation: Wikipedia Browser Extension) (Citation: Chrome Extensions Definition)\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners. (Citation: Malicious Chrome Extension Numbers) Once the extension is installed, it can browse to websites in the background, (Citation: Chrome Extension Crypto Miner) (Citation: ICEBRG Chrome Extensions) steal all information that a user enters into a browser (including credentials) (Citation: Banker Google Chrome Extension Steals Creds) (Citation: Catch All Chrome Extension) and be used as an installer for a RAT for persistence.\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions. (Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control  (Citation: Chrome Extension C2 Malware).",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1176",
                        "url": "https://attack.mitre.org/techniques/T1176"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Browser_extension",
                        "description": "Wikipedia. (2017, October 8). Browser Extension. Retrieved January 11, 2018.",
                        "source_name": "Wikipedia Browser Extension"
                    },
                    {
                        "url": "https://developer.chrome.com/extensions",
                        "description": "Chrome. (n.d.). What are Extensions?. Retrieved November 16, 2017.",
                        "source_name": "Chrome Extensions Definition"
                    },
                    {
                        "url": "https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43824.pdf",
                        "description": "Jagpal, N., et al. (2015, August). Trends and Lessons from Three Years Fighting Malicious Extensions. Retrieved November 17, 2017.",
                        "source_name": "Malicious Chrome Extension Numbers"
                    },
                    {
                        "url": "https://www.ghacks.net/2017/09/19/first-chrome-extension-with-javascript-crypto-miner-detected/",
                        "description": "Brinkmann, M. (2017, September 19). First Chrome extension with JavaScript Crypto Miner detected. Retrieved November 16, 2017.",
                        "source_name": "Chrome Extension Crypto Miner"
                    },
                    {
                        "url": "https://www.icebrg.io/blog/malicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses",
                        "description": "De Tore, M., Warner, J. (2018, January 15). MALICIOUS CHROME EXTENSIONS ENABLE CRIMINALS TO IMPACT OVER HALF A MILLION USERS AND GLOBAL BUSINESSES. Retrieved January 17, 2018.",
                        "source_name": "ICEBRG Chrome Extensions"
                    },
                    {
                        "url": "https://isc.sans.edu/forums/diary/BankerGoogleChromeExtensiontargetingBrazil/22722/",
                        "description": "Marinho, R. (n.d.). (Banker(GoogleChromeExtension)).targeting. Retrieved November 18, 2017.",
                        "source_name": "Banker Google Chrome Extension Steals Creds"
                    },
                    {
                        "url": "https://isc.sans.edu/forums/diary/CatchAll+Google+Chrome+Malicious+Extension+Steals+All+Posted+Data/22976/https:/threatpost.com/malicious-chrome-extension-steals-data-posted-to-any-website/128680/)",
                        "description": "Marinho, R. (n.d.). \"Catch-All\" Google Chrome Malicious Extension Steals All Posted Data. Retrieved November 16, 2017.",
                        "source_name": "Catch All Chrome Extension"
                    },
                    {
                        "url": "https://www.welivesecurity.com/2017/07/20/stantinko-massive-adware-campaign-operating-covertly-since-2012/",
                        "description": "Vachon, F., Faou, M. (2017, July 20). Stantinko: A massive adware campaign operating covertly since 2012. Retrieved November 16, 2017.",
                        "source_name": "Stantinko Botnet"
                    },
                    {
                        "url": "https://kjaer.io/extension-malware/",
                        "description": "Kjaer, M. (2016, July 18). Malware in the browser: how you might get hacked by a Chrome extension. Retrieved November 22, 2017.",
                        "source_name": "Chrome Extension C2 Malware"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-25T23:36:30.565Z",
                "created": "2018-01-16T16:13:52.465Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\n\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.",
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "File monitoring",
                    "Process use of network",
                    "Process monitoring",
                    "Browser extensions"
                ],
                "x_mitre_contributors": [
                    "Justin Warner, ICEBRG"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "id": "attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Brute Force",
                "description": "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1110",
                        "url": "https://attack.mitre.org/techniques/T1110"
                    },
                    {
                        "external_id": "CAPEC-49",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/49.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-07-09T17:01:18.302Z",
                "created": "2017-05-31T21:31:22.767Z",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "Office 365",
                    "Azure AD",
                    "SaaS",
                    "GCP",
                    "AWS",
                    "Azure"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor authentication log for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.",
                "x_mitre_data_sources": [
                    "Office 365 account logs",
                    "Authentication logs"
                ],
                "x_mitre_contributors": [
                    "Ed Williams, Trustwave, SpiderLabs"
                ],
                "x_mitre_version": "2.1",
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. (Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box. (Citation: TechNet Inside UAC) (Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "name": "Bypass User Access Control",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1548.002",
                        "url": "https://attack.mitre.org/techniques/T1548/002"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works",
                        "description": "Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.",
                        "source_name": "TechNet How UAC Works"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx",
                        "description": "Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.",
                        "source_name": "TechNet Inside UAC"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/ms679687.aspx",
                        "description": "Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.",
                        "source_name": "MSDN COM Elevation"
                    },
                    {
                        "url": "http://www.pretentiousname.com/misc/win7_uac_whitelist2.html",
                        "description": "Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.",
                        "source_name": "Davidson Windows"
                    },
                    {
                        "url": "https://github.com/hfiref0x/UACME",
                        "description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.",
                        "source_name": "Github UACMe"
                    },
                    {
                        "url": "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/",
                        "description": "Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.",
                        "source_name": "enigma0x3 Fileless UAC Bypass"
                    },
                    {
                        "url": "https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware",
                        "description": "Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.",
                        "source_name": "Fortinet Fareit"
                    },
                    {
                        "url": "http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass",
                        "description": "Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.",
                        "source_name": "SANS UAC Bypass"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/",
                        "description": "Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.",
                        "source_name": "enigma0x3 sdclt app paths"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/",
                        "description": "Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.",
                        "source_name": "enigma0x3 sdclt bypass"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-25T19:57:54.510Z",
                "created": "2020-01-30T14:24:34.977Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Stefan Kanthak",
                    "Casey Smith"
                ],
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_detection": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\n\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_effective_permissions": [
                    "Administrator"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_defense_bypassed": [
                    "Windows User Account Control"
                ]
            },
            {
                "id": "attack-pattern--ca1a3f50-5ebd-41f8-8320-2c7d6a6e88be",
                "name": "Bypass User Account Control",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1088",
                        "url": "https://attack.mitre.org/techniques/T1088"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works",
                        "description": "Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.",
                        "source_name": "TechNet How UAC Works"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx",
                        "description": "Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.",
                        "source_name": "TechNet Inside UAC"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/ms679687.aspx",
                        "description": "Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.",
                        "source_name": "MSDN COM Elevation"
                    },
                    {
                        "url": "http://www.pretentiousname.com/misc/win7_uac_whitelist2.html",
                        "description": "Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.",
                        "source_name": "Davidson Windows"
                    },
                    {
                        "url": "https://github.com/hfiref0x/UACME",
                        "description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.",
                        "source_name": "Github UACMe"
                    },
                    {
                        "url": "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/",
                        "description": "Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.",
                        "source_name": "enigma0x3 Fileless UAC Bypass"
                    },
                    {
                        "url": "https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware",
                        "description": "Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.",
                        "source_name": "Fortinet Fareit"
                    },
                    {
                        "url": "http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass",
                        "description": "Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.",
                        "source_name": "SANS UAC Bypass"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/",
                        "description": "Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.",
                        "source_name": "enigma0x3 sdclt app paths"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/",
                        "description": "Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.",
                        "source_name": "enigma0x3 sdclt bypass"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-05T20:08:32.863Z",
                "created": "2017-05-31T21:31:07.462Z"
            },
            {
                "id": "attack-pattern--7d6f590f-544b-45b4-9a42-e0805f342af3",
                "name": "CMSTP",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1191",
                        "url": "https://attack.mitre.org/techniques/T1191"
                    },
                    {
                        "url": "https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc786431(v=ws.10)",
                        "description": "Microsoft. (2009, October 8). How Connection Manager Works. Retrieved April 11, 2018.",
                        "source_name": "Microsoft Connection Manager Oct 2009"
                    },
                    {
                        "source_name": "Twitter CMSTP Usage Jan 2018",
                        "description": "Carr, N. (2018, January 31). Here is some early bad cmstp.exe... Retrieved April 11, 2018.",
                        "url": "https://twitter.com/ItsReallyNick/status/958789644165894146"
                    },
                    {
                        "url": "https://msitpros.com/?p=3960",
                        "description": "Moe, O. (2017, August 15). Research on CMSTP.exe. Retrieved April 11, 2018.",
                        "source_name": "MSitPros CMSTP Aug 2017"
                    },
                    {
                        "url": "https://twitter.com/NickTyrer/status/958450014111633408",
                        "description": "Tyrer, N. (2018, January 30). CMSTP.exe - remote .sct execution applocker bypass. Retrieved April 11, 2018.",
                        "source_name": "Twitter CMSTP Jan 2018"
                    },
                    {
                        "url": "https://github.com/api0cradle/UltimateAppLockerByPassList",
                        "description": "Moe, O. (2018, March 1). Ultimate AppLocker Bypass List. Retrieved April 10, 2018.",
                        "source_name": "GitHub Ultimate AppLocker Bypass List"
                    },
                    {
                        "source_name": "Endurant CMSTP July 2018",
                        "description": "Seetharaman, N. (2018, July 7). Detecting CMSTP-Enabled Code Execution and UAC Bypass With Sysmon.. Retrieved August 6, 2018.",
                        "url": "http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-31T18:58:17.078Z",
                "created": "2018-04-18T17:59:24.739Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1218.003",
                        "url": "https://attack.mitre.org/techniques/T1218/003"
                    },
                    {
                        "url": "https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc786431(v=ws.10)",
                        "description": "Microsoft. (2009, October 8). How Connection Manager Works. Retrieved April 11, 2018.",
                        "source_name": "Microsoft Connection Manager Oct 2009"
                    },
                    {
                        "url": "https://twitter.com/ItsReallyNick/status/958789644165894146",
                        "description": "Carr, N. (2018, January 31). Here is some early bad cmstp.exe... Retrieved April 11, 2018.",
                        "source_name": "Twitter CMSTP Usage Jan 2018"
                    },
                    {
                        "url": "https://msitpros.com/?p=3960",
                        "description": "Moe, O. (2017, August 15). Research on CMSTP.exe. Retrieved April 11, 2018.",
                        "source_name": "MSitPros CMSTP Aug 2017"
                    },
                    {
                        "url": "https://twitter.com/NickTyrer/status/958450014111633408",
                        "description": "Tyrer, N. (2018, January 30). CMSTP.exe - remote .sct execution applocker bypass. Retrieved April 11, 2018.",
                        "source_name": "Twitter CMSTP Jan 2018"
                    },
                    {
                        "url": "https://github.com/api0cradle/UltimateAppLockerByPassList",
                        "description": "Moe, O. (2018, March 1). Ultimate AppLocker Bypass List. Retrieved April 10, 2018.",
                        "source_name": "GitHub Ultimate AppLocker Bypass List"
                    },
                    {
                        "url": "http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
                        "description": "Seetharaman, N. (2018, July 7). Detecting CMSTP-Enabled Code Execution and UAC Bypass With Sysmon.. Retrieved August 6, 2018.",
                        "source_name": "Endurant CMSTP July 2018"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "CMSTP",
                "description": "Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / \u201dSquiblydoo\u201d, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate, signed Microsoft application.\n\nCMSTP.exe can also be abused to [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)",
                "id": "attack-pattern--4cbc6a62-9e34-4f94-8a19-5c1a11392a49",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T22:34:03.247Z",
                "created": "2020-01-23T18:27:30.656Z",
                "x_mitre_contributors": [
                    "Nik Seetharaman, Palantir",
                    "Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank"
                ],
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "Process use of network",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Application control"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.\n\nSysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)\n\n* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.\n* To detect [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002) via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).",
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574.012",
                        "url": "https://attack.mitre.org/techniques/T1574/012"
                    },
                    {
                        "source_name": "Microsoft Profiling Mar 2017",
                        "url": "https://docs.microsoft.com/en-us/dotnet/framework/unmanaged-api/profiling/profiling-overview",
                        "description": "Microsoft. (2017, March 30). Profiling Overview. Retrieved June 24, 2020."
                    },
                    {
                        "source_name": "Microsoft COR_PROFILER Feb 2013",
                        "url": "https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)",
                        "description": "Microsoft. (2013, February 4). Registry-Free Profiler Startup and Attach. Retrieved June 24, 2020."
                    },
                    {
                        "source_name": "RedCanary Mockingbird May 2020",
                        "url": "https://redcanary.com/blog/blue-mockingbird-cryptominer/",
                        "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020."
                    },
                    {
                        "source_name": "Red Canary COR_PROFILER May 2020",
                        "url": "https://redcanary.com/blog/cor_profiler-for-persistence/",
                        "description": "Brown, J. (2020, May 7). Detecting COR_PROFILER manipulation for persistence. Retrieved June 24, 2020."
                    },
                    {
                        "source_name": "Almond COR_PROFILER Apr 2019",
                        "url": "https://offsec.almond.consulting/UAC-bypass-dotnet.html",
                        "description": "Almond. (2019, April 30). UAC bypass via elevated .NET applications. Retrieved June 24, 2020."
                    },
                    {
                        "source_name": "GitHub OmerYa Invisi-Shell",
                        "url": "https://github.com/OmerYa/Invisi-Shell",
                        "description": "Yair, O. (2019, August 19). Invisi-Shell. Retrieved June 24, 2020."
                    },
                    {
                        "source_name": "subTee .NET Profilers May 2017",
                        "url": "https://web.archive.org/web/20170720041203/http://subt0x10.blogspot.com/2017/05/subvert-clr-process-listing-with-net.html",
                        "description": "Smith, C. (2017, May 18). Subvert CLR Process Listing With .NET Profilers. Retrieved June 24, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "COR_PROFILER",
                "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)",
                "id": "attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-26T16:09:58.920Z",
                "created": "2020-06-24T22:30:55.843Z",
                "x_mitre_detection": "For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.",
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_contributors": [
                    "Jesse Brown, Red Canary"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1003.005",
                        "url": "https://attack.mitre.org/techniques/T1003/005"
                    },
                    {
                        "source_name": "Microsoft - Cached Creds",
                        "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh994565(v%3Dws.11)",
                        "description": "Microsfot. (2016, August 21). Cached and Stored Credentials Technical Overview. Retrieved February 21, 2020."
                    },
                    {
                        "source_name": "PassLib mscache",
                        "url": "https://passlib.readthedocs.io/en/stable/lib/passlib.hash.msdcc2.html",
                        "description": "Eli Collins. (2016, November 25). Windows' Domain Cached Credentials v2. Retrieved February 21, 2020."
                    },
                    {
                        "source_name": "ired mscache",
                        "url": "https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-and-cracking-mscash-cached-domain-credentials",
                        "description": "Mantvydas Baranauskas. (2019, November 16). Dumping and Cracking mscash - Cached Domain Credentials. Retrieved February 21, 2020."
                    },
                    {
                        "url": "https://github.com/mattifestation/PowerSploit",
                        "description": "PowerSploit. (n.d.). Retrieved December 4, 2014.",
                        "source_name": "Powersploit"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cached Domain Credentials",
                "description": "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)\n\nWith SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)",
                "id": "attack-pattern--6add2ab5-2711-4e9d-87c8-7a0be8531530",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-24T20:41:08.996Z",
                "created": "2020-02-21T15:42:25.991Z",
                "x_mitre_contributors": [
                    "Ed Williams, Trustwave, SpiderLabs"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nDetection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.",
                "x_mitre_data_sources": [
                    "PowerShell logs",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "SYSTEM"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--68c96494-1a50-403e-8844-69a6af278c68",
                "name": "Change Default File Association",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1042",
                        "url": "https://attack.mitre.org/techniques/T1042"
                    },
                    {
                        "external_id": "CAPEC-556",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/556.html"
                    },
                    {
                        "url": "https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs",
                        "description": "Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.",
                        "source_name": "Microsoft Change Default Programs"
                    },
                    {
                        "url": "http://msdn.microsoft.com/en-us/library/bb166549.aspx",
                        "description": "Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.",
                        "source_name": "Microsoft File Handlers"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-server/administration/windows-commands/assoc",
                        "description": "Plett, C. et al.. (2017, October 15). assoc. Retrieved August 7, 2018.",
                        "source_name": "Microsoft Assoc Oct 2017"
                    },
                    {
                        "url": "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_fakeav.gzd",
                        "description": "Sioting, S. (2012, October 8). TROJ_FAKEAV.GZD. Retrieved August 8, 2018.",
                        "source_name": "TrendMicro TROJ-FAKEAV OCT 2012"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T13:41:32.520Z",
                "created": "2017-05-31T21:30:42.222Z"
            },
            {
                "created": "2020-01-24T13:40:47.282Z",
                "modified": "2020-01-24T13:40:47.282Z",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "type": "attack-pattern",
                "id": "attack-pattern--98034fef-d9fb-4667-8dc4-2eab6231724c",
                "description": "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access (Citation: Microsoft Change Default Programs) (Citation: Microsoft File Handlers) or by administrators using the built-in assoc utility. (Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under <code>HKEY_CLASSES_ROOT\\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\[handler]\\shell\\[action]\\command</code>. For example: \n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands. (Citation: TrendMicro TROJ-FAKEAV OCT 2012)",
                "name": "Change Default File Association",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.001",
                        "url": "https://attack.mitre.org/techniques/T1546/001"
                    },
                    {
                        "external_id": "CAPEC-556",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/556.html"
                    },
                    {
                        "url": "https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs",
                        "description": "Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.",
                        "source_name": "Microsoft Change Default Programs"
                    },
                    {
                        "url": "http://msdn.microsoft.com/en-us/library/bb166549.aspx",
                        "description": "Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.",
                        "source_name": "Microsoft File Handlers"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-server/administration/windows-commands/assoc",
                        "description": "Plett, C. et al.. (2017, October 15). assoc. Retrieved August 7, 2018.",
                        "source_name": "Microsoft Assoc Oct 2017"
                    },
                    {
                        "url": "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_fakeav.gzd",
                        "description": "Sioting, S. (2012, October 8). TROJ_FAKEAV.GZD. Retrieved August 8, 2018.",
                        "source_name": "TrendMicro TROJ-FAKEAV OCT 2012"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Travis Smith, Tripwire",
                    "Stefan Kanthak"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "Windows Registry"
                ],
                "x_mitre_detection": "Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\n\nUser file association preferences are stored under <code> [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM",
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--d3046a90-580c-4004-8208-66915bc29830",
                "name": "Clear Command History",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1146",
                    "external_id": "T1146"
                }],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-31T12:32:52.281Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1070.003",
                    "url": "https://attack.mitre.org/techniques/T1070/003"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. macOS and Linux both keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nThese logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries can use a variety of methods to prevent their own commands from appear in these logs, such as clearing the history environment variable (<code>unset HISTFILE</code>), setting the command history size to zero (<code>export HISTFILESIZE=0</code>), manually clearing the history (<code>history -c</code>), or deleting the bash history file <code>rm ~/.bash_history</code>.",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T21:31:03.043Z",
                "created": "2020-01-31T12:32:08.228Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_defense_bypassed": [
                    "Host forensic analysis",
                    "Log analysis"
                ],
                "x_mitre_detection": "User authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the modification of the <code>HISTFILE</code> and <code>HISTFILESIZE</code> environment variables or the removal/clearing of the <code>~/.bash_history</code> file are indicators of suspicious activity.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Authentication logs"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1070.002",
                        "url": "https://attack.mitre.org/techniques/T1070/002"
                    },
                    {
                        "source_name": "Linux Logs",
                        "url": "https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/",
                        "description": "Marcel. (2018, April 19). 12 Critical Linux Log Files You Must be Monitoring. Retrieved March 29, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T21:23:51.886Z",
                "created": "2020-01-28T17:11:54.034Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1070.001",
                        "url": "https://attack.mitre.org/techniques/T1070/001"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-server/administration/windows-commands/wevtutil",
                        "description": "Plett, C. et al.. (2017, October 16). wevtutil. Retrieved July 2, 2018.",
                        "source_name": "Microsoft wevtutil Oct 2017"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/system.diagnostics.eventlog.clear.aspx",
                        "description": "Microsoft. (n.d.). EventLog.Clear Method (). Retrieved July 2, 2018.",
                        "source_name": "Microsoft EventLog.Clear"
                    },
                    {
                        "url": "https://docs.microsoft.com/powershell/module/microsoft.powershell.management/clear-eventlog",
                        "description": "Microsoft. (n.d.). Clear-EventLog. Retrieved July 2, 2018.",
                        "source_name": "Microsoft Clear-EventLog"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T21:17:03.732Z",
                "created": "2020-01-28T17:05:14.707Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_system_requirements": [
                    "Clearing the Windows event logs requires Administrator permissions"
                ],
                "x_mitre_defense_bypassed": [
                    "Anti Virus",
                    "Host Intrusion Prevention Systems",
                    "Log Analysis"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: \"The audit log was cleared\").",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Clipboard Data",
                "description": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nIn Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1115",
                        "url": "https://attack.mitre.org/techniques/T1115"
                    },
                    {
                        "external_id": "CAPEC-637",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/637.html"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/ms649012",
                        "description": "Microsoft. (n.d.). About the Clipboard. Retrieved March 29, 2016.",
                        "source_name": "MSDN Clipboard"
                    },
                    {
                        "url": "https://medium.com/rvrsh3ll/operating-with-empyre-ea764eda3363",
                        "description": "rvrsh3ll. (2016, May 18). Operating with EmPyre. Retrieved July 12, 2017.",
                        "source_name": "Operating with EmPyre"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-04-23T18:35:58.230Z",
                "created": "2017-05-31T21:31:25.967Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_detection": "Access to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.",
                "x_mitre_data_sources": [
                    "API monitoring"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1136.003",
                        "url": "https://attack.mitre.org/techniques/T1136/003"
                    },
                    {
                        "source_name": "Microsoft O365 Admin Roles",
                        "url": "https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide",
                        "description": "Ako-Adjei, K., Dickhaus, M., Baumgartner, P., Faigel, D., et. al.. (2019, October 8). About admin roles. Retrieved October 18, 2019."
                    },
                    {
                        "source_name": "Microsoft Support O365 Add Another Admin, October 2019",
                        "url": "https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d",
                        "description": "Microsoft. (n.d.). Add Another Admin. Retrieved October 18, 2019."
                    },
                    {
                        "source_name": "AWS Create IAM User",
                        "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html",
                        "description": "AWS. (n.d.). Creating an IAM User in Your AWS Account. Retrieved January 29, 2020."
                    },
                    {
                        "source_name": "GCP Create Cloud Identity Users",
                        "url": "https://support.google.com/cloudidentity/answer/7332836?hl=en&ref_topic=7558554",
                        "description": "Google. (n.d.). Create Cloud Identity user accounts. Retrieved January 29, 2020."
                    },
                    {
                        "source_name": "Microsoft Azure AD Users",
                        "url": "https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/add-users-azure-active-directory",
                        "description": "Microsoft. (2019, November 11). Add or delete users using Azure Active Directory. Retrieved January 30, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cloud Account",
                "description": "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.",
                "id": "attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-24T12:44:27.995Z",
                "created": "2020-01-29T17:32:30.711Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.",
                "x_mitre_data_sources": [
                    "Office 365 audit logs",
                    "Stackdriver logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_contributors": [
                    "Praetorian",
                    "Microsoft Threat Intelligence Center (MSTIC)"
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1087.004",
                        "url": "https://attack.mitre.org/techniques/T1087/004"
                    },
                    {
                        "description": "Microsoft. (n.d.). Get-MsolRoleMember. Retrieved October 6, 2019.",
                        "url": "https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrolemember?view=azureadps-1.0",
                        "source_name": "Microsoft msolrolemember"
                    },
                    {
                        "description": "Stringer, M.. (2018, November 21). RainDance. Retrieved October 6, 2019.",
                        "url": "https://github.com/True-Demon/raindance",
                        "source_name": "GitHub Raindance"
                    },
                    {
                        "description": "Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.",
                        "url": "https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest",
                        "source_name": "Microsoft AZ CLI"
                    },
                    {
                        "description": "Felch, M.. (2018, August 31). Red Teaming Microsoft Part 1 Active Directory Leaks via Azure. Retrieved October 6, 2019.",
                        "url": "https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/",
                        "source_name": "Black Hills Red Teaming MS AD Azure, 2018"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cloud Account",
                "description": "Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider of SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance)\n\nAzure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) ",
                "id": "attack-pattern--8f104855-e5b7-4077-b1f5-bc3103b41abe",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-13T20:05:15.448Z",
                "created": "2020-02-21T21:08:36.570Z",
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "Office 365 account logs",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD",
                    "SaaS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1078.004",
                        "url": "https://attack.mitre.org/techniques/T1078/004"
                    },
                    {
                        "source_name": "AWS Identity Federation",
                        "url": "https://aws.amazon.com/identity/federation/",
                        "description": "Amazon. (n.d.). Identity Federation in AWS. Retrieved March 13, 2020."
                    },
                    {
                        "source_name": "Google Federating GC",
                        "url": "https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction",
                        "description": "Google. (n.d.). Federating Google Cloud with Active Directory. Retrieved March 13, 2020."
                    },
                    {
                        "source_name": "Microsoft Deploying AD Federation",
                        "url": "https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs",
                        "description": "Microsoft. (n.d.). Deploying Active Directory Federation Services in Azure. Retrieved March 13, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cloud Accounts",
                "description": "Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\n\nCompromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.",
                "id": "attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "initial-access"
                    }
                ],
                "modified": "2020-03-23T21:59:36.729Z",
                "created": "2020-03-13T20:36:57.378Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_detection": "Perform regular audits of cloud accounts to detect abnormal or malicious activity, such as accessing information outside of the normal function of the account or account usage at atypical hours.",
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "Authentication logs",
                    "AWS CloudTrail logs",
                    "Stackdriver logs"
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure",
                    "SaaS",
                    "Azure AD",
                    "Office 365"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1069.003",
                        "url": "https://attack.mitre.org/techniques/T1069/003"
                    },
                    {
                        "source_name": "Microsoft Msolrole",
                        "url": "https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrole?view=azureadps-1.0",
                        "description": "Microsoft. (n.d.). Get-MsolRole. Retrieved October 6, 2019."
                    },
                    {
                        "description": "Stringer, M.. (2018, November 21). RainDance. Retrieved October 6, 2019.",
                        "url": "https://github.com/True-Demon/raindance",
                        "source_name": "GitHub Raindance"
                    },
                    {
                        "description": "Microsoft. (n.d.). az ad user. Retrieved October 6, 2019.",
                        "url": "https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest",
                        "source_name": "Microsoft AZ CLI"
                    },
                    {
                        "description": "Felch, M.. (2018, August 31). Red Teaming Microsoft Part 1 Active Directory Leaks via Azure. Retrieved October 6, 2019.",
                        "url": "https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/",
                        "source_name": "Black Hills Red Teaming MS AD Azure, 2018"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cloud Groups",
                "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts.(Citation: Microsoft Msolrole)(Citation: GitHub Raindance)\n\nAzure CLI (AZ CLI) also provides an interface to obtain permissions groups with authenticated access to a domain. The command <code>az ad user get-member-groups</code> will list groups associated to a user account.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)",
                "id": "attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-12T19:25:12.782Z",
                "created": "2020-02-21T21:15:33.222Z",
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "Office 365 account logs",
                    "API monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Office 365",
                    "Azure AD"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1522",
                        "url": "https://attack.mitre.org/techniques/T1522"
                    },
                    {
                        "source_name": "AWS Instance Metadata API",
                        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
                        "description": "AWS. (n.d.). Instance Metadata and User Data. Retrieved July 18, 2019."
                    },
                    {
                        "description": "Higashi, Michael. (2018, May 15). Instance Metadata API: A Modern Day Trojan Horse. Retrieved July 16, 2019.",
                        "url": "https://redlock.io/blog/instance-metadata-api-a-modern-day-trojan-horse",
                        "source_name": "RedLock Instance Metadata API 2018"
                    }
                ],
                "name": "Cloud Instance Metadata API",
                "id": "attack-pattern--1c2fd73a-e634-44ed-b1b5-9e7cf7404e9f",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-11T18:48:48.609Z",
                "created": "2019-09-04T14:41:32.317Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1552.005",
                        "url": "https://attack.mitre.org/techniques/T1552/005"
                    },
                    {
                        "source_name": "AWS Instance Metadata API",
                        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
                        "description": "AWS. (n.d.). Instance Metadata and User Data. Retrieved July 18, 2019."
                    },
                    {
                        "source_name": "Krebs Capital One August 2019",
                        "url": "https://krebsonsecurity.com/2019/08/what-we-can-learn-from-the-capital-one-hack/",
                        "description": "Krebs, B.. (2019, August 19). What We Can Learn from the Capital One Hack. Retrieved March 25, 2020."
                    },
                    {
                        "description": "Higashi, Michael. (2018, May 15). Instance Metadata API: A Modern Day Trojan Horse. Retrieved July 16, 2019.",
                        "url": "https://redlock.io/blog/instance-metadata-api-a-modern-day-trojan-horse",
                        "source_name": "RedLock Instance Metadata API 2018"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, attackers may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows the attacker to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-25T18:18:20.366Z",
                "created": "2020-02-11T18:47:46.619Z",
                "x_mitre_contributors": [
                    "Praetorian"
                ],
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "AWS CloudTrail logs",
                    "Azure activity logs"
                ],
                "x_mitre_detection": "Monitor access to the Instance Metadata API and look for anomalous queries.\n\nIt may be possible to detect adversary use of credentials they have obtained. See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\n\n",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure"
                ]
            },
            {
                "external_references": [{
                        "external_id": "T1538",
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1538"
                    },
                    {
                        "source_name": "Google Command Center Dashboard",
                        "url": "https://cloud.google.com/security-command-center/docs/quickstart-scc-dashboard",
                        "description": "Google. (2019, October 3). Quickstart: Using the dashboard. Retrieved October 8, 2019."
                    },
                    {
                        "source_name": "AWS Console Sign-in Events",
                        "url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-aws-console-sign-in-events.html",
                        "description": "Amazon. (n.d.). AWS Console Sign-in Events. Retrieved October 23, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-07-14T19:19:00.966Z",
                "created": "2019-08-30T18:11:24.582Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_detection": "Monitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.(Citation: AWS Console Sign-in Events)",
                "x_mitre_data_sources": [
                    "Office 365 audit logs",
                    "Azure activity logs",
                    "Stackdriver logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_contributors": [
                    "Praetorian"
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure",
                    "Azure AD",
                    "Office 365"
                ]
            },
            {
                "created": "2019-08-30T13:01:10.120Z",
                "modified": "2020-06-23T14:31:41.758Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db",
                "description": "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. \n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\n\nStormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)",
                "name": "Cloud Service Discovery",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1526",
                        "url": "https://attack.mitre.org/techniques/T1526"
                    },
                    {
                        "source_name": "Azure - Resource Manager API",
                        "url": "https://docs.microsoft.com/en-us/rest/api/resources/",
                        "description": "Microsoft. (2019, May 20). Azure Resource Manager. Retrieved June 17, 2020."
                    },
                    {
                        "source_name": "Azure AD Graph API",
                        "url": "https://docs.microsoft.com/en-us/previous-versions/azure/ad/graph/howto/azure-ad-graph-api-operations-overview",
                        "description": "Microsoft. (2016, March 26). Operations overview | Graph API concepts. Retrieved June 18, 2020."
                    },
                    {
                        "source_name": "Azure - Stormspotter",
                        "url": "https://github.com/Azure/Stormspotter",
                        "description": "Microsoft. (2020). Azure Stormspotter GitHub. Retrieved June 17, 2020."
                    },
                    {
                        "source_name": "GitHub Pacu",
                        "url": "https://github.com/RhinoSecurityLabs/pacu",
                        "description": "Rhino Security Labs. (2019, August 22). Pacu. Retrieved October 17, 2019."
                    }
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure",
                    "Azure AD",
                    "Office 365",
                    "SaaS"
                ],
                "x_mitre_contributors": [
                    "Suzy Schapperle - Microsoft Azure Red Team",
                    "Praetorian"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_version": "1.1",
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "Stackdriver logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_detection": "Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nNormal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.",
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
                "name": "Code Signing",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1116",
                        "url": "https://attack.mitre.org/techniques/T1116"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Code_signing",
                        "description": "Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.",
                        "source_name": "Wikipedia Code Signing"
                    },
                    {
                        "url": "http://www.thesafemac.com/new-signed-malware-called-janicab/",
                        "description": "Thomas. (2013, July 15). New signed malware called Janicab. Retrieved July 17, 2017.",
                        "source_name": "Janicab"
                    },
                    {
                        "url": "https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/",
                        "description": "Ladikov, A. (2015, January 29). Why You Shouldn\u2019t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.",
                        "source_name": "Securelist Digital Certificates"
                    },
                    {
                        "url": "http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates",
                        "description": "Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.",
                        "source_name": "Symantec Digital Certificates"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-05T18:59:28.671Z",
                "created": "2017-05-31T21:31:26.474Z"
            },
            {
                "created": "2020-02-05T16:27:37.784Z",
                "modified": "2020-02-10T19:51:01.601Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082",
                "description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing) \n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                "name": "Code Signing",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1553.002",
                        "url": "https://attack.mitre.org/techniques/T1553/002"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Code_signing",
                        "description": "Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.",
                        "source_name": "Wikipedia Code Signing"
                    },
                    {
                        "url": "https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/",
                        "description": "Ladikov, A. (2015, January 29). Why You Shouldn\u2019t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.",
                        "source_name": "Securelist Digital Certificates"
                    },
                    {
                        "url": "http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates",
                        "description": "Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.",
                        "source_name": "Symantec Digital Certificates"
                    }
                ],
                "x_mitre_platforms": [
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.",
                "x_mitre_defense_bypassed": [
                    "Windows User Account Control"
                ],
                "x_mitre_data_sources": [
                    "Binary file metadata"
                ]
            },
            {
                "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Command and Scripting Interpreter",
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1059",
                    "url": "https://attack.mitre.org/techniques/T1059"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "revoked": false,
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "modified": "2020-06-25T03:32:51.380Z",
                "created": "2017-05-31T21:30:49.546Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_remote_support": false,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_detection": "Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "PowerShell logs",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "2.0"
            },
            {
                "id": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Commonly Used Port",
                "description": "**This technique has been deprecated. Please use [Non-Standard Port](https://attack.mitre.org/techniques/T1571) where appropriate.**\n\nAdversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n\n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1043",
                        "url": "https://attack.mitre.org/techniques/T1043"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "revoked": false,
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-07-06T17:54:28.071Z",
                "created": "2017-05-31T21:30:42.657Z",
                "x_mitre_deprecated": true,
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Process use of network",
                    "Process monitoring"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Communication Through Removable Media",
                "description": "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1092",
                    "external_id": "T1092"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-07-14T19:44:50.871Z",
                "created": "2017-05-31T21:31:09.379Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": false,
                "x_mitre_detection": "Monitor file access on removable media. Detect processes that execute when removable media is mounted.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Data loss prevention"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1500",
                        "url": "https://attack.mitre.org/techniques/T1500"
                    },
                    {
                        "description": "ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.",
                        "url": "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf",
                        "source_name": "ClearSky MuddyWater Nov 2018"
                    },
                    {
                        "source_name": "TrendMicro WindowsAppMac",
                        "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/windows-app-runs-on-mac-downloads-info-stealer-and-adware/",
                        "description": "Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019."
                    }
                ],
                "name": "Compile After Delivery",
                "id": "attack-pattern--cf7b3a06-8b42-4c33-bbe9-012120027925",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-16T15:38:37.650Z",
                "created": "2019-04-25T20:53:07.719Z"
            },
            {
                "created": "2020-03-16T15:30:57.711Z",
                "modified": "2020-03-29T20:59:32.293Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617",
                "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)",
                "name": "Compile After Delivery",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1027.004",
                        "url": "https://attack.mitre.org/techniques/T1027/004"
                    },
                    {
                        "description": "ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.",
                        "url": "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf",
                        "source_name": "ClearSky MuddyWater Nov 2018"
                    },
                    {
                        "source_name": "TrendMicro WindowsAppMac",
                        "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/windows-app-runs-on-mac-downloads-info-stealer-and-adware/",
                        "description": "Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019."
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Praetorian",
                    "Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.",
                "x_mitre_defense_bypassed": [
                    "Signature-based detection",
                    "Host intrusion prevention systems",
                    "Anti-virus",
                    "Binary Analysis",
                    "Static File Analysis"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_system_requirements": [
                    "Compiler software (either native to the system or delivered by the adversary)"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--d21a2069-23d5-4043-ad6d-64f6b644cb1a",
                "name": "Compiled HTML File",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1223",
                        "url": "https://attack.mitre.org/techniques/T1223"
                    },
                    {
                        "source_name": "Microsoft HTML Help May 2018",
                        "description": "Microsoft. (2018, May 30). Microsoft HTML Help 1.4. Retrieved October 3, 2018.",
                        "url": "https://docs.microsoft.com/previous-versions/windows/desktop/htmlhelp/microsoft-html-help-1-4-sdk"
                    },
                    {
                        "source_name": "Microsoft HTML Help ActiveX",
                        "description": "Microsoft. (n.d.). HTML Help ActiveX Control Overview. Retrieved October 3, 2018.",
                        "url": "https://msdn.microsoft.com/windows/desktop/ms644670"
                    },
                    {
                        "url": "https://msdn.microsoft.com/windows/desktop/ms524405",
                        "description": "Microsoft. (n.d.). About the HTML Help Executable Program. Retrieved October 3, 2018.",
                        "source_name": "Microsoft HTML Help Executable Program"
                    },
                    {
                        "url": "https://msitpros.com/?p=3909",
                        "description": "Moe, O. (2017, August 13). Bypassing Device guard UMCI using CHM \u2013 CVE-2017-8625. Retrieved October 3, 2018.",
                        "source_name": "MsitPros CHM Aug 2017"
                    },
                    {
                        "url": "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8625",
                        "description": "Microsoft. (2017, August 8). CVE-2017-8625 - Internet Explorer Security Feature Bypass Vulnerability. Retrieved October 3, 2018.",
                        "source_name": "Microsoft CVE-2017-8625 Aug 2017"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-31T18:59:00.845Z",
                "created": "2018-10-17T00:14:20.652Z"
            },
            {
                "id": "attack-pattern--a6937325-9321-4e2e-bb2b-3ed2d40b2a9d",
                "description": "Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)\n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)",
                "name": "Compiled HTML File",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1218.001",
                        "url": "https://attack.mitre.org/techniques/T1218/001"
                    },
                    {
                        "source_name": "Microsoft HTML Help May 2018",
                        "description": "Microsoft. (2018, May 30). Microsoft HTML Help 1.4. Retrieved October 3, 2018.",
                        "url": "https://docs.microsoft.com/previous-versions/windows/desktop/htmlhelp/microsoft-html-help-1-4-sdk"
                    },
                    {
                        "source_name": "Microsoft HTML Help ActiveX",
                        "description": "Microsoft. (n.d.). HTML Help ActiveX Control Overview. Retrieved October 3, 2018.",
                        "url": "https://msdn.microsoft.com/windows/desktop/ms644670"
                    },
                    {
                        "source_name": "Microsoft HTML Help Executable Program",
                        "description": "Microsoft. (n.d.). About the HTML Help Executable Program. Retrieved October 3, 2018.",
                        "url": "https://msdn.microsoft.com/windows/desktop/ms524405"
                    },
                    {
                        "source_name": "MsitPros CHM Aug 2017",
                        "description": "Moe, O. (2017, August 13). Bypassing Device guard UMCI using CHM \u2013 CVE-2017-8625. Retrieved October 3, 2018.",
                        "url": "https://msitpros.com/?p=3909"
                    },
                    {
                        "source_name": "Microsoft CVE-2017-8625 Aug 2017",
                        "description": "Microsoft. (2017, August 8). CVE-2017-8625 - Internet Explorer Security Feature Bypass Vulnerability. Retrieved October 3, 2018.",
                        "url": "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8625"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T22:32:24.589Z",
                "created": "2020-01-23T18:53:54.377Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_detection": "Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.\n\nMonitor presence and use of CHM files, especially if they are not typically used within an environment.",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_defense_bypassed": [
                    "Digital Certificate Validation",
                    "Application control"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_contributors": [
                    "Rahmat Nurfauzi, @infosecn1nja, PT Xynexis International"
                ]
            },
            {
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "name": "Component Firmware",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1109",
                        "url": "https://attack.mitre.org/techniques/T1109"
                    },
                    {
                        "description": "SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018.",
                        "source_name": "SanDisk SMART"
                    },
                    {
                        "url": "https://www.smartmontools.org/",
                        "description": "smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018.",
                        "source_name": "SmartMontools"
                    },
                    {
                        "url": "https://www.itworld.com/article/2853992/3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html",
                        "description": "Pinola, M. (2014, December 14). 3 tools to check your hard drive's health and make sure it's not already dying on you. Retrieved October 2, 2018.",
                        "source_name": "ITWorld Hard Disk Health Dec 2014"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-07-07T16:44:26.493Z",
                "created": "2017-05-31T21:31:22.374Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1542.002",
                        "url": "https://attack.mitre.org/techniques/T1542/002"
                    },
                    {
                        "description": "SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018.",
                        "source_name": "SanDisk SMART"
                    },
                    {
                        "url": "https://www.smartmontools.org/",
                        "description": "smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018.",
                        "source_name": "SmartMontools"
                    },
                    {
                        "url": "https://www.itworld.com/article/2853992/3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html",
                        "description": "Pinola, M. (2014, December 14). 3 tools to check your hard drive's health and make sure it's not already dying on you. Retrieved October 2, 2018.",
                        "source_name": "ITWorld Hard Disk Health Dec 2014"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Component Firmware",
                "description": "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--791481f8-e96a-41be-b089-a088763083d4",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-03-23T23:48:33.904Z",
                "created": "2019-12-19T20:21:21.669Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_system_requirements": [
                    "Ability to update component device firmware from the host operating system."
                ],
                "x_mitre_permissions_required": [
                    "SYSTEM"
                ],
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Host intrusion prevention systems",
                    "File monitoring"
                ],
                "x_mitre_detection": "Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.\n\nDisk check and forensic utilities (Citation: ITWorld Hard Disk Health Dec 2014) may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation. Also consider comparing components, including hashes of component firmware and behavior, against known good images.",
                "x_mitre_data_sources": [
                    "Component firmware",
                    "Process monitoring",
                    "Disk forensics",
                    "API monitoring"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64",
                "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM)\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",
                "name": "Component Object Model",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1559.001",
                        "url": "https://attack.mitre.org/techniques/T1559/001"
                    },
                    {
                        "source_name": "Fireeye Hunting COM June 2019",
                        "url": "https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html",
                        "description": "Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019."
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx",
                        "description": "Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.",
                        "source_name": "Microsoft COM"
                    },
                    {
                        "url": "https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html",
                        "description": "Forshaw, J. (2018, April 18). Windows Exploitation Tricks: Exploiting Arbitrary File Writes for Local Elevation of Privilege. Retrieved May 3, 2018.",
                        "source_name": "ProjectZero File Write EoP Apr 2018"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/",
                        "description": "Nelson, M. (2017, November 16). Lateral Movement using Outlook's CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.",
                        "source_name": "Enigma Outlook DCOM Lateral Movement Nov 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/",
                        "description": "Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.",
                        "source_name": "Enigma MMC20 COM Jan 2017"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "modified": "2020-03-28T19:30:52.639Z",
                "created": "2020-02-12T14:09:53.107Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. ",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "DLL monitoring"
                ]
            },
            {
                "created": "2017-05-31T21:31:33.979Z",
                "modified": "2020-03-20T16:01:20.868Z",
                "type": "attack-pattern",
                "revoked": true,
                "id": "attack-pattern--9b52fca7-1a36-4da0-b62d-da5bd83b4d69",
                "name": "Component Object Model Hijacking",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1122",
                        "url": "https://attack.mitre.org/techniques/T1122"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/ms694363.aspx",
                        "description": "Microsoft. (n.d.). The Component Object Model. Retrieved August 18, 2016.",
                        "source_name": "Microsoft Component Object Model"
                    },
                    {
                        "url": "https://blog.gdatasoftware.com/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence",
                        "description": "G DATA. (2014, October). COM Object hijacking: the discreet way of persistence. Retrieved August 13, 2016.",
                        "source_name": "GDATA COM Hijacking"
                    },
                    {
                        "source_name": "Endgame COM Hijacking",
                        "description": "Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016.",
                        "url": "https://www.elastic.co/blog/how-hunt-detecting-persistence-evasion-com"
                    }
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.015",
                        "url": "https://attack.mitre.org/techniques/T1546/015"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/ms694363.aspx",
                        "description": "Microsoft. (n.d.). The Component Object Model. Retrieved August 18, 2016.",
                        "source_name": "Microsoft Component Object Model"
                    },
                    {
                        "url": "https://blog.gdatasoftware.com/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence",
                        "description": "G DATA. (2014, October). COM Object hijacking: the discreet way of persistence. Retrieved August 13, 2016.",
                        "source_name": "GDATA COM Hijacking"
                    },
                    {
                        "source_name": "Endgame COM Hijacking",
                        "description": "Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016.",
                        "url": "https://www.elastic.co/blog/how-hunt-detecting-persistence-evasion-com"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Component Object Model Hijacking",
                "description": "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ",
                "id": "attack-pattern--bc0f5e80-91c0-4e04-9fbb-e4e332c85dae",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-07-09T13:55:51.172Z",
                "created": "2020-03-16T14:12:47.923Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\.(Citation: Endgame COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \n\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. ",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "Loaded DLLs",
                    "DLL monitoring",
                    "Windows Registry"
                ],
                "x_mitre_contributors": [
                    "Elastic"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "revoked": false,
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1175",
                        "url": "https://attack.mitre.org/techniques/T1175"
                    },
                    {
                        "source_name": "Fireeye Hunting COM June 2019",
                        "url": "https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html",
                        "description": "Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019."
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx",
                        "description": "Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.",
                        "source_name": "Microsoft COM"
                    },
                    {
                        "url": "https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1",
                        "description": "Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.",
                        "source_name": "Microsoft COM ACL"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx",
                        "description": "Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017.",
                        "source_name": "Microsoft Process Wide Com Keys"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/ms694331(v=vs.85).aspx",
                        "description": "Microsoft. (n.d.). Registry Values for System-Wide Security. Retrieved November 21, 2017.",
                        "source_name": "Microsoft System Wide Com Keys"
                    },
                    {
                        "url": "https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html",
                        "description": "Forshaw, J. (2018, April 18). Windows Exploitation Tricks: Exploiting Arbitrary File Writes for Local Elevation of Privilege. Retrieved May 3, 2018.",
                        "source_name": "ProjectZero File Write EoP Apr 2018"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/",
                        "description": "Nelson, M. (2017, November 16). Lateral Movement using Outlook's CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.",
                        "source_name": "Enigma Outlook DCOM Lateral Movement Nov 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/",
                        "description": "Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.",
                        "source_name": "Enigma MMC20 COM Jan 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/",
                        "description": "Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round 2. Retrieved November 21, 2017.",
                        "source_name": "Enigma DCOM Lateral Movement Jan 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/",
                        "description": "Nelson, M. (2017, September 11). Lateral Movement using Excel.Application and DCOM. Retrieved November 21, 2017.",
                        "source_name": "Enigma Excel DCOM Sept 2017"
                    },
                    {
                        "url": "https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom",
                        "description": "Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral movement via DCOM. Retrieved November 21, 2017.",
                        "source_name": "Cyberreason DCOM DDE Lateral Movement Nov 2017"
                    }
                ],
                "description": "**This technique has been deprecated. Please use [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Component Object Model](https://attack.mitre.org/techniques/T1559/001).**\n\nAdversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. \n\nCOM is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) DCOM is transparent middleware that extends the functionality of Component Object Model (COM) (Citation: Microsoft COM) beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. (Citation: Microsoft COM ACL)(Citation: Microsoft Process Wide Com Keys)(Citation: Microsoft System Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nAdversaries may abuse COM for local command and/or payload execution. Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and VBScript.(Citation: Microsoft COM) Specific COM objects also exists to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors such as Privilege Escalation and Persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)\n\nAdversaries may use DCOM for lateral movement. Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications (Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents (Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1173) (DDE) execution directly through a COM created instance of a Microsoft Office application (Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document.",
                "name": "Component Object Model and Distributed COM",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--772bc7a8-a157-42cc-8728-d648e25c7fe7",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "lateral-movement"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "execution"
                    }
                ],
                "modified": "2020-03-30T13:36:10.069Z",
                "created": "2018-01-16T16:13:52.465Z",
                "x_mitre_deprecated": true,
                "x_mitre_version": "2.0",
                "x_mitre_data_sources": [
                    "PowerShell logs",
                    "API monitoring",
                    "Authentication logs",
                    "DLL monitoring",
                    "Packet capture",
                    "Process monitoring",
                    "Windows Registry",
                    "Windows event logs"
                ],
                "x_mitre_detection": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1086), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\n\nMonitor for any influxes or abnormal increases in Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM",
                    "User"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_remote_support": true,
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5",
                "description": "Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.",
                "name": "Compromise Client Software Binary",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1554",
                    "url": "https://attack.mitre.org/techniques/T1554"
                }],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-27T14:49:58.249Z",
                "created": "2020-02-11T18:18:34.279Z",
                "x_mitre_contributors": [
                    "CrowdStrike Falcon OverWatch"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Binary file metadata"
                ],
                "x_mitre_detection": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. \n\nConsider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections.",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1195.003",
                    "url": "https://attack.mitre.org/techniques/T1195/003"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Compromise Hardware Supply Chain",
                "description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
                "id": "attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }],
                "modified": "2020-03-23T12:51:45.475Z",
                "created": "2020-03-11T14:28:40.064Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.",
                "x_mitre_data_sources": [
                    "Component firmware",
                    "BIOS",
                    "Disk forensics",
                    "EFI"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1195.001",
                        "url": "https://attack.mitre.org/techniques/T1195/001"
                    },
                    {
                        "source_name": "Trendmicro NPM Compromise",
                        "url": "https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets",
                        "description": "Trendmicro. (2018, November 29). Hacker Infects Node.js Package to Steal from Bitcoin Wallets. Retrieved April 10, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency. (Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }],
                "modified": "2020-03-11T14:13:42.916Z",
                "created": "2020-03-11T14:13:42.916Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Web proxy"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2020-03-11T14:17:21.153Z",
                "modified": "2020-03-11T14:17:21.153Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
                "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018) (Citation: Command Five SK 2011)  ",
                "name": "Compromise Software Supply Chain",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1195.002",
                        "url": "https://attack.mitre.org/techniques/T1195/002"
                    },
                    {
                        "url": "https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities",
                        "description": "Avast Threat Intelligence Team. (2018, March 8). New investigations into the CCleaner incident point to a possible third stage that had keylogger capacities. Retrieved March 15, 2018.",
                        "source_name": "Avast CCleaner3 2018"
                    },
                    {
                        "url": "https://www.commandfive.com/papers/C5_APT_SKHack.pdf",
                        "description": "Command Five Pty Ltd. (2011, September). SK Hack by an Advanced Persistent Threat. Retrieved April 6, 2018.",
                        "source_name": "Command Five SK 2011"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Web proxy"
                ],
                "x_mitre_detection": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1213.001",
                        "url": "https://attack.mitre.org/techniques/T1213/001"
                    },
                    {
                        "url": "https://confluence.atlassian.com/confkb/how-to-enable-user-access-logging-182943.html",
                        "description": "Atlassian. (2018, January 9). How to Enable User Access Logging. Retrieved April 4, 2018.",
                        "source_name": "Atlassian Confluence Logging"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Confluence",
                "description": "\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n",
                "id": "attack-pattern--7ad38ef1-381a-406d-872a-38b136eb5ecc",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-24T16:42:09.222Z",
                "created": "2020-02-14T13:09:51.004Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nUser access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",
                "x_mitre_data_sources": [
                    "Third-party application logs",
                    "Authentication logs"
                ],
                "x_mitre_platforms": [
                    "SaaS"
                ]
            },
            {
                "id": "attack-pattern--4ff5d6a8-c062-4c68-a778-36fc5edd564f",
                "description": "Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013)\n\nFor ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel. (Citation: Microsoft Implementing CPL)\n\nMalicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware. (Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.",
                "name": "Control Panel",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1218.002",
                        "url": "https://attack.mitre.org/techniques/T1218/002"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx",
                        "description": "M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018.",
                        "source_name": "Microsoft Implementing CPL"
                    },
                    {
                        "url": "https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf",
                        "description": "Merc\u00eas, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018.",
                        "source_name": "TrendMicro CPL Malware Jan 2014"
                    },
                    {
                        "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/",
                        "description": "Bernardino, J. (2013, December 17). Control Panel Files Used As Malicious Attachments. Retrieved January 18, 2018.",
                        "source_name": "TrendMicro CPL Malware Dec 2013"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/",
                        "description": "Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017.",
                        "source_name": "Palo Alto Reaver Nov 2017"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T22:33:18.929Z",
                "created": "2020-01-23T19:59:52.630Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters",
                    "Windows Registry",
                    "DLL monitoring",
                    "Binary file metadata",
                    "API monitoring"
                ],
                "x_mitre_detection": "Monitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe. (Citation: TrendMicro CPL Malware Jan 2014)\n\nInventory Control Panel items to locate unregistered and potentially malicious files present on systems:\n\n* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace</code> and <code>HKEY_CLASSES_ROOT\\CLSID\\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)\n* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>Cpls</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>). (Citation: Microsoft Implementing CPL)\n* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder\\{name}\\Shellex\\PropertySheetHandlers</code> where {name} is the predefined name of the system item. (Citation: Microsoft Implementing CPL)\n\nAnalyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques. (Citation: TrendMicro CPL Malware Jan 2014)",
                "x_mitre_defense_bypassed": [
                    "Application control"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1196",
                        "url": "https://attack.mitre.org/techniques/T1196"
                    },
                    {
                        "source_name": "Microsoft Implementing CPL",
                        "description": "M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018.",
                        "url": "https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx"
                    },
                    {
                        "url": "https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf",
                        "description": "Merc\u00eas, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018.",
                        "source_name": "TrendMicro CPL Malware Jan 2014"
                    },
                    {
                        "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/",
                        "description": "Bernardino, J. (2013, December 17). Control Panel Files Used As Malicious Attachments. Retrieved January 18, 2018.",
                        "source_name": "TrendMicro CPL Malware Dec 2013"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/",
                        "description": "Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017.",
                        "source_name": "Palo Alto Reaver Nov 2017"
                    }
                ],
                "name": "Control Panel Items",
                "id": "attack-pattern--8df54627-376c-487c-a09c-7d2b5620f56e",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-31T18:59:21.682Z",
                "created": "2018-04-18T17:59:24.739Z"
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1136",
                        "url": "https://attack.mitre.org/techniques/T1136"
                    },
                    {
                        "source_name": "Microsoft User Creation Event",
                        "description": "Lich, B., Miroshnikov, A. (2017, April 5). 4720(S): A user account was created. Retrieved June 30, 2017.",
                        "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4720"
                    }
                ],
                "description": "Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\n\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.",
                "name": "Create Account",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-24T12:44:28.199Z",
                "created": "2017-12-14T16:46:06.044Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_contributors": [
                    "Microsoft Threat Intelligence Center (MSTIC)",
                    "Praetorian"
                ],
                "x_mitre_version": "2.1",
                "x_mitre_data_sources": [
                    "Office 365 account logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs",
                    "Process monitoring",
                    "Process command-line parameters",
                    "Authentication logs",
                    "Windows event logs"
                ],
                "x_mitre_detection": "Monitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.\n\nCollect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure AD",
                    "Azure",
                    "Office 365"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ]
            },
            {
                "id": "attack-pattern--cf1c2504-433f-4c4e-a1f8-91de45a0318c",
                "description": "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",
                "name": "Create Cloud Instance",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1578.002",
                        "url": "https://attack.mitre.org/techniques/T1578/002"
                    },
                    {
                        "source_name": "Mandiant M-Trends 2020",
                        "url": "https://content.fireeye.com/m-trends/rpt-m-trends-2020",
                        "description": "FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020."
                    },
                    {
                        "source_name": "AWS CloudTrail Search",
                        "url": "https://aws.amazon.com/premiumsupport/knowledge-center/cloudtrail-search-api-calls/",
                        "description": "Amazon. (n.d.). Search CloudTrail logs for API calls to EC2 Instances. Retrieved June 17, 2020."
                    },
                    {
                        "source_name": "Azure Activity Logs",
                        "url": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/view-activity-logs",
                        "description": "Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020."
                    },
                    {
                        "source_name": "Cloud Audit Logs",
                        "url": "https://cloud.google.com/logging/docs/audit#admin-activity",
                        "description": "Google. (n.d.). Audit Logs. Retrieved June 1, 2020."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-18T11:45:36.417Z",
                "created": "2020-05-14T14:45:15.978Z",
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure"
                ],
                "x_mitre_data_sources": [
                    "GCP audit logs",
                    "Stackdriver logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.(Citation: Cloud Audit Logs)"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1134.002",
                        "url": "https://attack.mitre.org/techniques/T1134/002"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing",
                        "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
                        "source_name": "Microsoft Command-line Logging"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Create Process with Token",
                "description": "Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with <code>DuplicateToken(Ex)</code> and use it with <code>CreateProcessWithTokenW</code> to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user.",
                "id": "attack-pattern--677569f9-a8b0-459e-ab24-7f18091fa7bf",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-26T21:28:19.476Z",
                "created": "2020-02-18T16:48:56.582Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_defense_bypassed": [
                    "Windows User Account Control",
                    "System access controls",
                    "File system access controls"
                ],
                "x_mitre_detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code> and <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "Access tokens",
                    "API monitoring"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1578.001",
                        "url": "https://attack.mitre.org/techniques/T1578/001"
                    },
                    {
                        "source_name": "Mandiant M-Trends 2020",
                        "url": "https://content.fireeye.com/m-trends/rpt-m-trends-2020",
                        "description": "FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020."
                    },
                    {
                        "source_name": "AWS Cloud Trail Backup API",
                        "url": "https://docs.aws.amazon.com/aws-backup/latest/devguide/logging-using-cloudtrail.html",
                        "description": "Amazon. (2020). Logging AWS Backup API Calls with AWS CloudTrail. Retrieved April 27, 2020."
                    },
                    {
                        "source_name": "Azure - Monitor Logs",
                        "url": "https://docs.microsoft.com/en-us/azure/backup/backup-azure-monitoring-use-azuremonitor",
                        "description": "Microsoft. (2019, June 4). Monitor at scale by using Azure Monitor. Retrieved May 1, 2020."
                    },
                    {
                        "source_name": "Cloud Audit Logs",
                        "url": "https://cloud.google.com/logging/docs/audit#admin-activity",
                        "description": "Google. (n.d.). Audit Logs. Retrieved June 1, 2020."
                    },
                    {
                        "source_name": "GCP - Creating and Starting a VM",
                        "url": "https://cloud.google.com/compute/docs/instances/create-start-instance#api_2",
                        "description": "Google. (2020, April 23). Creating and Starting a VM instance. Retrieved May 1, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Create Snapshot",
                "description": "An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1536) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--ed2e45f9-d338-4eb2-8ce5-3a2e03323bc1",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-19T14:45:59.618Z",
                "created": "2020-06-09T15:33:13.563Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.\n\nIn AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.(Citation: AWS Cloud Trail Backup API).\n\nIn Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.(Citation: Azure - Monitor Logs)\n\nGoogle's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot.(Citation: Cloud Audit Logs) It is also possible to detect the usage of the GCP API with the <code>\"sourceSnapshot\":</code> parameter pointed to <code>\"global/snapshots/[BOOT_SNAPSHOT_NAME]</code>.(Citation: GCP - Creating and Starting a VM)",
                "x_mitre_data_sources": [
                    "GCP audit logs",
                    "Stackdriver logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_contributors": [
                    "Praetorian"
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure"
                ]
            },
            {
                "created": "2020-01-10T16:03:18.865Z",
                "modified": "2020-03-25T22:32:16.537Z",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "type": "attack-pattern",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. (Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges. (Citation: OSX Malware Detection).  ",
                "name": "Create or Modify System Process",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1543",
                        "url": "https://attack.mitre.org/techniques/T1543"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx",
                        "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.",
                        "source_name": "TechNet Services"
                    },
                    {
                        "url": "https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html",
                        "description": "Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.",
                        "source_name": "AppleDocs Launch Agent Daemons"
                    },
                    {
                        "url": "https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf",
                        "description": "Patrick Wardle. (2016, February 29). Let's Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.",
                        "source_name": "OSX Malware Detection"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_detection": "Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes.",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "Windows Registry",
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1056.004",
                        "url": "https://attack.mitre.org/techniques/T1056/004"
                    },
                    {
                        "source_name": "Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017",
                        "description": "Microsoft. (2017, September 15). TrojanSpy:Win32/Ursnif.gen!I. Retrieved December 18, 2017.",
                        "url": "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=TrojanSpy:Win32/Ursnif.gen!I&threatId=-2147336918"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms644959.aspx",
                        "description": "Microsoft. (n.d.). Hooks Overview. Retrieved December 12, 2017.",
                        "source_name": "Microsoft Hook Overview"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.adlice.com/userland-rootkits-part-1-iat-hooks/",
                        "description": "Tigzy. (2014, October 15). Userland Rootkits: Part 1, IAT hooks. Retrieved December 12, 2017.",
                        "source_name": "Adlice Software IAT Hooks Oct 2014"
                    },
                    {
                        "url": "https://www.mwrinfosecurity.com/our-thinking/dynamic-hooking-techniques-user-mode/",
                        "description": "Hillman, M. (2015, August 8). Dynamic Hooking Techniques: User Mode. Retrieved December 20, 2017.",
                        "source_name": "MWRInfoSecurity Dynamic Hooking 2015"
                    },
                    {
                        "url": "https://www.exploit-db.com/docs/17802.pdf",
                        "description": "Mariani, B. (2011, September 6). Inline Hooking in Windows. Retrieved December 12, 2017.",
                        "source_name": "HighTech Bridge Inline Hooking Sept 2011"
                    },
                    {
                        "url": "https://volatility-labs.blogspot.com/2012/09/movp-31-detecting-malware-hooks-in.html",
                        "description": "Volatility Labs. (2012, September 24). MoVP 3.1 Detecting Malware Hooks in the Windows GUI Subsystem. Retrieved December 12, 2017.",
                        "source_name": "Volatility Detecting Hooks Sept 2012"
                    },
                    {
                        "url": "https://github.com/prekageo/winhook",
                        "description": "Prekas, G. (2011, July 11). Winhook. Retrieved December 12, 2017.",
                        "source_name": "PreKageo Winhook Jul 2011"
                    },
                    {
                        "url": "https://github.com/jay/gethooks",
                        "description": "Satiro, J. (2011, September 14). GetHooks. Retrieved December 12, 2017.",
                        "source_name": "Jay GetHooks Sept 2011"
                    },
                    {
                        "url": "https://zairon.wordpress.com/2006/12/06/any-application-defined-hook-procedure-on-my-machine/",
                        "description": "Felici, M. (2006, December 6). Any application-defined hook procedure on my machine?. Retrieved December 12, 2017.",
                        "source_name": "Zairon Hooking Dec 2006"
                    },
                    {
                        "url": "https://eyeofrablog.wordpress.com/2017/06/27/windows-keylogger-part-2-defense-against-user-land/",
                        "description": "Eye of Ra. (2017, June 27). Windows Keylogger Part 2: Defense against user-land. Retrieved December 12, 2017.",
                        "source_name": "EyeofRa Detecting Hooking June 2017"
                    },
                    {
                        "url": "http://www.gmer.net/",
                        "description": "GMER. (n.d.). GMER. Retrieved December 12, 2017.",
                        "source_name": "GMER Rootkits"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms686701.aspx",
                        "description": "Microsoft. (n.d.). Taking a Snapshot and Viewing Processes. Retrieved December 12, 2017.",
                        "source_name": "Microsoft Process Snapshot"
                    },
                    {
                        "url": "https://security.stackexchange.com/questions/17904/what-are-the-methods-to-find-hooked-functions-and-apis",
                        "description": "Stack Exchange - Security. (2012, July 31). What are the methods to find hooked functions and APIs?. Retrieved December 12, 2017.",
                        "source_name": "StackExchange Hooks Jul 2012"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Credential API Hooking",
                "description": "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Endgame Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored.(Citation: Endgame Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Endgame Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n",
                "id": "attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "collection"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "credential-access"
                    }
                ],
                "modified": "2020-03-24T21:29:13.565Z",
                "created": "2020-02-11T19:01:15.930Z",
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "Process monitoring",
                    "Loaded DLLs",
                    "DLL monitoring",
                    "Binary file metadata",
                    "API monitoring"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)\n\nRootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.\n\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1110.004",
                        "url": "https://attack.mitre.org/techniques/T1110/004"
                    },
                    {
                        "source_name": "US-CERT TA18-068A 2018",
                        "url": "https://www.us-cert.gov/ncas/alerts/TA18-086A",
                        "description": "US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Credential Stuffing",
                "description": "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)",
                "id": "attack-pattern--b2d03cea-aec1-45ca-9744-9ee583c1e1cc",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-29T20:35:36.694Z",
                "created": "2020-02-11T18:39:59.959Z",
                "x_mitre_contributors": [
                    "Diogo Fernandes",
                    "Anastasios Pingios"
                ],
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Office 365 account logs"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD",
                    "SaaS"
                ]
            },
            {
                "created": "2020-02-04T12:52:13.006Z",
                "modified": "2020-03-25T18:30:10.630Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc",
                "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nIn cloud environments, authenticated user credentials are often stored in local configuration and credential files. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files. (Citation: Specter Ops - Cloud Credential Storage)",
                "name": "Credentials In Files",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1552.001",
                        "url": "https://attack.mitre.org/techniques/T1552/001"
                    },
                    {
                        "external_id": "CAPEC-639",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/639.html"
                    },
                    {
                        "url": "http://carnal0wnage.attackresearch.com/2014/05/mimikatz-against-virtual-machine-memory.html",
                        "description": "CG. (2014, May 20). Mimikatz Against Virtual Machine Memory Part 1. Retrieved November 12, 2014.",
                        "source_name": "CG 2014"
                    },
                    {
                        "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx",
                        "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.",
                        "source_name": "SRD GPP"
                    },
                    {
                        "source_name": "Specter Ops - Cloud Credential Storage",
                        "url": "https://posts.specterops.io/head-in-the-clouds-bd038bb69e48",
                        "description": "Maddalena, C.. (2018, September 12). Head in the Clouds. Retrieved October 4, 2019."
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure"
                ],
                "x_mitre_contributors": [
                    "Microsoft Threat Intelligence Center (MSTIC)"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "File monitoring"
                ],
                "x_mitre_detection": "While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM",
                    "User"
                ],
                "x_mitre_system_requirements": [
                    "Access to files"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "created": "2020-02-11T18:48:28.456Z",
                "modified": "2020-03-25T18:40:15.564Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0",
                "description": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
                "name": "Credentials from Password Stores",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1555",
                    "url": "https://attack.mitre.org/techniques/T1555"
                }],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.",
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_data_sources": [
                    "PowerShell logs",
                    "API monitoring",
                    "File monitoring",
                    "Process monitoring",
                    "System calls"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1503",
                        "url": "https://attack.mitre.org/techniques/T1503"
                    },
                    {
                        "source_name": "Talos Olympic Destroyer 2018",
                        "url": "https://blog.talosintelligence.com/2018/02/olympic-destroyer.html",
                        "description": "Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "Microsoft CryptUnprotectData \u200eApril 2018",
                        "url": "https://docs.microsoft.com/en-us/windows/desktop/api/dpapi/nf-dpapi-cryptunprotectdata",
                        "description": "Microsoft. (2018, April 12). CryptUnprotectData function. Retrieved June 18, 2019."
                    },
                    {
                        "source_name": "Proofpoint Vega Credential Stealer May 2018",
                        "url": "https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign",
                        "description": "Proofpoint. (2018, May 10). New Vega Stealer shines brightly in targeted campaign . Retrieved June 18, 2019."
                    },
                    {
                        "source_name": "FireEye HawkEye Malware July 2017",
                        "url": "https://www.fireeye.com/blog/threat-research/2017/07/hawkeye-malware-distributed-in-phishing-campaign.html",
                        "description": "Swapnil Patil, Yogesh Londhe. (2017, July 25). HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign. Retrieved June 18, 2019."
                    },
                    {
                        "source_name": "GitHub Mimikittenz July 2016",
                        "url": "https://github.com/putterpanda/mimikittenz",
                        "description": "Jamieson O'Reilly (putterpanda). (2016, July 4). mimikittenz. Retrieved June 20, 2019."
                    }
                ],
                "name": "Credentials from Web Browsers",
                "id": "attack-pattern--4579d9c9-d5b9-45e0-9848-0104637b579f",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-12T18:57:58.395Z",
                "created": "2019-06-17T19:34:51.855Z"
            },
            {
                "created": "2020-02-12T18:57:36.041Z",
                "modified": "2020-02-17T13:20:02.386Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8",
                "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData \u200eApril 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. (Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017)\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
                "name": "Credentials from Web Browsers",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1555.003",
                        "url": "https://attack.mitre.org/techniques/T1555/003"
                    },
                    {
                        "source_name": "Talos Olympic Destroyer 2018",
                        "url": "https://blog.talosintelligence.com/2018/02/olympic-destroyer.html",
                        "description": "Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "Microsoft CryptUnprotectData \u200eApril 2018",
                        "url": "https://docs.microsoft.com/en-us/windows/desktop/api/dpapi/nf-dpapi-cryptunprotectdata",
                        "description": "Microsoft. (2018, April 12). CryptUnprotectData function. Retrieved June 18, 2019."
                    },
                    {
                        "source_name": "Proofpoint Vega Credential Stealer May 2018",
                        "url": "https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign",
                        "description": "Proofpoint. (2018, May 10). New Vega Stealer shines brightly in targeted campaign . Retrieved June 18, 2019."
                    },
                    {
                        "source_name": "FireEye HawkEye Malware July 2017",
                        "url": "https://www.fireeye.com/blog/threat-research/2017/07/hawkeye-malware-distributed-in-phishing-campaign.html",
                        "description": "Swapnil Patil, Yogesh Londhe. (2017, July 25). HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign. Retrieved June 18, 2019."
                    },
                    {
                        "source_name": "GitHub Mimikittenz July 2016",
                        "url": "https://github.com/putterpanda/mimikittenz",
                        "description": "Jamieson O'Reilly (putterpanda). (2016, July 4). mimikittenz. Retrieved June 20, 2019."
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_contributors": [
                    "Ryan Benson, Exabeam",
                    "Barry Shteiman, Exabeam",
                    "Sylvain Gil, Exabeam",
                    "RedHuntLabs, @redhuntlabs"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "API monitoring",
                    "PowerShell logs",
                    "Process monitoring"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1081",
                        "url": "https://attack.mitre.org/techniques/T1081"
                    },
                    {
                        "external_id": "CAPEC-639",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/639.html"
                    },
                    {
                        "url": "http://carnal0wnage.attackresearch.com/2014/05/mimikatz-against-virtual-machine-memory.html",
                        "description": "CG. (2014, May 20). Mimikatz Against Virtual Machine Memory Part 1. Retrieved November 12, 2014.",
                        "source_name": "CG 2014"
                    },
                    {
                        "url": "http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx",
                        "description": "Security Research and Defense. (2014, May 13). MS14-025: An Update for Group Policy Preferences. Retrieved January 28, 2015.",
                        "source_name": "SRD GPP"
                    },
                    {
                        "source_name": "Specter Ops - Cloud Credential Storage",
                        "url": "https://posts.specterops.io/head-in-the-clouds-bd038bb69e48",
                        "description": "Maddalena, C.. (2018, September 12). Head in the Clouds. Retrieved October 4, 2019."
                    }
                ],
                "name": "Credentials in Files",
                "id": "attack-pattern--ba8e391f-14b5-496f-81f2-2d5ecd646c1c",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-04T12:55:03.678Z",
                "created": "2017-05-31T21:31:02.188Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1214",
                        "url": "https://attack.mitre.org/techniques/T1214"
                    },
                    {
                        "url": "https://pentestlab.blog/2017/04/19/stored-credentials/",
                        "description": "netbiosX. (2017, April 19). Stored Credentials. Retrieved April 6, 2018.",
                        "source_name": "Pentestlab Stored Credentials"
                    }
                ],
                "name": "Credentials in Registry",
                "id": "attack-pattern--2edd9d6a-5674-4326-a600-ba56de467286",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-04T12:59:37.464Z",
                "created": "2018-04-18T17:59:24.739Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1552.002",
                        "url": "https://attack.mitre.org/techniques/T1552/002"
                    },
                    {
                        "url": "https://pentestlab.blog/2017/04/19/stored-credentials/",
                        "description": "netbiosX. (2017, April 19). Stored Credentials. Retrieved April 6, 2018.",
                        "source_name": "Pentestlab Stored Credentials"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Credentials in Registry",
                "description": "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>",
                "id": "attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-02-07T20:49:18.834Z",
                "created": "2020-02-04T12:58:40.678Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_system_requirements": [
                    "Ability to query some Registry locations depends on the adversary's level of access. User permissions are usually limited to access of user-related Registry keys."
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_detection": "Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "Windows Registry"
                ],
                "x_mitre_contributors": [
                    "Sudhanshu Chauhan, @Sudhanshu_C"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1053.003",
                    "url": "https://attack.mitre.org/techniques/T1053/003"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Cron",
                "description": "Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code. The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\n\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for persistence. <code>cron</code> can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.",
                "id": "attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "execution"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-23T23:30:46.546Z",
                "created": "2019-12-03T14:25:00.538Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_remote_support": false,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS"
                ]
            },
            {
                "id": "attack-pattern--f72eb8a8-cd4c-461d-a814-3f862befbf00",
                "name": "Custom Command and Control Protocol",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1094",
                        "url": "https://attack.mitre.org/techniques/T1094"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-20T19:03:04.295Z",
                "created": "2017-05-31T21:31:10.314Z"
            },
            {
                "created": "2017-05-31T21:30:31.197Z",
                "modified": "2020-03-30T20:17:22.024Z",
                "type": "attack-pattern",
                "revoked": true,
                "id": "attack-pattern--3b3cbbe0-6ed3-4334-b543-3ddfd8c5642d",
                "name": "Custom Cryptographic Protocol",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1024",
                        "url": "https://attack.mitre.org/techniques/T1024"
                    },
                    {
                        "url": "https://www.f-secure.com/documents/996508/1030745/cosmicduke_whitepaper.pdf",
                        "description": "F-Secure Labs. (2014, July). COSMICDUKE Cosmu with a twist of MiniDuke. Retrieved July 3, 2014.",
                        "source_name": "F-Secure Cosmicduke"
                    },
                    {
                        "url": "https://www.fidelissecurity.com/sites/default/files/FTA_1018_looking_at_the_sky_for_a_dark_comet.pdf",
                        "description": "Fidelis Cybersecurity. (2015, August 4). Looking at the Sky for a DarkComet. Retrieved April 5, 2016.",
                        "source_name": "Fidelis DarkComet"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1003.006",
                        "url": "https://attack.mitre.org/techniques/T1003/006"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/cc228086.aspx",
                        "description": "Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.",
                        "source_name": "Microsoft DRSR Dec 2017"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/dd207691.aspx",
                        "description": "Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.",
                        "source_name": "Microsoft GetNCCChanges"
                    },
                    {
                        "url": "https://wiki.samba.org/index.php/DRSUAPI",
                        "description": "SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.",
                        "source_name": "Samba DRSUAPI"
                    },
                    {
                        "url": "https://source.winehq.org/WineAPI/samlib.html",
                        "description": "Wine API. (n.d.). samlib.dll. Retrieved December 4, 2017.",
                        "source_name": "Wine API samlib.dll"
                    },
                    {
                        "url": "https://adsecurity.org/?p=1729",
                        "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved August 7, 2017.",
                        "source_name": "ADSecurity Mimikatz DCSync"
                    },
                    {
                        "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/",
                        "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved August 7, 2017.",
                        "source_name": "Harmj0y Mimikatz and DCSync"
                    },
                    {
                        "url": "https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM",
                        "description": "Warren, J. (2017, July 11). Manipulating User Passwords with Mimikatz. Retrieved December 4, 2017.",
                        "source_name": "InsiderThreat ChangeNTLM July 2017"
                    },
                    {
                        "url": "https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump",
                        "description": "Deply, B., Le Toux, V. (2016, June 5). module ~ lsadump. Retrieved August 7, 2017.",
                        "source_name": "GitHub Mimikatz lsadump Module"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/cc237008.aspx",
                        "description": "Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.",
                        "source_name": "Microsoft NRPC Dec 2017"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/cc245496.aspx",
                        "description": "Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.",
                        "source_name": "Microsoft SAMR"
                    },
                    {
                        "url": "https://adsecurity.org/?p=1729",
                        "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.",
                        "source_name": "AdSecurity DCSync Sept 2015"
                    },
                    {
                        "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/",
                        "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.",
                        "source_name": "Harmj0y DCSync Sept 2015"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "DCSync",
                "description": "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\n\nDCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)",
                "id": "attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-24T20:46:23.547Z",
                "created": "2020-02-11T18:45:34.293Z",
                "x_mitre_contributors": [
                    "Vincent Le Toux"
                ],
                "x_mitre_data_sources": [
                    "Windows event logs"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)\n\nNote: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "url": "https://attack.mitre.org/techniques/T1038",
                        "external_id": "T1038",
                        "source_name": "mitre-attack"
                    },
                    {
                        "url": "https://capec.mitre.org/data/definitions/471.html",
                        "source_name": "capec",
                        "external_id": "CAPEC-471"
                    },
                    {
                        "source_name": "Microsoft DLL Search",
                        "description": "Microsoft. (n.d.). Dynamic-Link Library Search Order. Retrieved November 30, 2014.",
                        "url": "http://msdn.microsoft.com/en-US/library/ms682586"
                    },
                    {
                        "source_name": "OWASP Binary Planting",
                        "description": "OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.",
                        "url": "https://www.owasp.org/index.php/Binary_planting"
                    },
                    {
                        "source_name": "Microsoft 2269637",
                        "description": "Microsoft. (2010, August 22). Microsoft Security Advisory 2269637 Released. Retrieved December 5, 2014.",
                        "url": "https://msrc-blog.microsoft.com/2010/08/21/microsoft-security-advisory-2269637-released/"
                    },
                    {
                        "source_name": "Microsoft DLL Redirection",
                        "description": "Microsoft. (n.d.). Dynamic-Link Library Redirection. Retrieved December 5, 2014.",
                        "url": "http://msdn.microsoft.com/en-US/library/ms682600"
                    },
                    {
                        "source_name": "Microsoft Manifests",
                        "description": "Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.",
                        "url": "https://msdn.microsoft.com/en-US/library/aa375365"
                    },
                    {
                        "source_name": "Mandiant Search Order",
                        "description": "Mandiant. (2010, August 31). DLL Search Order Hijacking Revisited. Retrieved December 5, 2014.",
                        "url": "https://www.mandiant.com/blog/dll-search-order-hijacking-revisited/"
                    }
                ],
                "name": "DLL Search Order Hijacking",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-26T14:49:47.091Z",
                "created": "2017-05-31T21:30:40.604Z"
            },
            {
                "created": "2020-03-13T18:11:08.357Z",
                "modified": "2020-03-26T16:13:58.862Z",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "type": "attack-pattern",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL. (Citation: Microsoft Dynamic-Link Library Redirection) (Citation: Microsoft Manifests) (Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "name": "DLL Search Order Hijacking",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574.001",
                        "url": "https://attack.mitre.org/techniques/T1574/001"
                    },
                    {
                        "external_id": "CAPEC-471",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/471.html"
                    },
                    {
                        "source_name": "Microsoft Dynamic Link Library Search Order",
                        "url": "https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-search-order?redirectedfrom=MSDN",
                        "description": "Microsoft. (2018, May 31). Dynamic-Link Library Search Order. Retrieved November 30, 2014."
                    },
                    {
                        "url": "https://www.owasp.org/index.php/Binary_planting",
                        "description": "OWASP. (2013, January 30). Binary planting. Retrieved June 7, 2016.",
                        "source_name": "OWASP Binary Planting"
                    },
                    {
                        "source_name": "Microsoft Security Advisory 2269637",
                        "url": "https://docs.microsoft.com/en-us/security-updates/securityadvisories/2010/2269637",
                        "description": "Microsoft. (, May 23). Microsoft Security Advisory 2269637. Retrieved March 13, 2020."
                    },
                    {
                        "source_name": "Microsoft Dynamic-Link Library Redirection",
                        "url": "https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-redirection?redirectedfrom=MSDN",
                        "description": "Microsoft. (2018, May 31). Dynamic-Link Library Redirection. Retrieved March 13, 2020."
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-US/library/aa375365",
                        "description": "Microsoft. (n.d.). Manifests. Retrieved December 5, 2014.",
                        "source_name": "Microsoft Manifests"
                    },
                    {
                        "source_name": "FireEye DLL Search Order Hijacking",
                        "url": "https://www.fireeye.com/blog/threat-research/2010/08/dll-search-order-hijacking-revisited.html",
                        "description": "Nick Harbour. (2010, September 1). DLL Search Order Hijacking Revisited. Retrieved March 13, 2020."
                    }
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Travis Smith, Tripwire",
                    "Stefan Kanthak"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "DLL monitoring",
                    "File monitoring"
                ],
                "x_mitre_detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1073",
                        "url": "https://attack.mitre.org/techniques/T1073"
                    },
                    {
                        "external_id": "CAPEC-641",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/641.html"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/aa375365",
                        "description": "Microsoft. (n.d.). Manifests. Retrieved June 3, 2016.",
                        "source_name": "MSDN Manifests"
                    },
                    {
                        "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf",
                        "description": "Stewart, A. (2014). DLL SIDE-LOADING: A Thorn in the Side of the Anti-Virus Industry. Retrieved November 12, 2014.",
                        "source_name": "Stewart 2014"
                    }
                ],
                "name": "DLL Side-Loading",
                "id": "attack-pattern--b2001907-166b-4d71-bb3c-9d26c871de09",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-20T14:28:39.529Z",
                "created": "2017-05-31T21:30:58.007Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574.002",
                        "url": "https://attack.mitre.org/techniques/T1574/002"
                    },
                    {
                        "external_id": "CAPEC-capec",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/capec.html"
                    },
                    {
                        "source_name": "About Side by Side Assemblies",
                        "url": "https://docs.microsoft.com/en-us/windows/win32/sbscs/about-side-by-side-assemblies-",
                        "description": "Microsoft. (2018, May 31). About Side-by-Side Assemblies. Retrieved March 13, 2020."
                    },
                    {
                        "source_name": "FireEye DLL Side-Loading",
                        "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf",
                        "description": "Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "DLL Side-Loading",
                "description": "Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program.\n\nPrograms may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: About Side by Side Assemblies) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable by replacing the legitimate DLL with a malicious one.  (Citation: FireEye DLL Side-Loading)\n\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.",
                "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-20T22:05:42.513Z",
                "created": "2020-03-13T19:41:37.908Z",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Application control"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
                "x_mitre_data_sources": [
                    "Loaded DLLs",
                    "Process monitoring",
                    "Process use of network"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1071.004",
                        "url": "https://attack.mitre.org/techniques/T1071/004"
                    },
                    {
                        "source_name": "PAN DNS Tunneling",
                        "url": "https://www.paloaltonetworks.com/cyberpedia/what-is-dns-tunneling",
                        "description": "Palo Alto Networks. (n.d.). What Is DNS Tunneling?. Retrieved March 15, 2020."
                    },
                    {
                        "source_name": "Medium DnsTunneling",
                        "url": "https://medium.com/@galolbardes/learn-how-easy-is-to-bypass-firewalls-using-dns-tunneling-and-also-how-to-block-it-3ed652f4a000",
                        "description": "Galobardes, R. (2018, October 30). Learn how easy is to bypass firewalls using DNS tunneling (and also how to block it). Retrieved March 15, 2020."
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "DNS",
                "description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",
                "id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-27T19:02:44.600Z",
                "created": "2020-03-15T16:27:31.768Z",
                "x_mitre_contributors": [
                    "Jan Petrov, Citi"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for DNS traffic to/from known-bad or suspicious domains.",
                "x_mitre_data_sources": [
                    "DNS records",
                    "Netflow/Enclave netflow",
                    "Process monitoring",
                    "Process use of network",
                    "Netflow/Enclave netflow",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1568.003",
                        "url": "https://attack.mitre.org/techniques/T1568/003"
                    },
                    {
                        "url": "http://www.crowdstrike.com/blog/whois-numbered-panda/",
                        "description": "Meyers, A. (2013, March 29). Whois Numbered Panda. Retrieved January 14, 2016.",
                        "source_name": "Meyers Numbered Panda"
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2014/09/darwins-favorite-apt-group-2.html",
                        "description": "Moran, N., Oppenheim, M., Engle, S., & Wartell, R.. (2014, September 3). Darwin\u2019s Favorite APT Group &#91;Blog&#93;. Retrieved November 12, 2014.",
                        "source_name": "Moran 2014"
                    },
                    {
                        "source_name": "Rapid7G20Espionage",
                        "description": "Rapid7. (2013, August 26). Upcoming G20 Summit Fuels Espionage Operations. Retrieved March 6, 2017.",
                        "url": "https://blog.rapid7.com/2013/08/26/upcoming-g20-summit-fuels-espionage-operations/"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "DNS Calculation",
                "description": "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)\n\nOne implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)",
                "id": "attack-pattern--83a766f8-1501-4b3a-a2de-2e2849e8dfc1",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-27T20:54:28.287Z",
                "created": "2020-03-11T14:56:34.154Z",
                "x_mitre_data_sources": [
                    "DNS records"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Detection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "revoked": true,
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1002",
                        "url": "https://attack.mitre.org/techniques/T1002"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/List_of_file_signatures",
                        "description": "Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.",
                        "source_name": "Wikipedia File Header Signatures"
                    }
                ],
                "name": "Data Compressed",
                "id": "attack-pattern--b9f5dbe2-4c55-4fc5-af2e-d42c1d182ec4",
                "type": "attack-pattern",
                "modified": "2020-03-30T03:09:45.384Z",
                "created": "2017-05-31T21:30:19.338Z"
            },
            {
                "id": "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c",
                "description": "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018)",
                "name": "Data Destruction",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1485",
                        "url": "https://attack.mitre.org/techniques/T1485"
                    },
                    {
                        "source_name": "Symantec Shamoon 2012",
                        "url": "https://www.symantec.com/connect/blogs/shamoon-attacks",
                        "description": "Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019."
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html",
                        "description": "FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.",
                        "source_name": "FireEye Shamoon Nov 2016"
                    },
                    {
                        "url": "http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/",
                        "description": "Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.",
                        "source_name": "Palo Alto Shamoon Nov 2016"
                    },
                    {
                        "source_name": "Kaspersky StoneDrill 2017",
                        "url": "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf",
                        "description": "Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "Unit 42 Shamoon3 2018",
                        "url": "https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/",
                        "description": "Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "Talos Olympic Destroyer 2018",
                        "url": "https://blog.talosintelligence.com/2018/02/olympic-destroyer.html",
                        "description": "Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-27T21:08:19.783Z",
                "created": "2019-03-14T18:47:17.701Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "root",
                    "SYSTEM"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as [SDelete](https://attack.mitre.org/software/S0195). Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\Windows\\System32\\</code>.",
                "x_mitre_impact_type": [
                    "Availability"
                ]
            },
            {
                "id": "attack-pattern--cc7b8c4e-9be0-47ca-b0bb-83915ec3ee2f",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data Encoding",
                "description": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1132",
                        "url": "https://attack.mitre.org/techniques/T1132"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Binary-to-text_encoding",
                        "description": "Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.",
                        "source_name": "Wikipedia Binary-to-text Encoding"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Character_encoding",
                        "description": "Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.",
                        "source_name": "Wikipedia Character Encoding"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-14T23:39:50.338Z",
                "created": "2017-05-31T21:31:43.540Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Process use of network",
                    "Process monitoring",
                    "Network protocol analysis"
                ],
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_contributors": [
                    "Itzik Kotler, SafeBreach"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1022",
                        "url": "https://attack.mitre.org/techniques/T1022"
                    },
                    {
                        "url": "http://www.netsec.colostate.edu/~zhang/DetectingEncryptedBotnetTraffic.pdf",
                        "description": "Zhang, H., Papadopoulos, C., & Massey, D. (2013, April). Detecting encrypted botnet traffic. Retrieved August 19, 2015.",
                        "source_name": "Zhang 2013"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/List_of_file_signatures",
                        "description": "Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.",
                        "source_name": "Wikipedia File Header Signatures"
                    }
                ],
                "name": "Data Encrypted",
                "id": "attack-pattern--d54416bd-0803-41ca-870a-ce1af7c05638",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-30T03:10:12.750Z",
                "created": "2017-05-31T21:30:30.260Z"
            },
            {
                "id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
                "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018) In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017)\n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)",
                "name": "Data Encrypted for Impact",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1486",
                        "url": "https://attack.mitre.org/techniques/T1486"
                    },
                    {
                        "source_name": "US-CERT Ransomware 2016",
                        "url": "https://www.us-cert.gov/ncas/alerts/TA16-091A",
                        "description": "US-CERT. (2016, March 31). Alert (TA16-091A): Ransomware and Recent Variants. Retrieved March 15, 2019."
                    },
                    {
                        "source_name": "FireEye WannaCry 2017",
                        "url": "https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html",
                        "description": "Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019."
                    },
                    {
                        "source_name": "US-CERT NotPetya 2017",
                        "url": "https://www.us-cert.gov/ncas/alerts/TA17-181A",
                        "description": "US-CERT. (2017, July 1). Alert (TA17-181A): Petya Ransomware. Retrieved March 15, 2019."
                    },
                    {
                        "source_name": "US-CERT SamSam 2018",
                        "url": "https://www.us-cert.gov/ncas/alerts/AA18-337A",
                        "description": "US-CERT. (2018, December 3). Alert (AA18-337A): SamSam Ransomware. Retrieved March 15, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-27T21:09:28.699Z",
                "created": "2019-03-15T13:59:30.390Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_detection": "Use process monitoring to monitor the execution and command line parameters of of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\n\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.",
                "x_mitre_data_sources": [
                    "Kernel drivers",
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "root",
                    "SYSTEM"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1565",
                    "url": "https://attack.mitre.org/techniques/T1565"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-28T23:16:20.202Z",
                "created": "2020-03-02T14:19:22.609Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "root",
                    "SYSTEM"
                ],
                "x_mitre_impact_type": [
                    "Integrity"
                ],
                "x_mitre_detection": "Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Network protocol analysis",
                    "File monitoring",
                    "Application logs"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--ad255bfe-a9e6-4b52-a258-8d3462abe842",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data Obfuscation",
                "description": "Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1001",
                        "url": "https://attack.mitre.org/techniques/T1001"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-15T00:40:27.670Z",
                "created": "2017-05-31T21:30:18.931Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Process use of network",
                    "Process monitoring",
                    "Network protocol analysis"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data Staged",
                "description": "Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1074",
                        "url": "https://attack.mitre.org/techniques/T1074"
                    },
                    {
                        "source_name": "PWC Cloud Hopper April 2017",
                        "description": "PwC and BAE Systems. (2017, April). Operation Cloud Hopper. Retrieved April 5, 2017.",
                        "url": "https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-report-final-v4.pdf"
                    },
                    {
                        "source_name": "Mandiant M-Trends 2020",
                        "url": "https://content.fireeye.com/m-trends/rpt-m-trends-2020",
                        "description": "FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-06-24T18:59:16.039Z",
                "created": "2017-05-31T21:30:58.938Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_contributors": [
                    "Praetorian",
                    "Shane Tully, @securitygypsy"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure"
                ],
                "x_mitre_detection": "Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "1.2"
            },
            {
                "id": "attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data Transfer Size Limits",
                "description": "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1030",
                        "external_id": "T1030"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-07-14T19:47:46.912Z",
                "created": "2017-05-31T21:30:34.523Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Process use of network",
                    "Process monitoring"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "description": "Adversaries may access data objects from improperly secured cloud storage.\n\nMany cloud service providers offer solutions for online data storage such as Amazon S3, Azure Storage, and Google Cloud Storage. These solutions differ from other storage solutions (such as SQL or Elasticsearch) in that there is no overarching application. Data from these solutions can be retrieved directly using the cloud provider's APIs. Solution providers typically offer security guides to help end users configure systems.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019)\n\nMisconfiguration by end users is a common problem. There have been numerous incidents where cloud storage has been improperly secured (typically by unintentionally allowing public access by unauthenticated users or overly-broad access by all users), allowing open access to credit cards, personally identifiable information, medical records, and other sensitive information.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017) Adversaries may also obtain leaked credentials in source repositories, logs, or other means as a way to gain access to cloud storage objects that have access permission controls.",
                "name": "Data from Cloud Storage Object",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "external_id": "T1530",
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1530"
                    },
                    {
                        "source_name": "Amazon S3 Security, 2019",
                        "url": "https://aws.amazon.com/premiumsupport/knowledge-center/secure-s3-resources/",
                        "description": "Amazon. (2019, May 17). How can I secure the files in my Amazon S3 bucket?. Retrieved October 4, 2019."
                    },
                    {
                        "source_name": "Microsoft Azure Storage Security, 2019",
                        "url": "https://docs.microsoft.com/en-us/azure/storage/common/storage-security-guide",
                        "description": "Amlekar, M., Brooks, C., Claman, L., et. al.. (2019, March 20). Azure Storage security guide. Retrieved October 4, 2019."
                    },
                    {
                        "source_name": "Google Cloud Storage Best Practices, 2019",
                        "url": "https://cloud.google.com/storage/docs/best-practices",
                        "description": "Google. (2019, September 16). Best practices for Cloud Storage. Retrieved October 4, 2019."
                    },
                    {
                        "source_name": "Trend Micro S3 Exposed PII, 2017",
                        "url": "https://www.trendmicro.com/vinfo/us/security/news/virtualization-and-cloud/a-misconfigured-amazon-s3-exposed-almost-50-thousand-pii-in-australia",
                        "description": "Trend Micro. (2017, November 6). A Misconfigured Amazon S3 Exposed Almost 50 Thousand PII in Australia. Retrieved October 4, 2019."
                    },
                    {
                        "source_name": "Wired Magecart S3 Buckets, 2019",
                        "url": "https://www.wired.com/story/magecart-amazon-cloud-hacks/",
                        "description": "Barrett, B.. (2019, July 11). Hack Brief: A Card-Skimming Hacker Group Hit 17K Domains\u2014and Counting. Retrieved October 4, 2019."
                    },
                    {
                        "source_name": "HIPAA Journal S3 Breach, 2017",
                        "url": "https://www.hipaajournal.com/47gb-medical-records-unsecured-amazon-s3-bucket/",
                        "description": "HIPAA Journal. (2017, October 11). 47GB of Medical Records and Test Results Found in Unsecured Amazon S3 Bucket. Retrieved October 4, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-07-09T14:02:05.276Z",
                "created": "2019-08-30T18:07:27.741Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_contributors": [
                    "Netskope",
                    "Praetorian"
                ],
                "x_mitre_detection": "Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.",
                "x_mitre_data_sources": [
                    "Stackdriver logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1213",
                        "url": "https://attack.mitre.org/techniques/T1213"
                    },
                    {
                        "url": "https://support.office.com/en-us/article/configure-audit-settings-for-a-site-collection-a9920c97-38c0-44f2-8bcb-4cf1e2ae22d2",
                        "description": "Microsoft. (2017, July 19). Configure audit settings for a site collection. Retrieved April 4, 2018.",
                        "source_name": "Microsoft SharePoint Logging"
                    },
                    {
                        "url": "https://confluence.atlassian.com/confkb/how-to-enable-user-access-logging-182943.html",
                        "description": "Atlassian. (2018, January 9). How to Enable User Access Logging. Retrieved April 4, 2018.",
                        "source_name": "Atlassian Confluence Logging"
                    }
                ],
                "description": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\n\nAdversaries may also collect information from shared storage repositories hosted on cloud infrastructure or in software-as-a-service (SaaS) applications, as storage is one of the more fundamental requirements for cloud services and systems.\n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002), [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise databases such as SQL Server.",
                "name": "Data from Information Repositories",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-06-30T22:50:06.087Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "2.1",
                "x_mitre_contributors": [
                    "Praetorian",
                    "Milos Stojadinovic"
                ],
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "AWS CloudTrail logs",
                    "Stackdriver logs",
                    "OAuth audit logs",
                    "Application logs",
                    "Authentication logs",
                    "Data loss prevention",
                    "Third-party application logs"
                ],
                "x_mitre_detection": "As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should not generally used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nThe user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS",
                    "SaaS",
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365"
                ]
            },
            {
                "created": "2017-05-31T21:30:20.537Z",
                "modified": "2020-05-26T19:21:25.974Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "type": "attack-pattern",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1005",
                    "external_id": "T1005"
                }],
                "description": "Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106), which has functionality to interact with the file system to gather information. Some adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "name": "Data from Local System",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "x_mitre_version": "1.2",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_system_requirements": [
                    "Privileges to access certain files and directories"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data from Network Shared Drive",
                "description": "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1039",
                        "url": "https://attack.mitre.org/techniques/T1039"
                    },
                    {
                        "external_id": "CAPEC-639",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/639.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-24T15:42:44.026Z",
                "created": "2017-05-31T21:30:41.022Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_system_requirements": [
                    "Privileges to access network shared drive"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "1.2"
            },
            {
                "id": "attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Data from Removable Media",
                "description": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1025",
                    "external_id": "T1025"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-24T15:44:46.584Z",
                "created": "2017-05-31T21:30:31.584Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_system_requirements": [
                    "Privileges to access removable media drive and files"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "created": "2020-03-14T22:24:21.841Z",
                "modified": "2020-03-26T23:12:30.499Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
                "description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
                "name": "Dead Drop Resolver",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1102.001",
                        "url": "https://attack.mitre.org/techniques/T1102/001"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Host network interface",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "Packet capture",
                    "SSL/TLS inspection"
                ],
                "x_mitre_detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1491",
                    "url": "https://attack.mitre.org/techniques/T1491"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Defacement",
                "description": "Adversaries may modify visual content available internally or externally to an enterprise network. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. \n",
                "id": "attack-pattern--5909f20f-3c39-4795-be06-ef1ea40d350b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-04-22T15:19:31.682Z",
                "created": "2019-04-08T17:51:41.390Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.1",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure"
                ],
                "x_mitre_impact_type": [
                    "Integrity"
                ],
                "x_mitre_detection": "Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\n\n",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Web application firewall logs",
                    "Web logs",
                    "Packet capture"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1078.001",
                        "url": "https://attack.mitre.org/techniques/T1078/001"
                    },
                    {
                        "source_name": "Microsoft Local Accounts Feb 2019",
                        "url": "https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts",
                        "description": "Microsoft. (2018, December 9). Local Accounts. Retrieved February 11, 2019."
                    },
                    {
                        "source_name": "Metasploit SSH Module",
                        "url": "https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh",
                        "description": "undefined. (n.d.). Retrieved April 12, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Default Accounts",
                "description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices.(Citation: Microsoft Local Accounts Feb 2019)\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)",
                "id": "attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "initial-access"
                    }
                ],
                "modified": "2020-03-23T21:37:34.567Z",
                "created": "2020-03-13T20:15:31.974Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_detection": "Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
                "x_mitre_data_sources": [
                    "AWS CloudTrail logs",
                    "Stackdriver logs",
                    "Authentication logs",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD",
                    "SaaS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1578.003",
                        "url": "https://attack.mitre.org/techniques/T1578/003"
                    },
                    {
                        "source_name": "Mandiant M-Trends 2020",
                        "url": "https://content.fireeye.com/m-trends/rpt-m-trends-2020",
                        "description": "FireEye / Mandiant. (2020, February). M-Trends 2020. Retrieved April 24, 2020."
                    },
                    {
                        "source_name": "AWS CloudTrail Search",
                        "url": "https://aws.amazon.com/premiumsupport/knowledge-center/cloudtrail-search-api-calls/",
                        "description": "Amazon. (n.d.). Search CloudTrail logs for API calls to EC2 Instances. Retrieved June 17, 2020."
                    },
                    {
                        "source_name": "Azure Activity Logs",
                        "url": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/view-activity-logs",
                        "description": "Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020."
                    },
                    {
                        "source_name": "Cloud Audit Logs",
                        "url": "https://cloud.google.com/logging/docs/audit#admin-activity",
                        "description": "Google. (n.d.). Audit Logs. Retrieved June 1, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Delete Cloud Instance",
                "description": "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--70857657-bd0b-4695-ad3e-b13f92cac1b4",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-17T19:53:14.784Z",
                "created": "2020-06-16T17:23:06.508Z",
                "x_mitre_detection": "The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the deletion of an instance in the <code>TerminateInstances</code> event, and in Azure the deletion of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances delete</code> to delete a VM.(Citation: Cloud Audit Logs)",
                "x_mitre_data_sources": [
                    "GCP audit logs",
                    "Stackdriver logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1140",
                        "url": "https://attack.mitre.org/techniques/T1140"
                    },
                    {
                        "url": "https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/",
                        "description": "Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.",
                        "source_name": "Malwarebytes Targeted Attack against Saudi Arabia"
                    },
                    {
                        "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/",
                        "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
                        "source_name": "Carbon Black Obfuscation Sept 2016"
                    },
                    {
                        "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/",
                        "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
                        "source_name": "Volexity PowerDuke November 2016"
                    }
                ],
                "description": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)",
                "name": "Deobfuscate/Decode Files or Information",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-07-09T14:42:23.122Z",
                "created": "2017-12-14T16:46:06.044Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.1",
                "x_mitre_contributors": [
                    "Matthew Demaske, Adaptforward",
                    "Red Canary"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Host intrusion prevention systems",
                    "Signature-based detection",
                    "Network intrusion detection system"
                ],
                "x_mitre_detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1498.001",
                        "url": "https://attack.mitre.org/techniques/T1498/001"
                    },
                    {
                        "source_name": "USNYAG IranianBotnet March 2016",
                        "url": "https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged",
                        "description": "Preet Bharara, US Attorney. (2016, March 24). Retrieved April 23, 2019."
                    },
                    {
                        "source_name": "Cisco DoSdetectNetflow",
                        "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf",
                        "description": "Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001) are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-29T01:10:52.360Z",
                "created": "2020-03-02T20:07:18.651Z",
                "x_mitre_data_sources": [
                    "Sensor health and status",
                    "Network protocol analysis",
                    "Netflow/Enclave netflow",
                    "Network intrusion detection system",
                    "Network device logs"
                ],
                "x_mitre_detection": "Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure AD",
                    "SaaS",
                    "Azure",
                    "Office 365"
                ]
            },
            {
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell. (Citation: Github PowerSploit Ninjacopy)",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1006",
                        "url": "https://attack.mitre.org/techniques/T1006"
                    },
                    {
                        "url": "http://www.codeproject.com/Articles/32169/FDump-Dumping-File-Sectors-Directly-from-Disk-usin",
                        "description": "Hakobyan, A. (2009, January 8). FDump - Dumping File Sectors Directly from Disk using Logical Offsets. Retrieved November 12, 2014.",
                        "source_name": "Hakobyan 2009"
                    },
                    {
                        "url": "https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-NinjaCopy.ps1",
                        "description": "Bialek, J. (2015, December 16). Invoke-NinjaCopy.ps1. Retrieved June 2, 2016.",
                        "source_name": "Github PowerSploit Ninjacopy"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-01-30T22:27:39.932Z",
                "created": "2017-05-31T21:30:20.934Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. (Citation: Github PowerSploit Ninjacopy)\n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1086), additional logging of PowerShell scripts is recommended.",
                "x_mitre_defense_bypassed": [
                    "File monitoring",
                    "File system access controls"
                ],
                "x_mitre_data_sources": [
                    "API monitoring"
                ],
                "x_mitre_version": "2.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1562.002",
                        "url": "https://attack.mitre.org/techniques/T1562/002"
                    },
                    {
                        "source_name": "Windows Log Events",
                        "url": "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/",
                        "description": "Franklin Smith. (n.d.). Windows Security Log Events. Retrieved February 21, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nAdversaries may targeting system-wide logging or just that of a particular application. By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T22:02:33.870Z",
                "created": "2020-02-21T20:46:36.688Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_defense_bypassed": [
                    "Log analysis"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for commands that can be used to disable logging. Lack of event logs may be suspicious.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Windows event logs",
                    "Process command-line parameters"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1562.007",
                        "url": "https://attack.mitre.org/techniques/T1562/007"
                    },
                    {
                        "source_name": "Expel IO Evil in AWS",
                        "url": "https://expel.io/blog/finding-evil-in-aws/",
                        "description": "Anthony Randazzo, Britton Manahan and Sam Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Disable or Modify Cloud Firewall",
                "description": "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity.(Citation: Expel IO Evil in AWS)\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",
                "id": "attack-pattern--77532a55-c283-4cd2-bc5d-2d0b65e9d88c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-07-07T13:49:05.345Z",
                "created": "2020-06-24T16:55:46.243Z",
                "x_mitre_contributors": [
                    "Expel"
                ],
                "x_mitre_detection": "Monitor cloud logs for modification or creation of new security groups or firewall rules.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Stackdriver logs",
                    "GCP audit logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs"
                ],
                "x_mitre_platforms": [
                    "AWS",
                    "GCP",
                    "Azure"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1562.004",
                    "url": "https://attack.mitre.org/techniques/T1562/004"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Disable or Modify System Firewall",
                "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. ",
                "id": "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T22:18:11.166Z",
                "created": "2020-02-21T21:00:48.814Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_defense_bypassed": [
                    "Firewall"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process command-line parameters",
                    "Windows Registry"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2020-02-21T20:32:20.810Z",
                "modified": "2020-03-29T21:52:43.151Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information.",
                "name": "Disable or Modify Tools",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1562.001",
                        "url": "https://attack.mitre.org/techniques/T1562/001"
                    },
                    {
                        "external_id": "CAPEC-578",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/578.html"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Windows Registry",
                    "Services",
                    "File monitoring"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log events may be suspicious.",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Log analysis",
                    "Signature-based detection",
                    "Host intrusion prevention systems",
                    "File monitoring"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044",
                "name": "Disabling Security Tools",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1089",
                        "external_id": "T1089"
                    },
                    {
                        "external_id": "CAPEC-578",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/578.html"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-21T20:35:48.979Z",
                "created": "2017-05-31T21:31:07.958Z"
            },
            {
                "id": "attack-pattern--b82f7d37-b826-4ec9-9391-8e121c78aed7",
                "name": "Disk Content Wipe",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1488",
                        "url": "https://attack.mitre.org/techniques/T1488"
                    },
                    {
                        "source_name": "Novetta Blockbuster",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.",
                        "url": "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf"
                    },
                    {
                        "source_name": "Novetta Blockbuster Destructive Malware",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.",
                        "url": "https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf"
                    },
                    {
                        "source_name": "DOJ Lazarus Sony 2018",
                        "url": "https://www.justice.gov/opa/press-release/file/1092091/download",
                        "description": "Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019."
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-20T22:07:27.495Z",
                "created": "2019-03-29T14:59:50.763Z"
            },
            {
                "created": "2020-02-20T22:06:41.739Z",
                "modified": "2020-03-28T22:53:20.162Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--fb640c43-aa6b-431e-a961-a279010424ac",
                "description": "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",
                "name": "Disk Content Wipe",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1561.001",
                        "url": "https://attack.mitre.org/techniques/T1561/001"
                    },
                    {
                        "source_name": "Novetta Blockbuster",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.",
                        "url": "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf"
                    },
                    {
                        "source_name": "Novetta Blockbuster Destructive Malware",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.",
                        "url": "https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf"
                    },
                    {
                        "source_name": "DOJ Lazarus Sony 2018",
                        "url": "https://www.justice.gov/opa/press-release/file/1092091/download",
                        "description": "Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019."
                    },
                    {
                        "url": "https://docs.microsoft.com/sysinternals/downloads/sysmon",
                        "description": "Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.",
                        "source_name": "Microsoft Sysmon v6 May 2017"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Kernel drivers",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_detection": "Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.",
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_permissions_required": [
                    "SYSTEM",
                    "root",
                    "Administrator",
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1487",
                        "url": "https://attack.mitre.org/techniques/T1487"
                    },
                    {
                        "source_name": "Symantec Shamoon 2012",
                        "url": "https://www.symantec.com/connect/blogs/shamoon-attacks",
                        "description": "Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019."
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html",
                        "description": "FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.",
                        "source_name": "FireEye Shamoon Nov 2016"
                    },
                    {
                        "url": "http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/",
                        "description": "Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.",
                        "source_name": "Palo Alto Shamoon Nov 2016"
                    },
                    {
                        "source_name": "Kaspersky StoneDrill 2017",
                        "url": "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf",
                        "description": "Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "Unit 42 Shamoon3 2018",
                        "url": "https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/",
                        "description": "Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019."
                    }
                ],
                "name": "Disk Structure Wipe",
                "id": "attack-pattern--2e114e45-2c50-404c-804a-3af9564d240e",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-20T22:11:00.106Z",
                "created": "2019-03-19T19:38:27.097Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1561.002",
                        "url": "https://attack.mitre.org/techniques/T1561/002"
                    },
                    {
                        "source_name": "Symantec Shamoon 2012",
                        "url": "https://www.symantec.com/connect/blogs/shamoon-attacks",
                        "description": "Symantec. (2012, August 16). The Shamoon Attacks. Retrieved March 14, 2019."
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html",
                        "description": "FireEye. (2016, November 30). FireEye Responds to Wave of Destructive Cyber Attacks in Gulf Region. Retrieved January 11, 2017.",
                        "source_name": "FireEye Shamoon Nov 2016"
                    },
                    {
                        "url": "http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/",
                        "description": "Falcone, R.. (2016, November 30). Shamoon 2: Return of the Disttrack Wiper. Retrieved January 11, 2017.",
                        "source_name": "Palo Alto Shamoon Nov 2016"
                    },
                    {
                        "source_name": "Kaspersky StoneDrill 2017",
                        "url": "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf",
                        "description": "Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "Unit 42 Shamoon3 2018",
                        "url": "https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/",
                        "description": "Falcone, R. (2018, December 13). Shamoon 3 Targets Oil and Gas Organization. Retrieved March 14, 2019."
                    },
                    {
                        "url": "https://docs.microsoft.com/sysinternals/downloads/sysmon",
                        "description": "Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.",
                        "source_name": "Microsoft Sysmon v6 May 2017"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-28T23:00:00.367Z",
                "created": "2020-02-20T22:10:20.484Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "root",
                    "SYSTEM"
                ],
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_detection": "Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.",
                "x_mitre_data_sources": [
                    "Kernel drivers",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1561",
                        "url": "https://attack.mitre.org/techniques/T1561"
                    },
                    {
                        "source_name": "Novetta Blockbuster Destructive Malware",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.",
                        "url": "https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf"
                    },
                    {
                        "url": "https://docs.microsoft.com/sysinternals/downloads/sysmon",
                        "description": "Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017.",
                        "source_name": "Microsoft Sysmon v6 May 2017"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Disk Wipe",
                "description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",
                "id": "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-28T23:00:00.599Z",
                "created": "2020-02-20T22:02:20.372Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User",
                    "root",
                    "SYSTEM",
                    "Administrator"
                ],
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_detection": "Look for attempts to read/write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.",
                "x_mitre_data_sources": [
                    "Kernel drivers",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2020-02-11T18:26:36.444Z",
                "modified": "2020-03-23T20:21:03.684Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }],
                "type": "attack-pattern",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1021.003",
                        "url": "https://attack.mitre.org/techniques/T1021/003"
                    },
                    {
                        "source_name": "Fireeye Hunting COM June 2019",
                        "url": "https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html",
                        "description": "Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019."
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx",
                        "description": "Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.",
                        "source_name": "Microsoft COM"
                    },
                    {
                        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx",
                        "description": "Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017.",
                        "source_name": "Microsoft Process Wide Com Keys"
                    },
                    {
                        "url": "https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1",
                        "description": "Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.",
                        "source_name": "Microsoft COM ACL"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/",
                        "description": "Nelson, M. (2017, November 16). Lateral Movement using Outlook's CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.",
                        "source_name": "Enigma Outlook DCOM Lateral Movement Nov 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/",
                        "description": "Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.",
                        "source_name": "Enigma MMC20 COM Jan 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/",
                        "description": "Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round 2. Retrieved November 21, 2017.",
                        "source_name": "Enigma DCOM Lateral Movement Jan 2017"
                    },
                    {
                        "url": "https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/",
                        "description": "Nelson, M. (2017, September 11). Lateral Movement using Excel.Application and DCOM. Retrieved November 21, 2017.",
                        "source_name": "Enigma Excel DCOM Sept 2017"
                    },
                    {
                        "url": "https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom",
                        "description": "Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral movement via DCOM. Retrieved November 21, 2017.",
                        "source_name": "Cyberreason DCOM DDE Lateral Movement Nov 2017"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Distributed Component Object Model",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke Dynamic Data Exchange (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document.",
                "id": "attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd",
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "Windows Registry",
                    "Process monitoring",
                    "Packet capture",
                    "DLL monitoring",
                    "Authentication logs",
                    "API monitoring",
                    "PowerShell logs"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\n\nMonitor for any influxes or abnormal increases in Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "created": "2020-01-28T14:05:17.825Z",
                "modified": "2020-03-23T18:12:36.696Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--7610cada-1499-41a4-b3dd-46467b68d177",
                "description": "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
                "name": "Domain Account",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1136.002",
                        "url": "https://attack.mitre.org/techniques/T1136/002"
                    },
                    {
                        "source_name": "Microsoft User Creation Event",
                        "description": "Lich, B., Miroshnikov, A. (2017, April 5). 4720(S): A user account was created. Retrieved June 30, 2017.",
                        "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4720"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters",
                    "Authentication logs",
                    "Windows event logs"
                ],
                "x_mitre_detection": "Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.",
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1087.002",
                        "url": "https://attack.mitre.org/techniques/T1087/002"
                    },
                    {
                        "external_id": "CAPEC-575",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/575.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Domain Account",
                "description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups.",
                "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-26T13:42:34.402Z",
                "created": "2020-02-21T21:08:26.480Z",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2020-03-13T20:21:54.758Z",
                "modified": "2020-03-23T21:08:40.063Z",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "initial-access"
                    }
                ],
                "type": "attack-pattern",
                "id": "attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f",
                "description": "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. (Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.",
                "name": "Domain Accounts",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1078.002",
                        "url": "https://attack.mitre.org/techniques/T1078/002"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/dn535501.aspx",
                        "description": "Microsoft. (2016, April 15). Attractive Accounts for Credential Theft. Retrieved June 3, 2016.",
                        "source_name": "TechNet Credential Theft"
                    },
                    {
                        "source_name": "Microsoft AD Accounts",
                        "url": "https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/active-directory-accounts",
                        "description": "Microsoft. (2019, August 23). Active Directory Accounts. Retrieved March 13, 2020."
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/dn487457.aspx",
                        "description": "Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.",
                        "source_name": "TechNet Audit Policy"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.",
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1556.001",
                        "url": "https://attack.mitre.org/techniques/T1556/001"
                    },
                    {
                        "source_name": "Dell Skeleton",
                        "description": "Dell SecureWorks. (2015, January 12). Skeleton Key Malware Analysis. Retrieved April 8, 2019.",
                        "url": "https://www.secureworks.com/research/skeleton-key-malware-analysis"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/dn487457.aspx",
                        "description": "Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016.",
                        "source_name": "TechNet Audit Policy"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Domain Controller Authentication",
                "description": "Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts. \n\nMalware may be used to inject false credentials into the authentication process on a domain control with the intent of creating a backdoor used to access any user\u2019s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)",
                "id": "attack-pattern--d4b96d2c-1032-4b22-9235-2b5b649d0605",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "credential-access"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-03-25T20:51:30.829Z",
                "created": "2020-02-11T19:05:02.399Z",
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "API monitoring",
                    "DLL monitoring"
                ],
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access). ",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--1ce03c65-5946-4ac9-9d4d-66db87e024bd",
                "name": "Domain Fronting",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1172",
                        "url": "https://attack.mitre.org/techniques/T1172"
                    },
                    {
                        "url": "http://www.icir.org/vern/papers/meek-PETS-2015.pdf",
                        "description": "David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. (2015). Blocking-resistant communication through domain fronting. Retrieved November 20, 2017.",
                        "source_name": "Fifield Blocking Resistent Communication through domain fronting 2015"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-14T23:29:54.083Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1090.004",
                        "url": "https://attack.mitre.org/techniques/T1090/004"
                    },
                    {
                        "url": "http://www.icir.org/vern/papers/meek-PETS-2015.pdf",
                        "description": "David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. (2015). Blocking-resistant communication through domain fronting. Retrieved November 20, 2017.",
                        "source_name": "Fifield Blocking Resistent Communication through domain fronting 2015"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Domain Fronting",
                "description": "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
                "id": "attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-06-20T20:53:20.398Z",
                "created": "2020-03-14T23:29:19.581Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)",
                "x_mitre_data_sources": [
                    "SSL/TLS inspection",
                    "Packet capture"
                ],
                "x_mitre_contributors": [
                    "Matt Kelly, @breakersall"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1483",
                        "url": "https://attack.mitre.org/techniques/T1483"
                    },
                    {
                        "source_name": "Cybereason Dissecting DGAs",
                        "url": "http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf",
                        "description": "Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Cisco Umbrella DGA",
                        "url": "https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/",
                        "description": "Scarfo, A. (2016, October 10). Domain Generation Algorithms \u2013 Why so effective?. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Unit 42 DGA Feb 2019",
                        "url": "https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/",
                        "description": "Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019."
                    },
                    {
                        "url": "http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html",
                        "description": "Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.",
                        "source_name": "Talos CCleanup 2017"
                    },
                    {
                        "source_name": "Akamai DGA Mitigation",
                        "url": "https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html",
                        "description": "Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019."
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html",
                        "description": "Dunwoody, M.. (2017, April 3). Dissecting One of APT29\u2019s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.",
                        "source_name": "FireEye POSHSPY April 2017"
                    },
                    {
                        "source_name": "ESET Sednit 2017 Activity",
                        "url": "https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/",
                        "description": "ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Data Driven Security DGA",
                        "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/",
                        "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Pace University Detecting DGA May 2017",
                        "url": "http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf",
                        "description": "Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019."
                    },
                    {
                        "source_name": "Endgame Predicting DGA",
                        "url": "https://arxiv.org/pdf/1611.00791.pdf",
                        "description": "Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019."
                    }
                ],
                "name": "Domain Generation Algorithms",
                "id": "attack-pattern--54456690-84de-4538-9101-643e26437e09",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-20T19:51:55.085Z",
                "created": "2019-02-18T17:22:57.831Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1568.002",
                        "url": "https://attack.mitre.org/techniques/T1568/002"
                    },
                    {
                        "source_name": "Cybereason Dissecting DGAs",
                        "url": "http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf",
                        "description": "Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Cisco Umbrella DGA",
                        "url": "https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/",
                        "description": "Scarfo, A. (2016, October 10). Domain Generation Algorithms \u2013 Why so effective?. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Unit 42 DGA Feb 2019",
                        "url": "https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/",
                        "description": "Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019."
                    },
                    {
                        "url": "http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html",
                        "description": "Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.",
                        "source_name": "Talos CCleanup 2017"
                    },
                    {
                        "source_name": "Akamai DGA Mitigation",
                        "url": "https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html",
                        "description": "Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019."
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html",
                        "description": "Dunwoody, M.. (2017, April 3). Dissecting One of APT29\u2019s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.",
                        "source_name": "FireEye POSHSPY April 2017"
                    },
                    {
                        "source_name": "ESET Sednit 2017 Activity",
                        "url": "https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/",
                        "description": "ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Data Driven Security DGA",
                        "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/",
                        "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Pace University Detecting DGA May 2017",
                        "url": "http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf",
                        "description": "Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019."
                    },
                    {
                        "source_name": "Endgame Predicting DGA",
                        "url": "https://arxiv.org/pdf/1611.00791.pdf",
                        "description": "Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Domain Generation Algorithms",
                "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
                "id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-12T14:45:22.784Z",
                "created": "2020-03-10T17:44:59.787Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain or related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Endgame Predicting DGA)",
                "x_mitre_data_sources": [
                    "DNS records",
                    "Netflow/Enclave netflow",
                    "Network device logs",
                    "Packet capture",
                    "Process use of network"
                ],
                "x_mitre_contributors": [
                    "Ryan Benson, Exabeam",
                    "Barry Shteiman, Exabeam",
                    "Sylvain Gil, Exabeam"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1069.002",
                    "url": "https://attack.mitre.org/techniques/T1069/002"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Domain Groups",
                "description": "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",
                "id": "attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-12T19:07:53.043Z",
                "created": "2020-02-21T21:15:06.561Z",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2019-02-14T16:15:05.974Z",
                "modified": "2020-03-26T16:13:21.085Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "type": "attack-pattern",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1482",
                        "url": "https://attack.mitre.org/techniques/T1482"
                    },
                    {
                        "source_name": "Microsoft Trusts",
                        "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759554(v=ws.10)",
                        "description": "Microsoft. (2009, October 7). Trust Technologies. Retrieved February 14, 2019."
                    },
                    {
                        "source_name": "AdSecurity Forging Trust Tickets",
                        "url": "https://adsecurity.org/?p=1588",
                        "description": "Metcalf, S. (2015, July 15). It\u2019s All About Trust \u2013 Forging Kerberos Trust Tickets to Spoof Access across Active Directory Trusts. Retrieved February 14, 2019."
                    },
                    {
                        "source_name": "Harmj0y Domain Trusts",
                        "url": "http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/ ",
                        "description": "Schroeder, W. (2017, October 30). A Guide to Attacking Domain Trusts. Retrieved February 14, 2019."
                    },
                    {
                        "source_name": "Microsoft Operation Wilysupply",
                        "url": "https://www.microsoft.com/security/blog/2017/05/04/windows-defender-atp-thwarts-operation-wilysupply-software-supply-chain-cyberattack/",
                        "description": "Florio, E.. (2017, May 4). Windows Defender ATP thwarts Operation WilySupply software supply chain cyberattack. Retrieved February 14, 2019."
                    },
                    {
                        "source_name": "Microsoft GetAllTrustRelationships",
                        "url": "https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.activedirectory.domain.getalltrustrelationships?redirectedfrom=MSDN&view=netframework-4.7.2#System_DirectoryServices_ActiveDirectory_Domain_GetAllTrustRelationships",
                        "description": "Microsoft. (n.d.). Domain.GetAllTrustRelationships Method. Retrieved February 14, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Domain Trust Discovery",
                "description": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)",
                "id": "attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0",
                "x_mitre_version": "1.1",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)\n",
                "x_mitre_data_sources": [
                    "PowerShell logs",
                    "API monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_contributors": [
                    "Dave Westgard",
                    "Elia Florio, Microsoft",
                    "Mnemonic",
                    "RedHuntLabs, @redhuntlabs"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Drive-by Compromise",
                "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1189",
                        "url": "https://attack.mitre.org/techniques/T1189"
                    },
                    {
                        "url": "http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/",
                        "description": "Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic Web Compromises \u2013 Trusted Websites Serving Dangerous Results. Retrieved March 13, 2018.",
                        "source_name": "Shadowserver Strategic Web Compromise"
                    },
                    {
                        "source_name": "Volexity OceanLotus Nov 2017",
                        "description": "Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.",
                        "url": "https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }],
                "modified": "2020-03-29T23:48:15.056Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_contributors": [
                    "Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)",
                    "Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "Linux",
                    "macOS",
                    "SaaS"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS MITM inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Network device logs",
                    "Process use of network",
                    "Web proxy",
                    "Network intrusion detection system",
                    "SSL/TLS inspection"
                ],
                "x_mitre_version": "1.2"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1157",
                        "url": "https://attack.mitre.org/techniques/T1157"
                    },
                    {
                        "external_id": "CAPEC-471",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/471.html"
                    },
                    {
                        "url": "https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf",
                        "description": "Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.",
                        "source_name": "Writing Bad Malware for OSX"
                    },
                    {
                        "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf",
                        "description": "Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.",
                        "source_name": "Malware Persistence on OS X"
                    }
                ],
                "name": "Dylib Hijacking",
                "id": "attack-pattern--aa8bfbc9-78dc-41a4-a03b-7453e0fdccda",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-19T15:09:47.005Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "id": "attack-pattern--fc742192-19e3-466c-9eb5-964a97b29490",
                "description": "Adversaries may execute their own malicious payloads by hijacking ambiguous paths  used to load libraries. Adversaries may plant trojan dynamic libraries, in a directory that will be searched by the operating system before the legitimate library specified by the victim program, so that their malicious library will be loaded into the victim program instead.  MacOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths.\n\nA common method is to see what dylibs an application uses, then plant a malicious version with the same name higher up in the search path. This typically results in the dylib being in the same folder as the application itself. (Citation: Writing Bad Malware for OSX) (Citation: Malware Persistence on OS X)\n\nIf the program is configured to run at a higher privilege level than the current user, then when the dylib is loaded into the application, the dylib will also run at that elevated level.",
                "name": "Dylib Hijacking",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574.004",
                        "url": "https://attack.mitre.org/techniques/T1574/004"
                    },
                    {
                        "external_id": "CAPEC-CAPEC",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/CAPEC.html"
                    },
                    {
                        "url": "https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf",
                        "description": "Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.",
                        "source_name": "Writing Bad Malware for OSX"
                    },
                    {
                        "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf",
                        "description": "Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.",
                        "source_name": "Malware Persistence on OS X"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-20T22:06:47.115Z",
                "created": "2020-03-16T15:23:30.896Z",
                "x_mitre_platforms": [
                    "macOS"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_detection": "Objective-See's Dylib Hijacking Scanner can be used to detect potential cases of dylib hijacking. Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. ",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_defense_bypassed": [
                    "Application control"
                ]
            },
            {
                "id": "attack-pattern--edbe24e9-aec4-4994-ac75-6a6bc7f1ddd0",
                "name": "Dynamic Data Exchange",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1173",
                        "url": "https://attack.mitre.org/techniques/T1173"
                    },
                    {
                        "url": "https://www.bleepingcomputer.com/news/microsoft/microsoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks/",
                        "description": "Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017.",
                        "source_name": "BleepingComputer DDE Disabled in Word Dec 2017"
                    },
                    {
                        "url": "https://portal.msrc.microsoft.com/security-guidance/advisory/ADV170021",
                        "description": "Microsoft. (2017, December 12). ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.",
                        "source_name": "Microsoft ADV170021 Dec 2017"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/security/4053440",
                        "description": "Microsoft. (2017, November 8). Microsoft Security Advisory 4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.",
                        "source_name": "Microsoft DDE Advisory Nov 2017"
                    },
                    {
                        "url": "https://sensepost.com/blog/2016/powershell-c-sharp-and-dde-the-power-within/",
                        "description": "El-Sherei, S. (2016, May 20). PowerShell, C-Sharp and DDE The Power Within. Retrieved November 22, 2017.",
                        "source_name": "SensePost PS DDE May 2016"
                    },
                    {
                        "url": "https://www.contextis.com/blog/comma-separated-vulnerabilities",
                        "description": "Kettle, J. (2014, August 29). Comma Separated Vulnerabilities. Retrieved November 22, 2017.",
                        "source_name": "Kettle CSV DDE Aug 2014"
                    },
                    {
                        "url": "https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee",
                        "description": "Nelson, M. (2018, January 29). Reviving DDE: Using OneNote and Excel for Code Execution. Retrieved February 3, 2018.",
                        "source_name": "Enigma Reviving DDE Jan 2018"
                    },
                    {
                        "url": "https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/",
                        "description": "Stalmans, E., El-Sherei, S. (2017, October 9). Macro-less Code Exec in MSWord. Retrieved November 21, 2017.",
                        "source_name": "SensePost MacroLess DDE Oct 2017"
                    },
                    {
                        "url": "https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/",
                        "description": "NVISO Labs. (2017, October 11). Detecting DDE in MS Office documents. Retrieved November 21, 2017.",
                        "source_name": "NVisio Labs DDE Detection Oct 2017"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-09T13:00:18.698Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "created": "2020-02-12T14:10:50.699Z",
                "modified": "2020-03-28T19:32:56.572Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--232a7e42-cd6e-4902-8fe9-2960f529dd4d",
                "description": "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. (Citation: BleepingComputer DDE Disabled in Word Dec 2017) (Citation: Microsoft ADV170021 Dec 2017) (Citation: Microsoft DDE Advisory Nov 2017)\n\nMicrosoft Office documents can be poisoned with DDE commands (Citation: SensePost PS DDE May 2016) (Citation: Kettle CSV DDE Aug 2014), directly or through embedded files (Citation: Enigma Reviving DDE Jan 2018), and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. (Citation: SensePost MacroLess DDE Oct 2017) DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).",
                "name": "Dynamic Data Exchange",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1559.002",
                        "url": "https://attack.mitre.org/techniques/T1559/002"
                    },
                    {
                        "url": "https://www.bleepingcomputer.com/news/microsoft/microsoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks/",
                        "description": "Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017.",
                        "source_name": "BleepingComputer DDE Disabled in Word Dec 2017"
                    },
                    {
                        "url": "https://portal.msrc.microsoft.com/security-guidance/advisory/ADV170021",
                        "description": "Microsoft. (2017, December 12). ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.",
                        "source_name": "Microsoft ADV170021 Dec 2017"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/security/4053440",
                        "description": "Microsoft. (2017, November 8). Microsoft Security Advisory 4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.",
                        "source_name": "Microsoft DDE Advisory Nov 2017"
                    },
                    {
                        "url": "https://sensepost.com/blog/2016/powershell-c-sharp-and-dde-the-power-within/",
                        "description": "El-Sherei, S. (2016, May 20). PowerShell, C-Sharp and DDE The Power Within. Retrieved November 22, 2017.",
                        "source_name": "SensePost PS DDE May 2016"
                    },
                    {
                        "url": "https://www.contextis.com/blog/comma-separated-vulnerabilities",
                        "description": "Kettle, J. (2014, August 29). Comma Separated Vulnerabilities. Retrieved November 22, 2017.",
                        "source_name": "Kettle CSV DDE Aug 2014"
                    },
                    {
                        "url": "https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee",
                        "description": "Nelson, M. (2018, January 29). Reviving DDE: Using OneNote and Excel for Code Execution. Retrieved February 3, 2018.",
                        "source_name": "Enigma Reviving DDE Jan 2018"
                    },
                    {
                        "url": "https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/",
                        "description": "Stalmans, E., El-Sherei, S. (2017, October 9). Macro-less Code Exec in MSWord. Retrieved November 21, 2017.",
                        "source_name": "SensePost MacroLess DDE Oct 2017"
                    },
                    {
                        "url": "https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/",
                        "description": "NVISO Labs. (2017, October 11). Detecting DDE in MS Office documents. Retrieved November 21, 2017.",
                        "source_name": "NVisio Labs DDE Detection Oct 2017"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\n\nOLE and Office Open XML files can be scanned for \u2018DDEAUTO', \u2018DDE\u2019, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "DLL monitoring",
                    "File monitoring"
                ]
            },
            {
                "created": "2020-03-10T17:28:11.747Z",
                "modified": "2020-03-27T20:54:28.560Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b",
                "description": "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
                "name": "Dynamic Resolution",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1568",
                        "url": "https://attack.mitre.org/techniques/T1568"
                    },
                    {
                        "url": "http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html",
                        "description": "Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.",
                        "source_name": "Talos CCleanup 2017"
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html",
                        "description": "Dunwoody, M.. (2017, April 3). Dissecting One of APT29\u2019s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.",
                        "source_name": "FireEye POSHSPY April 2017"
                    },
                    {
                        "source_name": "ESET Sednit 2017 Activity",
                        "url": "https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/",
                        "description": "ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019."
                    },
                    {
                        "source_name": "Data Driven Security DGA",
                        "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/",
                        "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019."
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "SSL/TLS inspection",
                    "Web logs",
                    "DNS records"
                ],
                "x_mitre_detection": "Detecting dynamically generated C2 can be challenging due to the number of different algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are multiple approaches to detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more (Citation: Data Driven Security DGA). CDN domains may trigger these detections due to the format of their domain names. In addition to detecting algorithm generated domains based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.",
                "x_mitre_contributors": [
                    "Chris Roffe"
                ]
            },
            {
                "id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
                "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Endgame Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Endgame HuntingNMemory June 2017)(Citation: Endgame Process Injection July 2017) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "name": "Dynamic-link Library Injection",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1055.001",
                        "url": "https://attack.mitre.org/techniques/T1055/001"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/hunting-memory",
                        "description": "Desimone, J. (2017, June 13). Hunting in Memory. Retrieved December 7, 2017.",
                        "source_name": "Endgame HuntingNMemory June 2017"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-06-20T22:17:59.148Z",
                "created": "2020-01-14T01:26:08.145Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Endgame Process Injection July 2017)\n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "DLL monitoring",
                    "File monitoring",
                    "API monitoring"
                ],
                "x_mitre_defense_bypassed": [
                    "Application control",
                    "Anti-virus"
                ]
            },
            {
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "name": "Elevated Execution with Prompt",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1514",
                        "url": "https://attack.mitre.org/techniques/T1514"
                    },
                    {
                        "source_name": "AppleDocs AuthorizationExecuteWithPrivileges",
                        "url": "https://developer.apple.com/documentation/security/1540038-authorizationexecutewithprivileg",
                        "description": "Apple. (n.d.). Apple Developer Documentation - AuthorizationExecuteWithPrivileges. Retrieved August 8, 2019."
                    },
                    {
                        "source_name": "Death by 1000 installers; it's all broken!",
                        "url": "https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8",
                        "description": "Patrick Wardle. (2017). Death by 1000 installers; it's all broken!. Retrieved August 8, 2019."
                    },
                    {
                        "source_name": "Carbon Black Shlayer Feb 2019",
                        "url": "https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/",
                        "description": "Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019."
                    },
                    {
                        "source_name": "OSX Coldroot RAT",
                        "url": "https://objective-see.com/blog/blog_0x2A.html",
                        "description": "Patrick Wardle. (2018, February 17). Tearing Apart the Undetected (OSX)Coldroot RAT. Retrieved August 8, 2019."
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-05T20:13:51.857Z",
                "created": "2019-08-08T14:29:37.108Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1548.004",
                        "url": "https://attack.mitre.org/techniques/T1548/004"
                    },
                    {
                        "source_name": "AppleDocs AuthorizationExecuteWithPrivileges",
                        "url": "https://developer.apple.com/documentation/security/1540038-authorizationexecutewithprivileg",
                        "description": "Apple. (n.d.). Apple Developer Documentation - AuthorizationExecuteWithPrivileges. Retrieved August 8, 2019."
                    },
                    {
                        "source_name": "Death by 1000 installers; it's all broken!",
                        "url": "https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8",
                        "description": "Patrick Wardle. (2017). Death by 1000 installers; it's all broken!. Retrieved August 8, 2019."
                    },
                    {
                        "source_name": "Carbon Black Shlayer Feb 2019",
                        "url": "https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/",
                        "description": "Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019."
                    },
                    {
                        "source_name": "OSX Coldroot RAT",
                        "url": "https://objective-see.com/blog/blog_0x2A.html",
                        "description": "Patrick Wardle. (2018, February 17). Tearing Apart the Undetected (OSX)Coldroot RAT. Retrieved August 8, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \n\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--b84903f0-c7d5-435d-a69e-de47cc3578c0",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-03-27T12:04:37.823Z",
                "created": "2020-01-30T14:40:20.187Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_effective_permissions": [
                    "root"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_detection": "Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that <code>AuthorizationExecuteWithPrivileges</code> is being executed. MacOS system logs may also indicate when <code>AuthorizationExecuteWithPrivileges</code> is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_contributors": [
                    "Jimmy Astle, @AstleJimmy, Carbon Black",
                    "Erika Noerenberg, @gutterchurl, Carbon Black"
                ],
                "x_mitre_platforms": [
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1087.003",
                        "url": "https://attack.mitre.org/techniques/T1087/003"
                    },
                    {
                        "source_name": "Microsoft Exchange Address Lists",
                        "url": "https://docs.microsoft.com/en-us/exchange/email-addresses-and-address-books/address-lists/address-lists?view=exchserver-2019",
                        "description": "Microsoft. (2020, February 7). Address lists in Exchange Server. Retrieved March 26, 2020."
                    },
                    {
                        "source_name": "Microsoft getglobaladdresslist",
                        "url": "https://docs.microsoft.com/en-us/powershell/module/exchange/email-addresses-and-address-books/get-globaladdresslist",
                        "description": "Microsoft. (n.d.). Get-GlobalAddressList. Retrieved October 6, 2019."
                    },
                    {
                        "source_name": "Black Hills Attacking Exchange MailSniper, 2016",
                        "url": "https://www.blackhillsinfosec.com/attacking-exchange-with-mailsniper/",
                        "description": "Bullock, B.. (2016, October 3). Attacking Exchange with MailSniper. Retrieved October 6, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Email Account",
                "description": "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)\n\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)",
                "id": "attack-pattern--4bc31b94-045b-4752-8920-aebaebdb6470",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "modified": "2020-03-26T15:27:58.933Z",
                "created": "2020-02-21T21:08:33.237Z",
                "x_mitre_data_sources": [
                    "Office 365 account logs",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows",
                    "Office 365"
                ]
            },
            {
                "id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Email Collection",
                "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1114",
                        "url": "https://attack.mitre.org/techniques/T1114"
                    },
                    {
                        "description": "McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019.",
                        "url": "https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/",
                        "source_name": "Microsoft Tim McMichael Exchange Mail Forwarding 2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-24T18:31:06.417Z",
                "created": "2017-05-31T21:31:25.454Z",
                "x_mitre_contributors": [
                    "Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "Office 365"
                ],
                "x_mitre_detection": "There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
                "x_mitre_data_sources": [
                    "Office 365 trace logs",
                    "Mail server",
                    "Email gateway",
                    "Authentication logs",
                    "File monitoring",
                    "Process monitoring",
                    "Process use of network"
                ],
                "x_mitre_version": "2.1"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1114.003",
                        "url": "https://attack.mitre.org/techniques/T1114/003"
                    },
                    {
                        "source_name": "US-CERT TA18-068A 2018",
                        "url": "https://www.us-cert.gov/ncas/alerts/TA18-086A",
                        "description": "US-CERT. (2018, March 27). TA18-068A Brute Force Attacks Conducted by Cyber Actors. Retrieved October 2, 2019."
                    },
                    {
                        "source_name": "Microsoft Tim McMichael Exchange Mail Forwarding 2",
                        "url": "https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/",
                        "description": "McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Email Forwarding Rule",
                "description": "Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim\u2019s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Outlook and Outlook Web App (OWA) allow users to create inbox rules for various email functions, including forwarding to a different recipient. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) \n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more.",
                "id": "attack-pattern--7d77a07d-02fe-4e88-8bd9-e9c008c01bf0",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "collection"
                }],
                "modified": "2020-03-24T18:29:48.994Z",
                "created": "2020-02-19T18:54:47.103Z",
                "x_mitre_contributors": [
                    "Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
                "x_mitre_data_sources": [
                    "Process use of network",
                    "Process monitoring",
                    "Email gateway",
                    "Mail server",
                    "Office 365 trace logs"
                ],
                "x_mitre_platforms": [
                    "Office 365",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1519",
                        "url": "https://attack.mitre.org/techniques/T1519"
                    },
                    {
                        "source_name": "xorrior emond Jan 2018",
                        "url": "https://www.xorrior.com/emond-persistence/",
                        "description": "Ross, Chris. (2018, January 17). Leveraging Emond on macOS For Persistence. Retrieved September 10, 2019."
                    },
                    {
                        "source_name": "magnusviri emond Apr 2016",
                        "url": "http://www.magnusviri.com/Mac/what-is-emond.html",
                        "description": "Reynolds, James. (2016, April 7). What is emond?. Retrieved September 10, 2019."
                    },
                    {
                        "source_name": "sentinelone macos persist Jun 2019",
                        "url": "https://www.sentinelone.com/blog/how-malware-persists-on-macos/",
                        "description": "Stokes, Phil. (2019, June 17). HOW MALWARE PERSISTS ON MACOS. Retrieved September 10, 2019."
                    }
                ],
                "name": "Emond",
                "id": "attack-pattern--d376668f-b208-42de-b1f5-fdfe0ad4b753",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T15:15:44.006Z",
                "created": "2019-09-19T14:07:11.734Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.014",
                        "url": "https://attack.mitre.org/techniques/T1546/014"
                    },
                    {
                        "source_name": "xorrior emond Jan 2018",
                        "url": "https://www.xorrior.com/emond-persistence/",
                        "description": "Ross, Chris. (2018, January 17). Leveraging Emond on macOS For Persistence. Retrieved September 10, 2019."
                    },
                    {
                        "source_name": "magnusviri emond Apr 2016",
                        "url": "http://www.magnusviri.com/Mac/what-is-emond.html",
                        "description": "Reynolds, James. (2016, April 7). What is emond?. Retrieved September 10, 2019."
                    },
                    {
                        "source_name": "sentinelone macos persist Jun 2019",
                        "url": "https://www.sentinelone.com/blog/how-malware-persists-on-macos/",
                        "description": "Stokes, Phil. (2019, June 17). HOW MALWARE PERSISTS ON MACOS. Retrieved September 10, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Emond",
                "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.",
                "id": "attack-pattern--9c45eaa3-8604-4780-8988-b5074dbb9ecd",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-24T21:37:25.307Z",
                "created": "2020-01-24T15:15:13.426Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.",
                "x_mitre_data_sources": [
                    "File monitoring"
                ],
                "x_mitre_contributors": [
                    "Ivan Sinyakov"
                ],
                "x_mitre_platforms": [
                    "macOS"
                ]
            },
            {
                "created": "2020-03-16T15:33:01.739Z",
                "modified": "2020-03-30T00:37:16.809Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "type": "attack-pattern",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1573",
                        "url": "https://attack.mitre.org/techniques/T1573"
                    },
                    {
                        "url": "http://www.sans.org/reading-room/whitepapers/analyst/finding-hidden-threats-decrypting-ssl-34840",
                        "description": "Butler, M. (2013, November). Finding Hidden Threats by Decrypting SSL. Retrieved April 5, 2016.",
                        "source_name": "SANS Decrypting SSL"
                    },
                    {
                        "url": "https://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html",
                        "description": "Dormann, W. (2015, March 13). The Risks of SSL Inspection. Retrieved April 5, 2016.",
                        "source_name": "SEI SSL Inspection Risks"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Encrypted Channel",
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "SSL/TLS inspection",
                    "Process monitoring",
                    "Process use of network",
                    "Malware reverse engineering",
                    "Netflow/Enclave netflow",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "name": "Endpoint Denial of Service",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1499",
                        "url": "https://attack.mitre.org/techniques/T1499"
                    },
                    {
                        "external_id": "CAPEC-227",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/227.html"
                    },
                    {
                        "external_id": "CAPEC-131",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/131.html"
                    },
                    {
                        "external_id": "CAPEC-130",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/130.html"
                    },
                    {
                        "external_id": "CAPEC-125",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/125.html"
                    },
                    {
                        "source_name": "FireEye OpPoisonedHandover February 2016",
                        "url": "https://www.fireeye.com/blog/threat-research/2014/11/operation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html",
                        "description": "Ned Moran, Mike Scott, Mike Oppenheim of FireEye. (2014, November 3). Operation Poisoned Handover: Unveiling Ties Between APT Activity in Hong Kong\u2019s Pro-Democracy Movement. Retrieved April 18, 2019."
                    },
                    {
                        "source_name": "FSISAC FraudNetDoS September 2012",
                        "url": "https://www.ic3.gov/media/2012/FraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf",
                        "description": "FS-ISAC. (2012, September 17). Fraud Alert \u2013 Cyber Criminals Targeting Financial Institution Employee Credentials to Conduct Wire Transfer Fraud. Retrieved April 18, 2019."
                    },
                    {
                        "source_name": "Symantec DDoS October 2014",
                        "url": "https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-continued-rise-of-ddos-attacks.pdf",
                        "description": "Wueest, C.. (2014, October 21). The continued rise of DDoS attacks. Retrieved April 24, 2019."
                    },
                    {
                        "source_name": "USNYAG IranianBotnet March 2016",
                        "url": "https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged",
                        "description": "Preet Bharara, US Attorney. (2016, March 24). Retrieved April 23, 2019."
                    },
                    {
                        "source_name": "ArsTechnica Great Firewall of China",
                        "url": "https://arstechnica.com/information-technology/2015/03/massive-denial-of-service-attack-on-github-tied-to-chinese-government/",
                        "description": "Goodin, D.. (2015, March 31). Massive denial-of-service attack on GitHub tied to Chinese government. Retrieved April 19, 2019."
                    },
                    {
                        "source_name": "Cisco DoSdetectNetflow",
                        "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf",
                        "description": "Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-29T02:07:27.676Z",
                "created": "2019-04-18T11:00:55.862Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure",
                    "Office 365",
                    "Azure AD",
                    "SaaS"
                ],
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "SSL/TLS inspection",
                    "Web logs",
                    "Web application firewall logs",
                    "Network intrusion detection system",
                    "Network protocol analysis",
                    "Network device logs",
                    "Netflow/Enclave netflow"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1480.001",
                        "url": "https://attack.mitre.org/techniques/T1480/001"
                    },
                    {
                        "source_name": "EK Clueless Agents",
                        "url": "https://www.schneier.com/academic/paperfiles/paper-clueless-agents.pdf",
                        "description": "Riordan, J., Schneier, B. (1998, June 18). Environmental Key Generation towards Clueless Agents. Retrieved January 18, 2019."
                    },
                    {
                        "source_name": "Kaspersky Gauss Whitepaper",
                        "url": "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/20134940/kaspersky-lab-gauss.pdf",
                        "description": "Kaspersky Lab. (2012, August). Gauss: Abnormal Distribution. Retrieved January 17, 2019."
                    },
                    {
                        "source_name": "Proofpoint Router Malvertising",
                        "url": "https://www.proofpoint.com/us/threat-insight/post/home-routers-under-attack-malvertising-windows-android-devices",
                        "description": "Kafeine. (2016, December 13). Home Routers Under Attack via Malvertising on Windows, Android Devices. Retrieved January 16, 2019."
                    },
                    {
                        "source_name": "EK Impeding Malware Analysis",
                        "url": "https://pdfs.semanticscholar.org/2721/3d206bc3c1e8c229fb4820b6af09e7f975da.pdf",
                        "description": "Song, C., et al. (2012, August 7). Impeding Automated Malware Analysis with Environment-sensitive Malware. Retrieved January 18, 2019."
                    },
                    {
                        "source_name": "Environmental Keyed HTA",
                        "url": "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/smuggling-hta-files-in-internet-exploreredge/",
                        "description": "Warren, R. (2017, August 8). Smuggling HTA files in Internet Explorer/Edge. Retrieved January 16, 2019."
                    },
                    {
                        "source_name": "Ebowla: Genetic Malware",
                        "url": "https://github.com/Genetic-Malware/Ebowla/blob/master/Eko_2016_Morrow_Pitts_Master.pdf",
                        "description": "Morrow, T., Pitts, J. (2016, October 28). Genetic Malware: Designing Payloads for Specific Targets. Retrieved January 18, 2019."
                    },
                    {
                        "source_name": "Demiguise Guardrail Router Logo",
                        "url": "https://github.com/nccgroup/demiguise/blob/master/examples/virginkey.js",
                        "description": "Warren, R. (2017, August 2). Demiguise: virginkey.js. Retrieved January 17, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Environmental Keying",
                "description": "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",
                "id": "attack-pattern--f244b8dd-af6c-4391-a497-fc03627ce995",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-24T18:52:12.719Z",
                "created": "2020-06-23T22:28:28.041Z",
                "x_mitre_contributors": [
                    "Nick Carr, FireEye"
                ],
                "x_mitre_detection": "Detecting the use of environmental keying may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.",
                "x_mitre_data_sources": [
                    "Process monitoring"
                ],
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Host forensic analysis",
                    "Signature-based detection",
                    "Static file analysis"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1546",
                    "url": "https://attack.mitre.org/techniques/T1546"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Event Triggered Execution",
                "description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. \n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked. \n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",
                "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-07-09T13:55:51.501Z",
                "created": "2020-01-22T21:04:23.285Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_detection": "Monitoring for additions or modifications of mechanisms that could be used to trigger event-based execution, especially the addition of abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network. Also look for changes that do not line up with updates, patches, or other planned administrative activity. \n\nThese mechanisms may vary by OS, but are typically stored in central repositories that store configuration information such as the Windows Registry, Common Information Model (CIM), and/or specific named files, the last of which can be hashed and compared to known good values. \n\nMonitor for processes, API/System calls, and other common ways of manipulating these event repositories. \n\nTools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.  \n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement. ",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Windows event logs",
                    "System calls",
                    "Binary file metadata",
                    "Process use of network",
                    "WMI Objects",
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring",
                    "Loaded DLLs",
                    "DLL monitoring",
                    "Windows Registry"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1098.002",
                        "url": "https://attack.mitre.org/techniques/T1098/002"
                    },
                    {
                        "source_name": "Microsoft - Add-MailboxPermission",
                        "url": "https://docs.microsoft.com/en-us/powershell/module/exchange/mailboxes/add-mailboxpermission?view=exchange-ps",
                        "description": "Microsoft. (n.d.). Add-Mailbox Permission. Retrieved September 13, 2019."
                    },
                    {
                        "url": "https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf",
                        "description": "Mandiant. (2018). Mandiant M-Trends 2018. Retrieved July 9, 2018.",
                        "source_name": "FireEye APT35 2018"
                    },
                    {
                        "source_name": "Crowdstrike Hiding in Plain Sight 2018",
                        "url": "https://www.crowdstrike.com/blog/hiding-in-plain-sight-using-the-office-365-activities-api-to-investigate-business-email-compromises/",
                        "description": "Crowdstrike. (2018, July 18). Hiding in Plain Sight: Using the Office 365 Activities API to Investigate Business Email Compromises. Retrieved January 19, 2020."
                    },
                    {
                        "source_name": "Bienstock, D. - Defending O365 - 2019",
                        "url": "https://www.slideshare.net/DouglasBienstock/shmoocon-2019-becs-and-beyond-investigating-and-defending-office-365",
                        "description": "Bienstock, D.. (2019). BECS and Beyond: Investigating and Defending O365. Retrieved September 13, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exchange Email Delegate Permissions",
                "description": "Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018)\n\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)",
                "id": "attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-05-04T19:18:36.254Z",
                "created": "2020-01-19T16:54:28.516Z",
                "x_mitre_contributors": [
                    "Jannie Li, Microsoft Threat Intelligence\u202fCenter\u202f(MSTIC)"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_detection": "Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\n\nA larger than normal volume of emails sent from an account and similar phishing emails sent from \u202freal accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.",
                "x_mitre_data_sources": [
                    "Office 365 audit logs"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "Office 365"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574.005",
                        "url": "https://attack.mitre.org/techniques/T1574/005"
                    },
                    {
                        "source_name": "mozilla_sec_adv_2012",
                        "url": "https://www.mozilla.org/en-US/security/advisories/mfsa2012-98/",
                        "description": "Robert Kugler. (2012, November 20). Mozilla Foundation Security Advisory 2012-98. Retrieved March 10, 2017."
                    },
                    {
                        "source_name": "Executable Installers are Vulnerable",
                        "url": "https://seclists.org/fulldisclosure/2015/Dec/34",
                        "description": "Stefan Kanthak. (2015, December 8). Executable installers are vulnerable^WEVIL (case 7): 7z*.exe allows remote code execution with escalation of privilege. Retrieved December 4, 2014."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Executable Installer File Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                "id": "attack-pattern--70d81154-b187-45f9-8ec5-295d01255979",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-03-26T19:20:23.030Z",
                "created": "2020-03-13T11:12:18.558Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_effective_permissions": [
                    "Administrator",
                    "User",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "File monitoring"
                ],
                "x_mitre_contributors": [
                    "Travis Smith, Tripwire",
                    "Stefan Kanthak"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1480",
                        "url": "https://attack.mitre.org/techniques/T1480"
                    },
                    {
                        "source_name": "FireEye Kevin Mandia Guardrails",
                        "url": "https://www.cyberscoop.com/kevin-mandia-fireeye-u-s-malware-nice/",
                        "description": "Shoorbajee, Z. (2018, June 1). Playing nice? FireEye CEO says U.S. malware is more restrained than adversaries'. Retrieved January 17, 2019."
                    },
                    {
                        "source_name": "FireEye Outlook Dec 2019",
                        "url": "https://www.fireeye.com/blog/threat-research/2019/12/breaking-the-rules-tough-outlook-for-home-page-attacks.html",
                        "description": "McWhirt, M., Carr, N., Bienstock, D. (2019, December 4). Breaking the Rules: A Tough Outlook for Home Page Attacks (CVE-2017-11774). Retrieved June 23, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Execution Guardrails",
                "description": "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\u2019s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.",
                "id": "attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-24T18:52:12.956Z",
                "created": "2019-01-31T02:10:08.261Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.1",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Host forensic analysis",
                    "Signature-based detection",
                    "Static file analysis"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Detecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.",
                "x_mitre_data_sources": [
                    "Process monitoring"
                ],
                "x_mitre_contributors": [
                    "Nick Carr, FireEye"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1048",
                        "url": "https://attack.mitre.org/techniques/T1048"
                    },
                    {
                        "source_name": "Palo Alto OilRig Oct 2016",
                        "description": "Grunzweig, J. and Falcone, R.. (2016, October 4). OilRig Malware Campaign Updates Toolset and Expands Targets. Retrieved May 3, 2017.",
                        "url": "http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) ",
                "name": "Exfiltration Over Alternative Protocol",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:50:31.548Z",
                "created": "2017-05-31T21:30:44.720Z",
                "x_mitre_version": "1.2",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process use of network",
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis"
                ],
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_network_requirements": true,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Alfredo Abarca"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1048.002",
                        "url": "https://attack.mitre.org/techniques/T1048/002"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
                "description": "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ",
                "id": "attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:45:51.014Z",
                "created": "2020-03-15T15:34:30.767Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) ",
                "x_mitre_data_sources": [
                    "Network protocol analysis",
                    "Netflow/Enclave netflow",
                    "Packet capture",
                    "Process use of network"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1011.001",
                    "url": "https://attack.mitre.org/techniques/T1011/001"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an attacker may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:34:55.439Z",
                "created": "2020-03-09T17:07:57.392Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "User interface"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2017-05-31T21:30:41.804Z",
                "modified": "2020-03-12T15:59:47.470Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over C2 Channel",
                "description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1041",
                        "url": "https://attack.mitre.org/techniques/T1041"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Process use of network",
                    "Netflow/Enclave netflow",
                    "Process monitoring"
                ],
                "x_mitre_version": "2.0",
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Other Network Medium",
                "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1011",
                    "external_id": "T1011"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:35:24.570Z",
                "created": "2017-05-31T21:30:25.159Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.",
                "x_mitre_contributors": [
                    "Itzik Kotler, SafeBreach"
                ],
                "x_mitre_data_sources": [
                    "User interface",
                    "Process monitoring"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "id": "attack-pattern--e6415f09-df0e-48de-9aba-928c902b7549",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Physical Medium",
                "description": "Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1052",
                    "external_id": "T1052"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:31:48.713Z",
                "created": "2017-05-31T21:30:46.461Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_system_requirements": [
                    "Presence of physical medium or device"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_network_requirements": false,
                "x_mitre_detection": "Monitor file access on removable media. Detect processes that execute when removable media are mounted.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Data loss prevention",
                    "File monitoring"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1048.001",
                        "url": "https://attack.mitre.org/techniques/T1048/001"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
                "description": "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ",
                "id": "attack-pattern--79a4052e-1a89-4b09-aea6-51f1d11fe19c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:43:24.228Z",
                "created": "2020-03-15T15:30:42.378Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) \n\nArtifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels. ",
                "x_mitre_data_sources": [
                    "Malware reverse engineering",
                    "Network protocol analysis",
                    "Netflow/Enclave netflow",
                    "Packet capture",
                    "Process use of network"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1048.003",
                        "url": "https://attack.mitre.org/techniques/T1048/003"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
                "description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ",
                "id": "attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:50:31.361Z",
                "created": "2020-03-15T15:37:47.583Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) ",
                "x_mitre_data_sources": [
                    "Network protocol analysis",
                    "Netflow/Enclave netflow",
                    "Packet capture",
                    "Process use of network"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1567",
                    "url": "https://attack.mitre.org/techniques/T1567"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration Over Web Service",
                "description": "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
                "id": "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T01:02:24.276Z",
                "created": "2020-03-09T12:51:45.570Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process use of network",
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "SSL/TLS inspection"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1052.001",
                    "url": "https://attack.mitre.org/techniques/T1052/001"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration over USB",
                "description": "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
                "id": "attack-pattern--a3e1e6c5-9c74-4fc0-a16c-a9d228c17829",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:31:02.204Z",
                "created": "2020-03-11T13:50:11.467Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_system_requirements": [
                    "Presence of physical medium or device"
                ],
                "x_mitre_detection": "Monitor file access on removable media. Detect processes that execute when removable media are mounted.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Data loss prevention",
                    "File monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2020-03-09T15:04:32.767Z",
                "modified": "2020-03-28T01:02:24.172Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--bf1b6176-597c-4600-bfcd-ac989670f96b",
                "description": "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ",
                "name": "Exfiltration to Cloud Storage",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1567.002",
                    "url": "https://attack.mitre.org/techniques/T1567/002"
                }],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process use of network",
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "SSL/TLS inspection"
                ],
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
                "x_mitre_network_requirements": true,
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1567.001",
                    "url": "https://attack.mitre.org/techniques/T1567/001"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exfiltration to Code Repository",
                "description": "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ",
                "id": "attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "exfiltration"
                }],
                "modified": "2020-03-28T00:58:55.433Z",
                "created": "2020-03-09T14:51:11.772Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_network_requirements": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process use of network",
                    "Packet capture",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "SSL/TLS inspection"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1190",
                        "url": "https://attack.mitre.org/techniques/T1190"
                    },
                    {
                        "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-6662",
                        "description": "National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.",
                        "source_name": "NVD CVE-2016-6662"
                    },
                    {
                        "url": "https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/",
                        "description": "CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.",
                        "source_name": "CIS Multiple SMB Vulnerabilities"
                    },
                    {
                        "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7169",
                        "description": "National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.",
                        "source_name": "NVD CVE-2014-7169"
                    },
                    {
                        "url": "https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project",
                        "description": "OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved April 3, 2018.",
                        "source_name": "OWASP Top 10"
                    },
                    {
                        "source_name": "CWE top 25",
                        "url": "https://cwe.mitre.org/top25/index.html",
                        "description": "Christey, S., Brown, M., Kirby, D., Martin, B., Paller, A.. (2011, September 13). 2011 CWE/SANS Top 25 Most Dangerous Software Errors. Retrieved April 10, 2019."
                    }
                ],
                "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211).\n\nIf an application is hosted on cloud-based infrastructure, then exploiting it may lead to compromise of the underlying instance. This can allow an adversary a path to access the cloud APIs or to take advantage of weak identity and access management policies.\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "name": "Exploit Public-Facing Application",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }],
                "modified": "2020-02-18T16:10:38.866Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_contributors": [
                    "Praetorian"
                ],
                "x_mitre_version": "2.1",
                "x_mitre_data_sources": [
                    "Azure activity logs",
                    "AWS CloudTrail logs",
                    "Stackdriver logs",
                    "Packet capture",
                    "Web logs",
                    "Web application firewall logs",
                    "Application logs"
                ],
                "x_mitre_detection": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS",
                    "AWS",
                    "GCP",
                    "Azure"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1203",
                    "external_id": "T1203"
                }],
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "name": "Exploitation for Client Execution",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "modified": "2020-03-28T19:06:02.690Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_version": "1.1",
                "x_mitre_data_sources": [
                    "Anti-virus",
                    "System calls",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_system_requirements": [
                    "Remote exploitation for execution requires a remotely accessible service reachable over the network or other vector of access such as spearphishing or drive-by compromise."
                ],
                "x_mitre_remote_support": true,
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1212",
                        "url": "https://attack.mitre.org/techniques/T1212"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/library/security/ms14-068.aspx",
                        "description": "Microsoft. (2014, November 18). Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780). Retrieved December 23, 2015.",
                        "source_name": "Technet MS14-068"
                    },
                    {
                        "url": "https://adsecurity.org/?p=1515",
                        "description": "Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.",
                        "source_name": "ADSecurity Detecting Forged Tickets"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-25T18:51:01.070Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.",
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Windows Error Reporting",
                    "Process monitoring"
                ],
                "x_mitre_contributors": [
                    "John Lambert, Microsoft Threat Intelligence Center"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "id": "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Exploitation for Defense Evasion",
                "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1211",
                    "external_id": "T1211"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T20:00:46.900Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery.",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "System access controls"
                ],
                "x_mitre_data_sources": [
                    "Windows Error Reporting",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_contributors": [
                    "John Lambert, Microsoft Threat Intelligence Center"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "created": "2017-05-31T21:30:55.066Z",
                "modified": "2020-03-26T21:12:49.194Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "privilege-escalation"
                }],
                "type": "attack-pattern",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1068",
                    "external_id": "T1068"
                }],
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This may be a necessary step for an adversary compromising a endpoint system that has been properly configured and limits other privilege escalation methods.",
                "name": "Exploitation for Privilege Escalation",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "x_mitre_version": "1.2",
                "x_mitre_data_sources": [
                    "Windows Error Reporting",
                    "Process monitoring",
                    "Application logs"
                ],
                "x_mitre_detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery.\n\nHigher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges.",
                "x_mitre_effective_permissions": [
                    "User"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "created": "2018-04-18T17:59:24.739Z",
                "modified": "2020-02-04T20:14:11.064Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }],
                "type": "attack-pattern",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1210",
                        "url": "https://attack.mitre.org/techniques/T1210"
                    },
                    {
                        "url": "https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/",
                        "description": "CIS. (2017, May 15). Multiple Vulnerabilities in Microsoft Windows SMB Server Could Allow for Remote Code Execution. Retrieved April 3, 2018.",
                        "source_name": "CIS Multiple SMB Vulnerabilities"
                    },
                    {
                        "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-0176",
                        "description": "National Vulnerability Database. (2017, June 22). CVE-2017-0176 Detail. Retrieved April 3, 2018.",
                        "source_name": "NVD CVE-2017-0176"
                    },
                    {
                        "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-6662",
                        "description": "National Vulnerability Database. (2017, February 2). CVE-2016-6662 Detail. Retrieved April 3, 2018.",
                        "source_name": "NVD CVE-2016-6662"
                    },
                    {
                        "url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7169",
                        "description": "National Vulnerability Database. (2017, September 24). CVE-2014-7169 Detail. Retrieved April 3, 2018.",
                        "source_name": "NVD CVE-2014-7169"
                    }
                ],
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "name": "Exploitation of Remote Services",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "x_mitre_version": "1.1",
                "x_mitre_detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
                "x_mitre_data_sources": [
                    "Windows Error Reporting",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_system_requirements": [
                    "Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network."
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1491.002",
                        "url": "https://attack.mitre.org/techniques/T1491/002"
                    },
                    {
                        "source_name": "FireEye Cyber Threats to Media Industries",
                        "url": "https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/ib-entertainment.pdf",
                        "description": "FireEye. (n.d.). Retrieved April 19, 2019."
                    },
                    {
                        "source_name": "Kevin Mandia Statement to US Senate Committee on Intelligence",
                        "url": "https://www.intelligence.senate.gov/sites/default/files/documents/os-kmandia-033017.pdf",
                        "description": "Kevin Mandia. (2017, March 30). Prepared Statement of Kevin Mandia, CEO of FireEye, Inc. before the United States Senate Select Committee on Intelligence. Retrieved April 19, 2019."
                    },
                    {
                        "source_name": "Anonymous Hackers Deface Russian Govt Site",
                        "url": "https://torrentfreak.com/anonymous-hackers-deface-russian-govt-site-to-protest-web-blocking-nsfw-180512/",
                        "description": "Andy. (2018, May 12). \u2018Anonymous\u2019 Hackers Deface Russian Govt. Site to Protest Web-Blocking (NSFW). Retrieved April 19, 2019."
                    },
                    {
                        "source_name": "Trend Micro Deep Dive Into Defacement",
                        "url": "https://documents.trendmicro.com/assets/white_papers/wp-a-deep-dive-into-defacement.pdf",
                        "description": "Marco Balduzzi, Ryan Flores, Lion Gu, Federico Maggi, Vincenzo Ciancaglini, Roel Reyes, Akira Urano. (n.d.). A Deep Dive into Defacement: How Geopolitical Events Trigger Web Attacks. Retrieved April 19, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "External Defacement",
                "description": "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)",
                "id": "attack-pattern--0cfe31a7-81fc-472c-bc45-e2808d1066a3",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-04-22T15:19:31.380Z",
                "created": "2020-02-20T14:34:08.496Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_impact_type": [
                    "Integrity"
                ],
                "x_mitre_detection": "Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
                "x_mitre_data_sources": [
                    "Web logs",
                    "Web application firewall logs",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows",
                    "AWS",
                    "GCP",
                    "Azure"
                ]
            },
            {
                "created": "2020-03-14T23:12:18.466Z",
                "modified": "2020-03-27T17:50:37.411Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--69b8fd78-40e8-4600-ae4d-662c9d7afdb3",
                "description": "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
                "name": "External Proxy",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1090.002",
                        "url": "https://attack.mitre.org/techniques/T1090/002"
                    },
                    {
                        "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/",
                        "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                        "source_name": "Trend Micro APT Attack Tools"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Process use of network",
                    "Process monitoring",
                    "Network protocol analysis",
                    "Netflow/Enclave netflow",
                    "Packet capture"
                ],
                "x_mitre_detection": "Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) can also be used externally.\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1133",
                        "url": "https://attack.mitre.org/techniques/T1133"
                    },
                    {
                        "external_id": "CAPEC-555",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/555.html"
                    },
                    {
                        "url": "https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/",
                        "description": "Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.",
                        "source_name": "Volexity Virtual Private Keylogging"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "initial-access"
                    }
                ],
                "modified": "2020-06-19T20:07:09.600Z",
                "created": "2017-05-31T21:31:44.421Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows",
                    "Linux"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.",
                "x_mitre_data_sources": [
                    "Authentication logs"
                ],
                "x_mitre_contributors": [
                    "Daniel Oakley",
                    "Travis Smith, Tripwire"
                ],
                "x_mitre_version": "2.1"
            },
            {
                "id": "attack-pattern--52f3d5a6-8a0f-4f82-977e-750abf90d0b0",
                "name": "Extra Window Memory Injection",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1181",
                        "url": "https://attack.mitre.org/techniques/T1181"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx",
                        "description": "Microsoft. (n.d.). About Window Classes. Retrieved December 16, 2017.",
                        "source_name": "Microsoft Window Classes"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx",
                        "description": "Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017.",
                        "source_name": "Microsoft GetWindowLong function"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx",
                        "description": "Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017.",
                        "source_name": "Microsoft SetWindowLong function"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html",
                        "description": "MalwareTech. (2013, August 13). PowerLoader Injection \u2013 Something truly amazing. Retrieved December 16, 2017.",
                        "source_name": "MalwareTech Power Loader Aug 2013"
                    },
                    {
                        "url": "https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/",
                        "description": "Matrosov, A. (2013, March 19). Gapz and Redyms droppers based on Power Loader code. Retrieved December 16, 2017.",
                        "source_name": "WeLiveSecurity Gapz and Redyms Mar 2013"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms644953.aspx",
                        "description": "Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017.",
                        "source_name": "Microsoft SendNotifyMessage function"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-14T17:23:05.736Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1055.011",
                        "url": "https://attack.mitre.org/techniques/T1055/011"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx",
                        "description": "Microsoft. (n.d.). About Window Classes. Retrieved December 16, 2017.",
                        "source_name": "Microsoft Window Classes"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx",
                        "description": "Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017.",
                        "source_name": "Microsoft GetWindowLong function"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx",
                        "description": "Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017.",
                        "source_name": "Microsoft SetWindowLong function"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html",
                        "description": "MalwareTech. (2013, August 13). PowerLoader Injection \u2013 Something truly amazing. Retrieved December 16, 2017.",
                        "source_name": "MalwareTech Power Loader Aug 2013"
                    },
                    {
                        "url": "https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/",
                        "description": "Matrosov, A. (2013, March 19). Gapz and Redyms droppers based on Power Loader code. Retrieved December 16, 2017.",
                        "source_name": "WeLiveSecurity Gapz and Redyms Mar 2013"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms644953.aspx",
                        "description": "Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017.",
                        "source_name": "Microsoft SendNotifyMessage function"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Endgame Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-06-20T22:26:33.191Z",
                "created": "2020-01-14T17:18:32.126Z",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Application control"
                ],
                "x_mitre_detection": "Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Endgame Process Injection July 2017)",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "API monitoring"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1008",
                        "external_id": "T1008"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.",
                "name": "Fallback Channels",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--f24faf46-3b26-4dbb-98f2-63460498e433",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-07-14T19:49:47.340Z",
                "created": "2017-05-31T21:30:21.689Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "Malware reverse engineering",
                    "Netflow/Enclave netflow",
                    "Packet capture",
                    "Process monitoring",
                    "Process use of network"
                ],
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)",
                "x_mitre_network_requirements": true,
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1568.001",
                        "url": "https://attack.mitre.org/techniques/T1568/001"
                    },
                    {
                        "url": "https://resources.infosecinstitute.com/fast-flux-networks-working-detection-part-1/#gref",
                        "description": "Mehta, L. (2014, December 17). Fast Flux Networks Working and Detection, Part 1. Retrieved March 6, 2017.",
                        "source_name": "MehtaFastFluxPt1"
                    },
                    {
                        "source_name": "MehtaFastFluxPt2",
                        "description": "Mehta, L. (2014, December 23). Fast Flux Networks Working and Detection, Part 2. Retrieved March 6, 2017.",
                        "url": "https://resources.infosecinstitute.com/fast-flux-networks-working-detection-part-2/#gref"
                    },
                    {
                        "source_name": "Fast Flux - Welivesecurity",
                        "url": "https://www.welivesecurity.com/2017/01/12/fast-flux-networks-work/",
                        "description": "Albors, Josep. (2017, January 12). Fast Flux networks: What are they and how do they work?. Retrieved March 11, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Fast Flux DNS",
                "description": "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",
                "id": "attack-pattern--29ba5a15-3b7b-4732-b817-65ea8f6468e6",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-27T16:10:37.183Z",
                "created": "2020-03-11T14:11:16.560Z",
                "x_mitre_detection": "In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_data_sources": [
                    "DNS records"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--56fca983-1cf1-4fd1-bda0-5e170a37ab59",
                "name": "File Deletion",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1107",
                        "url": "https://attack.mitre.org/techniques/T1107"
                    },
                    {
                        "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/",
                        "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                        "source_name": "Trend Micro APT Attack Tools"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-31T12:36:39.086Z",
                "created": "2017-05-31T21:31:17.915Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1070.004",
                        "url": "https://attack.mitre.org/techniques/T1070/004"
                    },
                    {
                        "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/",
                        "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                        "source_name": "Trend Micro APT Attack Tools"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "File Deletion",
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)",
                "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T21:34:16.209Z",
                "created": "2020-01-31T12:35:36.479Z",
                "x_mitre_contributors": [
                    "Walker Johnson"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_defense_bypassed": [
                    "Host forensic analysis"
                ],
                "x_mitre_detection": "It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.",
                "x_mitre_data_sources": [
                    "Binary file metadata",
                    "Process command-line parameters",
                    "File monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1044",
                        "url": "https://attack.mitre.org/techniques/T1044"
                    },
                    {
                        "external_id": "CAPEC-17",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/17.html"
                    },
                    {
                        "url": "https://www.mozilla.org/en-US/security/advisories/mfsa2012-98/",
                        "description": "Kugler, R. (2012, November 20). Mozilla Foundation Security Advisory 2012-98. Retrieved March 10, 2017.",
                        "source_name": "Mozilla Firefox Installer DLL Hijack"
                    },
                    {
                        "url": "http://seclists.org/fulldisclosure/2015/Dec/34",
                        "description": "Kanthak, S. (2015, December 8). Executable installers are vulnerable^WEVIL (case 7): 7z*.exe\tallows remote code execution with escalation of privilege. Retrieved March 10, 2017.",
                        "source_name": "Seclists Kanthak 7zip Installer"
                    }
                ],
                "name": "File System Permissions Weakness",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-19T15:11:39.627Z",
                "created": "2017-05-31T21:30:43.063Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1071.002",
                        "url": "https://attack.mitre.org/techniques/T1071/002"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "File Transfer Protocols",
                "description": "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as FTP, FTPS, and TFPT that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
                "id": "attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-26T20:26:46.465Z",
                "created": "2020-03-15T16:16:25.763Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Network protocol analysis",
                    "Process monitoring",
                    "Process use of network",
                    "Netflow/Enclave netflow",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "created": "2017-05-31T21:31:04.710Z",
                "modified": "2020-03-26T17:18:36.857Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "discovery"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "File and Directory Discovery",
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1083",
                        "url": "https://attack.mitre.org/techniques/T1083"
                    },
                    {
                        "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                        "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                        "source_name": "Windows Commands JPCERT"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "x_mitre_system_requirements": [
                    "Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_version": "1.2",
                "x_mitre_is_subtechnique": false
            },
            {
                "created": "2018-10-17T00:14:20.652Z",
                "modified": "2020-03-29T23:12:40.212Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [.bash_profile and .bashrc](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1222",
                        "url": "https://attack.mitre.org/techniques/T1222"
                    },
                    {
                        "url": "https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100",
                        "description": "Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.",
                        "source_name": "Hybrid Analysis Icacls1 June 2018"
                    },
                    {
                        "url": "https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110",
                        "description": "Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.",
                        "source_name": "Hybrid Analysis Icacls2 May 2018"
                    },
                    {
                        "url": "https://www.eventtracker.com/tech-articles/monitoring-file-permission-changes-windows-security-log/",
                        "description": "Netsurion. (2014, February 19). Monitoring File Permission Changes with the Windows Security Log. Retrieved August 19, 2018.",
                        "source_name": "EventTracker File Permissions Feb 2014"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "SYSTEM",
                    "root"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS"
                ],
                "x_mitre_detection": "Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)",
                "x_mitre_defense_bypassed": [
                    "File system access controls"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters",
                    "Windows event logs"
                ],
                "x_mitre_contributors": [
                    "CrowdStrike Falcon OverWatch",
                    "Jan Miller, CrowdStrike"
                ],
                "x_mitre_version": "2.1"
            },
            {
                "id": "attack-pattern--f5bb433e-bdf6-4781-84bc-35e97e43be89",
                "description": "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices could include the motherboard, hard drive, or video cards.",
                "name": "Firmware Corruption",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "external_id": "T1495",
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1495"
                    },
                    {
                        "source_name": "Symantec Chernobyl W95.CIH",
                        "url": "https://www.symantec.com/security-center/writeup/2000-122010-2655-99",
                        "description": "Yamamura, M. (2002, April 25). W95.CIH. Retrieved April 12, 2019."
                    },
                    {
                        "url": "http://www.mitre.org/publications/project-stories/going-deep-into-the-bios-with-mitre-firmware-security-research",
                        "description": "Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016.",
                        "source_name": "MITRE Trustworthy Firmware Measurement"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-07-14T19:31:46.550Z",
                "created": "2019-04-12T18:28:15.451Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "root",
                    "SYSTEM"
                ],
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_detection": "System firmware manipulation may be detected.(Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior.",
                "x_mitre_data_sources": [
                    "BIOS",
                    "Component firmware"
                ]
            },
            {
                "id": "attack-pattern--b77cf5f3-6060-475d-bd60-40ccbf28fdc2",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Forced Authentication",
                "description": "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)\n\nThere are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\\\[remote address]\\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1187",
                        "url": "https://attack.mitre.org/techniques/T1187"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Server_Message_Block",
                        "description": "Wikipedia. (2017, December 16). Server Message Block. Retrieved December 21, 2017.",
                        "source_name": "Wikipedia Server Message Block"
                    },
                    {
                        "url": "https://blog.didierstevens.com/2017/11/13/webdav-traffic-to-malicious-sites/",
                        "description": "Stevens, D. (2017, November 13). WebDAV Traffic To Malicious Sites. Retrieved December 21, 2017.",
                        "source_name": "Didier Stevens WebDAV Traffic"
                    },
                    {
                        "url": "https://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/4beddb35-0cba-424c-8b9b-a5832ad8e208.mspx",
                        "description": "Microsoft. (n.d.). Managing WebDAV Security (IIS 6.0). Retrieved December 21, 2017.",
                        "source_name": "Microsoft Managing WebDAV Security"
                    },
                    {
                        "url": "https://github.com/hob0/hashjacking",
                        "description": "Dunning, J. (2016, August 1). Hashjacking. Retrieved December 21, 2017.",
                        "source_name": "GitHub Hashjacking"
                    },
                    {
                        "url": "https://www.cylance.com/content/dam/cylance/pdfs/white_papers/RedirectToSMB.pdf",
                        "description": "Cylance. (2015, April 13). Redirect to SMB. Retrieved December 21, 2017.",
                        "source_name": "Cylance Redirect to SMB"
                    },
                    {
                        "url": "https://osandamalith.com/2017/03/24/places-of-interest-in-stealing-netntlm-hashes/",
                        "description": "Osanda Malith Jayathissa. (2017, March 24). Places of Interest in Stealing NetNTLM Hashes. Retrieved January 26, 2018.",
                        "source_name": "Osanda Stealing NetNTLM Hashes"
                    },
                    {
                        "url": "https://www.us-cert.gov/ncas/alerts/TA17-293A",
                        "description": "US-CERT. (2017, October 20). Alert (TA17-293A): Advanced Persistent Threat Activity Targeting Energy and Other Critical Infrastructure Sectors. Retrieved November 2, 2017.",
                        "source_name": "US-CERT APT Energy Oct 2017"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-06-19T17:16:41.470Z",
                "created": "2018-01-16T16:13:52.465Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.\n\nMonitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered. (Citation: US-CERT APT Energy Oct 2017)",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Network protocol analysis",
                    "Network device logs",
                    "Process use of network"
                ],
                "x_mitre_contributors": [
                    "Teodor Cimpoesu",
                    "Sudhanshu Chauhan, @Sudhanshu_C"
                ],
                "x_mitre_version": "1.2"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1056.002",
                        "url": "https://attack.mitre.org/techniques/T1056/002"
                    },
                    {
                        "external_id": "CAPEC-659",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/659.html"
                    },
                    {
                        "url": "https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html",
                        "description": "Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.",
                        "source_name": "OSX Malware Exploits MacKeeper"
                    },
                    {
                        "source_name": "LogRhythm Do You Trust Oct 2014",
                        "url": "https://logrhythm.com/blog/do-you-trust-your-computer/",
                        "description": "Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018."
                    },
                    {
                        "url": "https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/",
                        "description": "Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.",
                        "source_name": "OSX Keydnap malware"
                    },
                    {
                        "source_name": "Enigma Phishing for Credentials Jan 2015",
                        "url": "https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/",
                        "description": "Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Access Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as AppleScript(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware) and PowerShell(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015). ",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "collection"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "credential-access"
                    }
                ],
                "modified": "2020-03-24T20:56:14.853Z",
                "created": "2020-02-11T18:58:45.908Z",
                "x_mitre_contributors": [
                    "Matthew Molyett, @s1air, Cisco Talos"
                ],
                "x_mitre_data_sources": [
                    "PowerShell logs",
                    "User interface",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials.\n\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--6fb6408c-0db3-41d9-a3a1-a32e5f16454e",
                "name": "Gatekeeper Bypass",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1144",
                        "url": "https://attack.mitre.org/techniques/T1144"
                    },
                    {
                        "url": "https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf",
                        "description": "Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.",
                        "source_name": "Methods of Mac Malware Persistence"
                    },
                    {
                        "url": "https://derflounder.wordpress.com/2012/11/20/clearing-the-quarantine-extended-attribute-from-downloaded-applications/",
                        "description": "Rich Trouton. (2012, November 20). Clearing the quarantine extended attribute from downloaded applications. Retrieved July 5, 2017.",
                        "source_name": "Clearing quarantine attribute"
                    },
                    {
                        "url": "https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update",
                        "description": "Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.",
                        "source_name": "OceanLotus for OS X"
                    },
                    {
                        "url": "https://blog.malwarebytes.com/cybercrime/2015/10/bypassing-apples-gatekeeper/",
                        "description": "Thomas Reed. (2016, March 31). Bypassing Apple's Gatekeeper. Retrieved July 5, 2017.",
                        "source_name": "Bypassing Gatekeeper"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-05T16:23:01.683Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "id": "attack-pattern--31a0a2ac-c67c-4a7e-b9ed-6a96477d4e8e",
                "description": "Adversaries may modify file attributes that signify programs are from untrusted sources to subvert Gatekeeper controls. In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called <code>com.apple.quarantine</code>. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution. \n\nApps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won\u2019t set this flag. Additionally, it is possible to avoid setting this flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). This completely bypasses the built-in Gatekeeper check. (Citation: Methods of Mac Malware Persistence) The presence of the quarantine flag can be checked by the xattr command <code>xattr /path/to/MyApp.app</code> for <code>com.apple.quarantine</code>. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code>. (Citation: Clearing quarantine attribute) (Citation: OceanLotus for OS X)\n \nIn typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS\u2019s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the URL where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application. (Citation: Bypassing Gatekeeper)",
                "name": "Gatekeeper Bypass",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1553.001",
                        "url": "https://attack.mitre.org/techniques/T1553/001"
                    },
                    {
                        "url": "https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf",
                        "description": "Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.",
                        "source_name": "Methods of Mac Malware Persistence"
                    },
                    {
                        "url": "https://derflounder.wordpress.com/2012/11/20/clearing-the-quarantine-extended-attribute-from-downloaded-applications/",
                        "description": "Rich Trouton. (2012, November 20). Clearing the quarantine extended attribute from downloaded applications. Retrieved July 5, 2017.",
                        "source_name": "Clearing quarantine attribute"
                    },
                    {
                        "url": "https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update",
                        "description": "Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.",
                        "source_name": "OceanLotus for OS X"
                    },
                    {
                        "url": "https://blog.malwarebytes.com/cybercrime/2015/10/bypassing-apples-gatekeeper/",
                        "description": "Thomas Reed. (2016, March 31). Bypassing Apple's Gatekeeper. Retrieved July 5, 2017.",
                        "source_name": "Bypassing Gatekeeper"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T22:41:20.063Z",
                "created": "2020-02-05T16:16:08.471Z",
                "x_mitre_platforms": [
                    "macOS"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_detection": "Monitoring for the removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_defense_bypassed": [
                    "Application control",
                    "Anti-virus"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1558.001",
                        "url": "https://attack.mitre.org/techniques/T1558/001"
                    },
                    {
                        "url": "https://adsecurity.org/?p=1640",
                        "description": "Metcalf, S. (2015, August 7). Kerberos Golden Tickets are Now More Golden. Retrieved December 1, 2017.",
                        "source_name": "AdSecurity Kerberos GT Aug 2015"
                    },
                    {
                        "url": "https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf",
                        "description": "Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017.",
                        "source_name": "CERT-EU Golden Ticket Protection"
                    },
                    {
                        "url": "https://adsecurity.org/?p=1515",
                        "description": "Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015.",
                        "source_name": "ADSecurity Detecting Forged Tickets"
                    },
                    {
                        "description": "Sean Metcalf. (2014, November 10). Kerberos & KRBTGT: Active Directory\u2019s Domain Kerberos Service Account. Retrieved January 30, 2020.",
                        "url": "https://adsecurity.org/?p=483",
                        "source_name": "ADSecurity Kerberos and KRBTGT"
                    },
                    {
                        "source_name": "Stealthbits Detect PtT 2019",
                        "url": "https://blog.stealthbits.com/detect-pass-the-ticket-attacks",
                        "description": "Jeff Warren. (2019, February 19). How to Detect Pass-the-Ticket Attacks. Retrieved February 27, 2020."
                    },
                    {
                        "source_name": "Microsoft Kerberos Golden Ticket",
                        "url": "https://gallery.technet.microsoft.com/scriptcenter/Kerberos-Golden-Ticket-b4814285",
                        "description": "Microsoft. (2015, March 24). Kerberos Golden Ticket Check (Updated). Retrieved February 27, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Golden Ticket",
                "description": "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.",
                "id": "attack-pattern--768dce68-8d0d-477a-b01d-0eea98b963a1",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-31T12:59:10.840Z",
                "created": "2020-02-11T19:13:33.643Z",
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Windows event logs"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)\n\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\n\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \n",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1061",
                        "url": "https://attack.mitre.org/techniques/T1061"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Run_command",
                        "description": "Wikipedia. (2018, August 3). Run Command. Retrieved October 12, 2018.",
                        "source_name": "Wikipedia Run Command"
                    }
                ],
                "description": "**This technique has been deprecated. Please use [Remote Services](https://attack.mitre.org/techniques/T1021) where appropriate.**\n\nThe Graphical User Interfaces (GUI) is a common way to interact with an operating system. Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076), instead of through a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), to search for information and execute files via mouse double-click events, the Windows Run command (Citation: Wikipedia Run Command), or other potentially difficult to monitor interactions.",
                "name": "Graphical User Interface",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--a6525aec-acc4-47fe-92f9-b9b4de4b9228",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "modified": "2020-03-30T13:38:08.738Z",
                "created": "2017-05-31T21:30:50.342Z",
                "x_mitre_deprecated": true,
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "2.0",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters",
                    "Binary file metadata"
                ],
                "x_mitre_detection": "Detection of execution through the GUI will likely lead to significant false positives. Other factors should be considered to detect misuse of services that can lead to adversaries gaining access to systems through interactive remote sessions. \n\nUnknown or unusual process launches outside of normal behavior on a particular system occurring through remote interactive sessions are suspicious. Collect and audit security logs that may indicate access to and use of Legitimate Credentials to access remote systems within the network.",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_remote_support": true
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1484",
                        "url": "https://attack.mitre.org/techniques/T1484"
                    },
                    {
                        "source_name": "TechNet Group Policy Basics",
                        "url": "https://blogs.technet.microsoft.com/musings_of_a_technical_tam/2012/02/13/group-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object/",
                        "description": "srachui. (2012, February 13). Group Policy Basics \u2013 Part 1: Understanding the Structure of a Group Policy Object. Retrieved March 5, 2019."
                    },
                    {
                        "source_name": "ADSecurity GPO Persistence 2016",
                        "url": "https://adsecurity.org/?p=2716",
                        "description": "Metcalf, S. (2016, March 14). Sneaky Active Directory Persistence #17: Group Policy. Retrieved March 5, 2019."
                    },
                    {
                        "source_name": "Wald0 Guide to GPOs",
                        "url": "https://wald0.com/?p=179",
                        "description": "Robbins, A. (2018, April 2). A Red Teamer\u2019s Guide to GPOs and OUs. Retrieved March 5, 2019."
                    },
                    {
                        "source_name": "Harmj0y Abusing GPO Permissions",
                        "url": "http://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/",
                        "description": "Schroeder, W. (2016, March 17). Abusing GPO Permissions. Retrieved March 5, 2019."
                    },
                    {
                        "source_name": "Mandiant M Trends 2016",
                        "url": "https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf",
                        "description": "Mandiant. (2016, February 25). Mandiant M-Trends 2016. Retrieved March 5, 2019."
                    },
                    {
                        "source_name": "Microsoft Hacking Team Breach",
                        "url": "https://www.microsoft.com/security/blog/2016/06/01/hacking-team-breach-a-cyber-jurassic-park/",
                        "description": "Microsoft Secure Team. (2016, June 1). Hacking Team Breach: A Cyber Jurassic Park. Retrieved March 5, 2019."
                    },
                    {
                        "source_name": "Harmj0y SeEnableDelegationPrivilege Right",
                        "url": "http://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/",
                        "description": "Schroeder, W. (2017, January 10). The Most Dangerous User Right You (Probably) Have Never Heard Of. Retrieved March 5, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Group Policy Modification",
                "description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path <code>\\\\&lt;DOMAIN&gt;\\SYSVOL\\&lt;DOMAIN&gt;\\Policies\\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1035),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)\n",
                "id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-03-26T21:17:41.231Z",
                "created": "2019-03-07T14:10:32.650Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_defense_bypassed": [
                    "System access controls",
                    "File system access controls"
                ],
                "x_mitre_detection": "It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:\n\n* Event ID 5136 - A directory service object was modified\n* Event ID 5137 - A directory service object was created\n* Event ID 5138 - A directory service object was undeleted\n* Event ID 5139 - A directory service object was moved\n* Event ID 5141 - A directory service object was deleted\n\n\nGPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704). ",
                "x_mitre_version": "1.1",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Windows event logs"
                ],
                "x_mitre_contributors": [
                    "Itamar Mizrahi, Cymptom",
                    "Tristan Bennett, Seamless Intelligence"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1552.006",
                        "url": "https://attack.mitre.org/techniques/T1552/006"
                    },
                    {
                        "source_name": "Microsoft GPP 2016",
                        "url": "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn581922(v%3Dws.11)",
                        "description": "Microsoft. (2016, August 31). Group Policy Preferences. Retrieved March 9, 2020."
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/cc422924.aspx",
                        "description": "Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.",
                        "source_name": "Microsoft GPP Key"
                    },
                    {
                        "url": "https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html",
                        "description": "Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.",
                        "source_name": "Obscuresecurity Get-GPPPassword"
                    },
                    {
                        "description": "Sean Metcalf. (2015, December 28). Finding Passwords in SYSVOL & Exploiting Group Policy Preferences. Retrieved February 17, 2020.",
                        "url": "https://adsecurity.org/?p=2288",
                        "source_name": "ADSecurity Finding Passwords in SYSVOL"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Group Policy Preferences",
                "description": "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>\n",
                "id": "attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-06-17T14:25:38.082Z",
                "created": "2020-02-11T18:43:06.253Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Windows event logs"
                ],
                "x_mitre_detection": "Monitor for attempts to access SYSVOL that involve searching for XML files. \n\nDeploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)"
            },
            {
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "name": "HISTCONTROL",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1148",
                        "url": "https://attack.mitre.org/techniques/T1148"
                    },
                    {
                        "external_id": "CAPEC-13",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/13.html"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-21T20:57:38.015Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1562.003",
                        "url": "https://attack.mitre.org/techniques/T1562/003"
                    },
                    {
                        "external_id": "CAPEC-13",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/13.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "HISTCONTROL",
                "description": "Adversaries may configure <code>HISTCONTROL</code> to not log all command history. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nThis setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history.\n\n Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T22:09:18.020Z",
                "created": "2020-02-21T20:56:06.498Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_defense_bypassed": [
                    "Host forensic analysis",
                    "Log analysis"
                ],
                "x_mitre_detection": "Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code> environment variable is also suspicious.",
                "x_mitre_data_sources": [
                    "Environment variable",
                    "File monitoring",
                    "Authentication logs",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS"
                ]
            },
            {
                "id": "attack-pattern--d40239b3-05ff-46d8-9bdd-b46d13463ef9",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Hardware Additions",
                "description": "Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access. While public references of usage by APT groups are scarce, many penetration testers leverage hardware additions for initial access. Commercial and open source products are leveraged with capabilities such as passive network tapping (Citation: Ossmann Star Feb 2011), man-in-the middle encryption breaking (Citation: Aleks Weapons Nov 2015), keystroke injection (Citation: Hak5 RubberDuck Dec 2016), kernel memory reading via DMA (Citation: Frisk DMA August 2016), adding new wireless access to an existing network (Citation: McMillan Pwn March 2012), and others.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1200",
                        "external_id": "T1200"
                    },
                    {
                        "url": "https://ossmann.blogspot.com/2011/02/throwing-star-lan-tap.html",
                        "description": "Michael Ossmann. (2011, February 17). Throwing Star LAN Tap. Retrieved March 30, 2018.",
                        "source_name": "Ossmann Star Feb 2011"
                    },
                    {
                        "url": "http://www.bsidesto.ca/2015/slides/Weapons_of_a_Penetration_Tester.pptx",
                        "description": "Nick Aleks. (2015, November 7). Weapons of a Pentester - Understanding the virtual & physical tools used by white/black hat hackers. Retrieved March 30, 2018.",
                        "source_name": "Aleks Weapons Nov 2015"
                    },
                    {
                        "url": "https://www.hak5.org/blog/main-blog/stealing-files-with-the-usb-rubber-ducky-usb-exfiltration-explained",
                        "description": "Hak5. (2016, December 7). Stealing Files with the USB Rubber Ducky \u2013 USB Exfiltration Explained. Retrieved March 30, 2018.",
                        "source_name": "Hak5 RubberDuck Dec 2016"
                    },
                    {
                        "url": "https://www.youtube.com/watch?v=fXthwl6ShOg",
                        "description": "Ulf Frisk. (2016, August 5). Direct Memory Attack the Kernel. Retrieved March 30, 2018.",
                        "source_name": "Frisk DMA August 2016"
                    },
                    {
                        "url": "https://arstechnica.com/information-technology/2012/03/the-pwn-plug-is-a-little-white-box-that-can-hack-your-network/",
                        "description": "Robert McMillan. (2012, March 3). The Pwn Plug is a little white box that can hack your network. Retrieved March 30, 2018.",
                        "source_name": "McMillan Pwn March 2012"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "initial-access"
                }],
                "modified": "2020-07-14T19:36:40.493Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows",
                    "Linux",
                    "macOS"
                ],
                "x_mitre_detection": "Asset management systems may help with the detection of computer systems or network devices that should not exist on a network. \n\nEndpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.",
                "x_mitre_data_sources": [
                    "Asset management",
                    "Data loss prevention"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1564.005",
                        "url": "https://attack.mitre.org/techniques/T1564/005"
                    },
                    {
                        "source_name": "MalwareTech VFS Nov 2014",
                        "url": "https://www.malwaretech.com/2014/11/virtual-file-systems-for-beginners.html",
                        "description": "Hutchins, M. (2014, November 28). Virtual File Systems for Beginners. Retrieved June 22, 2020."
                    },
                    {
                        "url": "https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html",
                        "description": "Andonov, D., et al. (2015, December 7). Thriving Beyond The Operating System: Financial Threat Group Targets Volume Boot Record. Retrieved May 13, 2016.",
                        "source_name": "FireEye Bootkits"
                    },
                    {
                        "source_name": "ESET ComRAT May 2020",
                        "url": "https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf",
                        "description": "Faou, M. (2020, May). From Agent.btz to ComRAT v4: A ten-year journey. Retrieved June 15, 2020."
                    },
                    {
                        "source_name": "Kaspersky Equation QA",
                        "description": "Kaspersky Lab's Global Research and Analysis Team. (2015, February). Equation Group: Questions and Answers. Retrieved December 21, 2015.",
                        "url": "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Hidden File System",
                "description": "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)",
                "id": "attack-pattern--dfebc3b7-d19d-450b-81c7-6dafe4184c04",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-29T15:12:11.024Z",
                "created": "2020-06-28T22:55:55.719Z",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Windows Registry"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_detection": "Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--dc27c2ec-c5f9-4228-ba57-d67b590bda93",
                "name": "Hidden Files and Directories",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1158",
                        "url": "https://attack.mitre.org/techniques/T1158"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/",
                        "description": "Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.",
                        "source_name": "Sofacy Komplex Trojan"
                    },
                    {
                        "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/",
                        "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                        "source_name": "Antiquated Mac Malware"
                    },
                    {
                        "url": "https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf",
                        "description": "Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.",
                        "source_name": "WireLurker"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-13T21:01:22.966Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "created": "2020-02-26T17:46:13.128Z",
                "modified": "2020-03-29T22:32:25.985Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d",
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "name": "Hidden Files and Directories",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1564.001",
                        "url": "https://attack.mitre.org/techniques/T1564/001"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/",
                        "description": "Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.",
                        "source_name": "Sofacy Komplex Trojan"
                    },
                    {
                        "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/",
                        "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                        "source_name": "Antiquated Mac Malware"
                    },
                    {
                        "url": "https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf",
                        "description": "Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.",
                        "source_name": "WireLurker"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ],
                "x_mitre_defense_bypassed": [
                    "Host forensic analysis"
                ]
            },
            {
                "id": "attack-pattern--ce73ea43-8e77-47ba-9c11-5e9c9c58b9ff",
                "name": "Hidden Users",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1147",
                        "url": "https://attack.mitre.org/techniques/T1147"
                    },
                    {
                        "url": "https://www2.cybereason.com/research-osx-pirrit-mac-os-x-secuirty",
                        "description": "Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 8, 2017.",
                        "source_name": "Cybereason OSX Pirrit"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-13T21:02:19.830Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1564.002",
                        "url": "https://attack.mitre.org/techniques/T1564/002"
                    },
                    {
                        "url": "https://www2.cybereason.com/research-osx-pirrit-mac-os-x-secuirty",
                        "description": "Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 8, 2017.",
                        "source_name": "Cybereason OSX Pirrit"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Hidden Users",
                "description": "Adversaries may use hidden users to mask the presence of user accounts they create. Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account.\n\nThere is a property value in <code>/Library/Preferences/com.apple.loginwindow</code> called <code>Hide500Users</code> that prevents users with userIDs 500 and lower from appearing at the login screen. When using the [Create Account](https://attack.mitre.org/techniques/T1136) technique with a userID under 500 (ex: <code>sudo dscl . -create /Users/username UniqueID 401</code>) and enabling this property (setting it to Yes), an adversary can conceal user accounts. (Citation: Cybereason OSX Pirrit).",
                "id": "attack-pattern--8c4aef43-48d5-49aa-b2af-c0cd58d30c3d",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T22:36:25.994Z",
                "created": "2020-03-13T20:12:40.876Z",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Authentication logs"
                ],
                "x_mitre_permissions_required": [
                    "root",
                    "Administrator"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "This technique prevents the new user from showing up at the log in screen, but all of the other signs of a new user still exist. The user still gets a home directory and will appear in the authentication logs.",
                "x_mitre_platforms": [
                    "macOS"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1143",
                        "url": "https://attack.mitre.org/techniques/T1143"
                    },
                    {
                        "source_name": "PowerShell About 2019",
                        "url": "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1",
                        "description": "Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019."
                    },
                    {
                        "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/",
                        "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                        "source_name": "Antiquated Mac Malware"
                    }
                ],
                "name": "Hidden Window",
                "id": "attack-pattern--04ee0cb7-dac3-4c6c-9387-4c6aa096f4cf",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-03-13T21:03:18.600Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1564.003",
                        "url": "https://attack.mitre.org/techniques/T1564/003"
                    },
                    {
                        "source_name": "PowerShell About 2019",
                        "url": "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1",
                        "description": "Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019."
                    },
                    {
                        "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/",
                        "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                        "source_name": "Antiquated Mac Malware"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Hidden Window",
                "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",
                "id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T22:49:43.557Z",
                "created": "2020-03-13T20:26:49.433Z",
                "x_mitre_contributors": [
                    "Travis Smith, Tripwire"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters",
                    "PowerShell logs"
                ],
                "x_mitre_platforms": [
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
                "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",
                "name": "Hide Artifacts",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1564",
                        "url": "https://attack.mitre.org/techniques/T1564"
                    },
                    {
                        "url": "https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/",
                        "description": "Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.",
                        "source_name": "Sofacy Komplex Trojan"
                    },
                    {
                        "url": "https://www2.cybereason.com/research-osx-pirrit-mac-os-x-secuirty",
                        "description": "Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved July 8, 2017.",
                        "source_name": "Cybereason OSX Pirrit"
                    },
                    {
                        "url": "https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/",
                        "description": "Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.",
                        "source_name": "MalwareBytes ADS July 2015"
                    },
                    {
                        "source_name": "Sophos Ragnar May 2020",
                        "url": "https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/",
                        "description": "SophosLabs. (2020, May 21). Ragnar Locker ransomware deploys virtual machine to dodge security. Retrieved June 29, 2020."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-07-06T19:03:40.511Z",
                "created": "2020-02-26T17:41:25.933Z",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitor file, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "PowerShell logs",
                    "Authentication logs",
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574",
                        "url": "https://attack.mitre.org/techniques/T1574"
                    },
                    {
                        "source_name": "Autoruns for Windows",
                        "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
                        "description": "Mark Russinovich. (2019, June 28). Autoruns for Windows v13.96. Retrieved March 13, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Hijack Execution Flow",
                "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",
                "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-26T16:09:59.324Z",
                "created": "2020-03-12T20:38:12.465Z",
                "x_mitre_data_sources": [
                    "Environment variable",
                    "Loaded DLLs",
                    "Process command-line parameters",
                    "Process monitoring",
                    "File monitoring",
                    "DLL monitoring"
                ],
                "x_mitre_detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Application control"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--66f73398-8394-4711-85e5-34c8540b22a5",
                "name": "Hooking",
                "external_references": [{
                        "url": "https://attack.mitre.org/techniques/T1179",
                        "external_id": "T1179",
                        "source_name": "mitre-attack"
                    },
                    {
                        "source_name": "Microsoft Hook Overview",
                        "description": "Microsoft. (n.d.). Hooks Overview. Retrieved December 12, 2017.",
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms644959.aspx"
                    },
                    {
                        "source_name": "Endgame Process Injection July 2017",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
                    },
                    {
                        "source_name": "Adlice Software IAT Hooks Oct 2014",
                        "description": "Tigzy. (2014, October 15). Userland Rootkits: Part 1, IAT hooks. Retrieved December 12, 2017.",
                        "url": "https://www.adlice.com/userland-rootkits-part-1-iat-hooks/"
                    },
                    {
                        "source_name": "MWRInfoSecurity Dynamic Hooking 2015",
                        "description": "Hillman, M. (2015, August 8). Dynamic Hooking Techniques: User Mode. Retrieved December 20, 2017.",
                        "url": "https://www.mwrinfosecurity.com/our-thinking/dynamic-hooking-techniques-user-mode/"
                    },
                    {
                        "source_name": "HighTech Bridge Inline Hooking Sept 2011",
                        "description": "Mariani, B. (2011, September 6). Inline Hooking in Windows. Retrieved December 12, 2017.",
                        "url": "https://www.exploit-db.com/docs/17802.pdf"
                    },
                    {
                        "source_name": "Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017",
                        "description": "Microsoft. (2017, September 15). TrojanSpy:Win32/Ursnif.gen!I. Retrieved December 18, 2017.",
                        "url": "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=TrojanSpy:Win32/Ursnif.gen!I&threatId=-2147336918"
                    },
                    {
                        "source_name": "Symantec Windows Rootkits",
                        "description": "Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.",
                        "url": "https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf"
                    },
                    {
                        "source_name": "Volatility Detecting Hooks Sept 2012",
                        "description": "Volatility Labs. (2012, September 24). MoVP 3.1 Detecting Malware Hooks in the Windows GUI Subsystem. Retrieved December 12, 2017.",
                        "url": "https://volatility-labs.blogspot.com/2012/09/movp-31-detecting-malware-hooks-in.html"
                    },
                    {
                        "source_name": "PreKageo Winhook Jul 2011",
                        "description": "Prekas, G. (2011, July 11). Winhook. Retrieved December 12, 2017.",
                        "url": "https://github.com/prekageo/winhook"
                    },
                    {
                        "source_name": "Jay GetHooks Sept 2011",
                        "description": "Satiro, J. (2011, September 14). GetHooks. Retrieved December 12, 2017.",
                        "url": "https://github.com/jay/gethooks"
                    },
                    {
                        "source_name": "Zairon Hooking Dec 2006",
                        "description": "Felici, M. (2006, December 6). Any application-defined hook procedure on my machine?. Retrieved December 12, 2017.",
                        "url": "https://zairon.wordpress.com/2006/12/06/any-application-defined-hook-procedure-on-my-machine/"
                    },
                    {
                        "source_name": "EyeofRa Detecting Hooking June 2017",
                        "description": "Eye of Ra. (2017, June 27). Windows Keylogger Part 2: Defense against user-land. Retrieved December 12, 2017.",
                        "url": "https://eyeofrablog.wordpress.com/2017/06/27/windows-keylogger-part-2-defense-against-user-land/"
                    },
                    {
                        "source_name": "GMER Rootkits",
                        "description": "GMER. (n.d.). GMER. Retrieved December 12, 2017.",
                        "url": "http://www.gmer.net/"
                    },
                    {
                        "source_name": "Microsoft Process Snapshot",
                        "description": "Microsoft. (n.d.). Taking a Snapshot and Viewing Processes. Retrieved December 12, 2017.",
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ms686701.aspx"
                    },
                    {
                        "source_name": "StackExchange Hooks Jul 2012",
                        "description": "Stack Exchange - Security. (2012, July 31). What are the methods to find hooked functions and APIs?. Retrieved December 12, 2017.",
                        "url": "https://security.stackexchange.com/questions/17904/what-are-the-methods-to-find-hooked-functions-and-apis"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-12T16:57:40.440Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "id": "attack-pattern--4be89c7c-ace6-4876-9377-c8d54cef3d63",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Hypervisor",
                "description": "**This technique has been deprecated and should no longer be used.**\n\nA type-1 hypervisor is a software layer that sits between the guest operating systems and system's hardware. (Citation: Wikipedia Hypervisor) It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen. (Citation: Wikipedia Xen) A type-1 hypervisor operates at a level below the operating system and could be designed with [Rootkit](https://attack.mitre.org/techniques/T1014) functionality to hide its existence from the guest operating system. (Citation: Myers 2007) A malicious hypervisor of this nature could be used to persist on systems through interruption.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1062",
                        "url": "https://attack.mitre.org/techniques/T1062"
                    },
                    {
                        "external_id": "CAPEC-552",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/552.html"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Hypervisor",
                        "description": "Wikipedia. (2016, May 23). Hypervisor. Retrieved June 11, 2016.",
                        "source_name": "Wikipedia Hypervisor"
                    },
                    {
                        "url": "http://en.wikipedia.org/wiki/Xen",
                        "description": "Xen. (n.d.). In Wikipedia. Retrieved November 13, 2014.",
                        "source_name": "Wikipedia Xen"
                    },
                    {
                        "url": "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.90.8832&rep=rep1&type=pdf",
                        "description": "Myers, M., and Youndt, S. (2007). An Introduction to Hardware-Assisted Virtual Machine (HVM) Rootkits. Retrieved November 13, 2014.",
                        "source_name": "Myers 2007"
                    },
                    {
                        "url": "http://virtualization.info/en/news/2006/08/debunking-blue-pill-myth.html",
                        "description": "virtualization.info. (Interviewer) & Liguori, A. (Interviewee). (2006, August 11). Debunking Blue Pill myth &#91;Interview transcript&#93;. Retrieved November 13, 2014.",
                        "source_name": "virtualization.info 2006"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-30T13:44:04.712Z",
                "created": "2017-05-31T21:30:50.958Z",
                "x_mitre_deprecated": true,
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Type-1 hypervisors may be detected by performing timing analysis. Hypervisors emulate certain CPU instructions that would normally be executed by the hardware. If an instruction takes orders of magnitude longer to execute than normal on a system that should not contain a hypervisor, one may be present. (Citation: virtualization.info 2006)",
                "x_mitre_data_sources": [
                    "System calls"
                ],
                "x_mitre_version": "2.0"
            },
            {
                "id": "attack-pattern--62166220-e498-410f-a90a-19d4339d4e99",
                "name": "Image File Execution Options Injection",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1183",
                        "url": "https://attack.mitre.org/techniques/T1183"
                    },
                    {
                        "url": "https://blogs.msdn.microsoft.com/mithuns/2010/03/24/image-file-execution-options-ifeo/",
                        "description": "Shanbhag, M. (2010, March 24). Image File Execution Options (IFEO). Retrieved December 18, 2017.",
                        "source_name": "Microsoft Dev Blog IFEO Mar 2010"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-hardware/drivers/debugger/gflags-overview",
                        "description": "Microsoft. (2017, May 23). GFlags Overview. Retrieved December 18, 2017.",
                        "source_name": "Microsoft GFlags Mar 2017"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit",
                        "description": "Marshall, D. & Griffin, S. (2017, November 28). Monitoring Silent Process Exit. Retrieved June 27, 2018.",
                        "source_name": "Microsoft Silent Process Exit NOV 2017"
                    },
                    {
                        "url": "https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/",
                        "description": "Moe, O. (2018, April 10). Persistence using GlobalFlags in Image File Execution Options - Hidden from Autoruns.exe. Retrieved June 27, 2018.",
                        "source_name": "Oddvar Moe IFEO APR 2018"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.f-secure.com/v-descs/backdoor_w32_hupigon_emv.shtml",
                        "description": "FSecure. (n.d.). Backdoor - W32/Hupigon.EMV - Threat Description. Retrieved December 18, 2017.",
                        "source_name": "FSecure Hupigon"
                    },
                    {
                        "url": "https://www.symantec.com/security_response/writeup.jsp?docid=2008-062807-2501-99&tabid=2",
                        "description": "Symantec. (2008, June 28). Trojan.Ushedix. Retrieved December 18, 2017.",
                        "source_name": "Symantec Ushedix June 2008"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T15:06:35.811Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.012",
                        "url": "https://attack.mitre.org/techniques/T1546/012"
                    },
                    {
                        "url": "https://blogs.msdn.microsoft.com/mithuns/2010/03/24/image-file-execution-options-ifeo/",
                        "description": "Shanbhag, M. (2010, March 24). Image File Execution Options (IFEO). Retrieved December 18, 2017.",
                        "source_name": "Microsoft Dev Blog IFEO Mar 2010"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-hardware/drivers/debugger/gflags-overview",
                        "description": "Microsoft. (2017, May 23). GFlags Overview. Retrieved December 18, 2017.",
                        "source_name": "Microsoft GFlags Mar 2017"
                    },
                    {
                        "url": "https://docs.microsoft.com/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit",
                        "description": "Marshall, D. & Griffin, S. (2017, November 28). Monitoring Silent Process Exit. Retrieved June 27, 2018.",
                        "source_name": "Microsoft Silent Process Exit NOV 2017"
                    },
                    {
                        "url": "https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/",
                        "description": "Moe, O. (2018, April 10). Persistence using GlobalFlags in Image File Execution Options - Hidden from Autoruns.exe. Retrieved June 27, 2018.",
                        "source_name": "Oddvar Moe IFEO APR 2018"
                    },
                    {
                        "url": "http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/",
                        "description": "Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.",
                        "source_name": "Tilbury 2014"
                    },
                    {
                        "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process",
                        "description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.",
                        "source_name": "Endgame Process Injection July 2017"
                    },
                    {
                        "url": "https://www.f-secure.com/v-descs/backdoor_w32_hupigon_emv.shtml",
                        "description": "FSecure. (n.d.). Backdoor - W32/Hupigon.EMV - Threat Description. Retrieved December 18, 2017.",
                        "source_name": "FSecure Hupigon"
                    },
                    {
                        "url": "https://www.symantec.com/security_response/writeup.jsp?docid=2008-062807-2501-99&tabid=2",
                        "description": "Symantec. (2008, June 28). Trojan.Ushedix. Retrieved December 18, 2017.",
                        "source_name": "Symantec Ushedix June 2008"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Image File Execution Options Injection",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IEFO) debuggers. IEFOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IEFO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Endgame Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
                "id": "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-24T19:39:50.839Z",
                "created": "2020-01-24T15:05:58.384Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Monitor for abnormal usage of the Glfags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Endgame Process Injection July 2017)",
                "x_mitre_data_sources": [
                    "API monitoring",
                    "Windows event logs",
                    "Windows Registry",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_contributors": [
                    "Oddvar Moe, @oddvarmoe"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
                "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.",
                "name": "Impair Defenses",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1562",
                    "url": "https://attack.mitre.org/techniques/T1562"
                }],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-07-09T14:43:42.718Z",
                "created": "2020-02-21T20:22:13.470Z",
                "x_mitre_platforms": [
                    "Linux",
                    "Windows",
                    "macOS",
                    "AWS",
                    "GCP",
                    "Azure"
                ],
                "x_mitre_data_sources": [
                    "GCP audit logs",
                    "Azure activity logs",
                    "AWS CloudTrail logs",
                    "Anti-virus",
                    "Services",
                    "API monitoring",
                    "Environment variable",
                    "Authentication logs",
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring",
                    "Windows Registry"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments to see if security tools or logging services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools.  Lack of log events may be suspicious.\n\nMonitor environment variables and APIs that can be leveraged to disable security measures.",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Signature-based detection",
                    "Host intrusion prevention systems",
                    "File monitoring",
                    "Digital Certificate Validation",
                    "Host forensic analysis",
                    "Log analysis",
                    "Firewall"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1525",
                        "url": "https://attack.mitre.org/techniques/T1525"
                    },
                    {
                        "source_name": "Rhino Labs Cloud Image Backdoor Technique Sept 2019",
                        "url": "https://rhinosecuritylabs.com/aws/cloud-container-attack-tool/",
                        "description": "Rhino Labs. (2019, August). Exploiting AWS ECR and ECS with the Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019."
                    },
                    {
                        "source_name": "Rhino Labs Cloud Backdoor September 2019",
                        "url": "https://github.com/RhinoSecurityLabs/ccat",
                        "description": "Rhino Labs. (2019, September). Cloud Container Attack Tool (CCAT). Retrieved September 12, 2019."
                    },
                    {
                        "source_name": "ATT Cybersecurity Cryptocurrency Attacks on Cloud",
                        "url": "https://www.alienvault.com/blogs/labs-research/making-it-rain-cryptocurrency-mining-attacks-in-the-cloud",
                        "description": "Doman, C. & Hegel, T.. (2019, March 14). Making it Rain - Cryptocurrency Mining Attacks in the Cloud. Retrieved October 3, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Implant Container Image",
                "description": "Adversaries may implant cloud container images with malicious code to establish persistence. Amazon Web Service (AWS) Amazon Machine Images (AMI), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an attacker has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019) Adversaries may also implant Docker images that may be inadvertently used in cloud deployments, which has been reported in some instances of cryptomining botnets.(Citation: ATT Cybersecurity Cryptocurrency Attacks on Cloud) ",
                "id": "attack-pattern--4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "persistence"
                }],
                "modified": "2020-03-25T22:47:34.137Z",
                "created": "2019-09-04T12:04:03.552Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Asset management"
                ],
                "x_mitre_detection": "Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_contributors": [
                    "Praetorian"
                ],
                "x_mitre_platforms": [
                    "GCP",
                    "Azure",
                    "AWS"
                ]
            },
            {
                "created": "2017-05-31T21:30:47.384Z",
                "modified": "2020-03-19T19:10:25.404Z",
                "type": "attack-pattern",
                "revoked": true,
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1054",
                        "url": "https://attack.mitre.org/techniques/T1054"
                    },
                    {
                        "external_id": "CAPEC-571",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/571.html"
                    },
                    {
                        "url": "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Backdoor:Win32/Lamin.A",
                        "description": "Microsoft. (2009, May 17). Backdoor:Win32/Lamin.A. Retrieved September 6, 2018.",
                        "source_name": "Microsoft Lamin Sept 2017"
                    },
                    {
                        "source_name": "Microsoft About Event Tracing 2018",
                        "url": "https://docs.microsoft.com/en-us/windows/desktop/etw/consuming-events",
                        "description": "Microsoft. (2018, May 30). About Event Tracing. Retrieved June 7, 2019."
                    },
                    {
                        "source_name": "Medium Event Tracing Tampering 2018",
                        "url": "https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63",
                        "description": "Palantir. (2018, December 24). Tampering with Windows Event Tracing: Background, Offense, and Defense. Retrieved June 7, 2019."
                    }
                ],
                "name": "Indicator Blocking",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df"
            },
            {
                "id": "attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "name": "Indicator Blocking",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1562.006",
                        "url": "https://attack.mitre.org/techniques/T1562/006"
                    },
                    {
                        "external_id": "CAPEC-571",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/571.html"
                    },
                    {
                        "url": "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Backdoor:Win32/Lamin.A",
                        "description": "Microsoft. (2009, May 17). Backdoor:Win32/Lamin.A. Retrieved September 6, 2018.",
                        "source_name": "Microsoft Lamin Sept 2017"
                    },
                    {
                        "source_name": "Microsoft About Event Tracing 2018",
                        "url": "https://docs.microsoft.com/en-us/windows/desktop/etw/consuming-events",
                        "description": "Microsoft. (2018, May 30). About Event Tracing. Retrieved June 7, 2019."
                    },
                    {
                        "source_name": "Medium Event Tracing Tampering 2018",
                        "url": "https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63",
                        "description": "Palantir. (2018, December 24). Tampering with Windows Event Tracing: Background, Offense, and Defense. Retrieved June 7, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-07-09T14:43:42.450Z",
                "created": "2020-03-19T19:09:30.329Z",
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_contributors": [
                    "Rob Smith"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring",
                    "Sensor health and status"
                ],
                "x_mitre_detection": "Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.\n\nDepending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\AUTOLOGGER_NAME\\{PROVIDER_GUID}</code>",
                "x_mitre_defense_bypassed": [
                    "Host intrusion prevention systems",
                    "Anti-virus",
                    "Anti-virus"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "revoked": true,
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "name": "Indicator Removal from Tools",
                "external_references": [{
                    "source_name": "mitre-attack",
                    "url": "https://attack.mitre.org/techniques/T1066",
                    "external_id": "T1066"
                }],
                "type": "attack-pattern",
                "modified": "2020-03-20T15:22:53.835Z",
                "created": "2017-05-31T21:30:54.176Z"
            },
            {
                "id": "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92",
                "description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
                "name": "Indicator Removal from Tools",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1027.005",
                    "url": "https://attack.mitre.org/techniques/T1027/005"
                }],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T21:03:09.766Z",
                "created": "2020-03-19T21:27:32.820Z",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters",
                    "Anti-virus",
                    "Binary file metadata"
                ],
                "x_mitre_detection": "The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
                "x_mitre_defense_bypassed": [
                    "Anti-virus",
                    "Host intrusion prevention systems",
                    "Log analysis",
                    "Signature-based detection"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Indicator Removal on Host",
                "description": "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139) and /var/log/*.\n\nThese actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This that may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1070",
                        "url": "https://attack.mitre.org/techniques/T1070"
                    },
                    {
                        "external_id": "CAPEC-93",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/93.html"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-29T21:43:29.196Z",
                "created": "2017-05-31T21:30:55.892Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_detection": "File system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.",
                "x_mitre_defense_bypassed": [
                    "Log analysis",
                    "Host intrusion prevention systems",
                    "Anti-virus"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters",
                    "API monitoring",
                    "Windows event logs"
                ],
                "x_mitre_contributors": [
                    "Ed Williams, Trustwave, SpiderLabs"
                ],
                "x_mitre_version": "1.1"
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1202",
                        "url": "https://attack.mitre.org/techniques/T1202"
                    },
                    {
                        "url": "https://twitter.com/vector_sec/status/896049052642533376",
                        "description": "vector_sec. (2017, August 11). Defenders watching launches of cmd? What about forfiles?. Retrieved January 22, 2018.",
                        "source_name": "VectorSec ForFiles Aug 2017"
                    },
                    {
                        "url": "https://twitter.com/Evi1cg/status/935027922397573120",
                        "description": "Evi1cg. (2017, November 26). block cmd.exe ? try this :. Retrieved January 22, 2018.",
                        "source_name": "Evi1cg Forfiles Nov 2017"
                    },
                    {
                        "url": "https://community.rsa.com/community/products/netwitness/blog/2017/08/14/are-you-looking-out-for-forfilesexe-if-you-are-watching-for-cmdexe",
                        "description": "Partington, E. (2017, August 14). Are you looking out for forfiles.exe (if you are watching for cmd.exe). Retrieved January 22, 2018.",
                        "source_name": "RSA Forfiles Aug 2017"
                    }
                ],
                "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",
                "name": "Indirect Command Execution",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T22:09:22.559Z",
                "created": "2018-04-18T17:59:24.739Z",
                "x_mitre_version": "1.1",
                "x_mitre_contributors": [
                    "Matthew Demaske, Adaptforward"
                ],
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Process command-line parameters",
                    "Windows event logs"
                ],
                "x_mitre_defense_bypassed": [
                    "Static File Analysis",
                    "Application control",
                    "Application control by file name or path"
                ],
                "x_mitre_detection": "Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1105",
                        "url": "https://attack.mitre.org/techniques/T1105"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
                "name": "Ingress Tool Transfer",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-20T15:42:48.595Z",
                "created": "2017-05-31T21:31:16.408Z",
                "x_mitre_version": "2.0",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "File monitoring",
                    "Packet capture",
                    "Process use of network",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a",
                "description": "Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>",
                "name": "Inhibit System Recovery",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "external_id": "T1490",
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1490"
                    },
                    {
                        "source_name": "Talos Olympic Destroyer 2018",
                        "url": "https://blog.talosintelligence.com/2018/02/olympic-destroyer.html",
                        "description": "Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019."
                    },
                    {
                        "source_name": "FireEye WannaCry 2017",
                        "url": "https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html",
                        "description": "Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-07-14T19:33:52.512Z",
                "created": "2019-04-02T13:54:43.136Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "root",
                    "SYSTEM",
                    "User"
                ],
                "x_mitre_version": "1.0",
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "Services",
                    "Windows event logs",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\n\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage</code>).",
                "x_mitre_impact_type": [
                    "Availability"
                ],
                "x_mitre_contributors": [
                    "Yonatan Gotlib, Deep Instinct"
                ]
            },
            {
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1056",
                        "url": "https://attack.mitre.org/techniques/T1056"
                    },
                    {
                        "external_id": "CAPEC-569",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/569.html"
                    },
                    {
                        "url": "http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf",
                        "description": "Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.",
                        "source_name": "Adventures of a Keystroke"
                    }
                ],
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).",
                "name": "Input Capture",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "collection"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "credential-access"
                    }
                ],
                "modified": "2020-03-24T21:29:13.900Z",
                "created": "2017-05-31T21:30:48.323Z",
                "x_mitre_version": "1.1",
                "x_mitre_contributors": [
                    "John Lambert, Microsoft Threat Intelligence Center"
                ],
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "Windows event logs",
                    "User interface",
                    "Process command-line parameters",
                    "Process monitoring",
                    "PowerShell logs",
                    "Loaded DLLs",
                    "Kernel drivers",
                    "DLL monitoring",
                    "Binary file metadata",
                    "API monitoring"
                ],
                "x_mitre_detection": "Detection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`)(Citation: Adventures of a Keystroke), monitoring for malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM",
                    "root",
                    "User"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false
            },
            {
                "id": "attack-pattern--91ce1ede-107f-4d8b-bf4c-735e8789c94b",
                "name": "Input Prompt",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1141",
                        "url": "https://attack.mitre.org/techniques/T1141"
                    },
                    {
                        "external_id": "CAPEC-569",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/569.html"
                    },
                    {
                        "url": "https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html",
                        "description": "Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.",
                        "source_name": "OSX Malware Exploits MacKeeper"
                    },
                    {
                        "source_name": "LogRhythm Do You Trust Oct 2014",
                        "url": "https://logrhythm.com/blog/do-you-trust-your-computer/",
                        "description": "Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018."
                    },
                    {
                        "url": "https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/",
                        "description": "Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.",
                        "source_name": "OSX Keydnap malware"
                    },
                    {
                        "source_name": "Enigma Phishing for Credentials Jan 2015",
                        "url": "https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/",
                        "description": "Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018."
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-12T16:34:06.412Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "name": "Install Root Certificate",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1130",
                        "url": "https://attack.mitre.org/techniques/T1130"
                    },
                    {
                        "external_id": "CAPEC-479",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/479.html"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Root_certificate",
                        "description": "Wikipedia. (2016, December 6). Root certificate. Retrieved February 20, 2017.",
                        "source_name": "Wikipedia Root Certificate"
                    },
                    {
                        "url": "http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf",
                        "description": "Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.",
                        "source_name": "Operation Emmental"
                    },
                    {
                        "url": "https://www.kaspersky.com/blog/lenovo-pc-with-adware-superfish-preinstalled/7712/",
                        "description": "Onuma. (2015, February 24). Superfish: Adware Preinstalled on Lenovo Laptops. Retrieved February 20, 2017.",
                        "source_name": "Kaspersky Superfish"
                    },
                    {
                        "source_name": "SpectorOps Code Signing Dec 2017",
                        "description": "Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.",
                        "url": "https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec"
                    },
                    {
                        "source_name": "objective-see ay mami 2018",
                        "description": "Patrick Wardle. (2018, January 11). Ay MaMi. Retrieved March 19, 2018.",
                        "url": "https://objective-see.com/blog/blog_0x26.html"
                    },
                    {
                        "source_name": "Microsoft Sigcheck May 2017",
                        "description": "Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018.",
                        "url": "https://docs.microsoft.com/sysinternals/downloads/sigcheck"
                    },
                    {
                        "url": "https://www.tripwire.com/state-of-security/off-topic/appunblocker-bypassing-applocker/",
                        "description": "Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017.",
                        "source_name": "Tripwire AppUNBlocker"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-21T21:11:06.761Z",
                "created": "2017-05-31T21:31:42.750Z"
            },
            {
                "id": "attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839",
                "description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "name": "Install Root Certificate",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1553.004",
                        "url": "https://attack.mitre.org/techniques/T1553/004"
                    },
                    {
                        "external_id": "CAPEC-479",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/479.html"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Root_certificate",
                        "description": "Wikipedia. (2016, December 6). Root certificate. Retrieved February 20, 2017.",
                        "source_name": "Wikipedia Root Certificate"
                    },
                    {
                        "url": "http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf",
                        "description": "Sancho, D., Hacquebord, F., Link, R. (2014, July 22). Finding Holes Operation Emmental. Retrieved February 9, 2016.",
                        "source_name": "Operation Emmental"
                    },
                    {
                        "url": "https://www.kaspersky.com/blog/lenovo-pc-with-adware-superfish-preinstalled/7712/",
                        "description": "Onuma. (2015, February 24). Superfish: Adware Preinstalled on Lenovo Laptops. Retrieved February 20, 2017.",
                        "source_name": "Kaspersky Superfish"
                    },
                    {
                        "url": "https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec",
                        "description": "Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018.",
                        "source_name": "SpectorOps Code Signing Dec 2017"
                    },
                    {
                        "url": "https://objective-see.com/blog/blog_0x26.html",
                        "description": "Patrick Wardle. (2018, January 11). Ay MaMi. Retrieved March 19, 2018.",
                        "source_name": "objective-see ay mami 2018"
                    },
                    {
                        "url": "https://docs.microsoft.com/sysinternals/downloads/sigcheck",
                        "description": "Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018.",
                        "source_name": "Microsoft Sigcheck May 2017"
                    },
                    {
                        "url": "https://www.tripwire.com/state-of-security/off-topic/appunblocker-bypassing-applocker/",
                        "description": "Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017.",
                        "source_name": "Tripwire AppUNBlocker"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-19T20:31:11.389Z",
                "created": "2020-02-21T21:05:32.844Z",
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Matt Graeber, @mattifestation, SpecterOps",
                    "Red Canary",
                    "Travis Smith, Tripwire",
                    "Itzik Kotler, SafeBreach"
                ],
                "x_mitre_data_sources": [
                    "SSL/TLS inspection",
                    "Digital certificate logs"
                ],
                "x_mitre_detection": "A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>[HKLM or HKCU]\\Software[\\Policies\\]\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072",
                "x_mitre_defense_bypassed": [
                    "Digital Certificate Validation"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--f792d02f-813d-402b-86a5-ab98cb391d3b",
                "name": "InstallUtil",
                "external_references": [{
                        "external_id": "T1118",
                        "url": "https://attack.mitre.org/techniques/T1118",
                        "source_name": "mitre-attack"
                    },
                    {
                        "source_name": "MSDN InstallUtil",
                        "description": "Microsoft. (n.d.). Installutil.exe (Installer Tool). Retrieved July 1, 2016.",
                        "url": "https://msdn.microsoft.com/en-us/library/50614e95.aspx"
                    },
                    {
                        "source_name": "LOLBAS Installutil",
                        "url": "https://lolbas-project.github.io/lolbas/Binaries/Installutil/",
                        "description": "LOLBAS. (n.d.). Installutil.exe. Retrieved July 31, 2019."
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-31T18:59:38.256Z",
                "created": "2017-05-31T21:31:27.510Z"
            },
            {
                "id": "attack-pattern--2cd950a6-16c4-404a-aa01-044322395107",
                "description": "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) InstallUtil is digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)",
                "name": "InstallUtil",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1218.004",
                        "url": "https://attack.mitre.org/techniques/T1218/004"
                    },
                    {
                        "source_name": "MSDN InstallUtil",
                        "description": "Microsoft. (n.d.). Installutil.exe (Installer Tool). Retrieved July 1, 2016.",
                        "url": "https://msdn.microsoft.com/en-us/library/50614e95.aspx"
                    },
                    {
                        "source_name": "LOLBAS Installutil",
                        "url": "https://lolbas-project.github.io/lolbas/Binaries/Installutil/",
                        "description": "LOLBAS. (n.d.). Installutil.exe. Retrieved July 31, 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-06-20T22:34:46.529Z",
                "created": "2020-01-23T19:09:48.811Z",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Travis Smith, Tripwire",
                    "Casey Smith"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
                "x_mitre_defense_bypassed": [
                    "Digital Certificate Validation",
                    "Application control"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "created": "2020-02-12T14:08:48.689Z",
                "modified": "2020-03-28T19:34:47.546Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--acd0ba37-7ba9-4cc5-ac61-796586cd856d",
                "description": "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms.",
                "name": "Inter-Process Communication",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1559",
                    "url": "https://attack.mitre.org/techniques/T1559"
                }],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": false,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Monitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "User",
                    "SYSTEM"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "DLL monitoring",
                    "File monitoring"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1491.001",
                        "url": "https://attack.mitre.org/techniques/T1491/001"
                    },
                    {
                        "source_name": "Novetta Blockbuster",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.",
                        "url": "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf"
                    },
                    {
                        "source_name": "Novetta Blockbuster Destructive Malware",
                        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.",
                        "url": "https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Internal Defacement",
                "description": "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)",
                "id": "attack-pattern--8c41090b-aa47-4331-986b-8c9a51a91103",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "impact"
                }],
                "modified": "2020-03-29T22:57:04.784Z",
                "created": "2020-02-20T14:31:34.778Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_impact_type": [
                    "Integrity"
                ],
                "x_mitre_detection": "Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
                "x_mitre_data_sources": [
                    "Web logs",
                    "Web application firewall logs",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1090.001",
                        "url": "https://attack.mitre.org/techniques/T1090/001"
                    },
                    {
                        "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/",
                        "description": "Wilhoit, K. (2013, March 4). In-Depth Look: APT Attack Tools of the Trade. Retrieved December 2, 2015.",
                        "source_name": "Trend Micro APT Attack Tools"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Internal Proxy",
                "description": "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
                "id": "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-15T00:46:26.598Z",
                "created": "2020-03-14T23:08:20.244Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Process use of network",
                    "Process monitoring",
                    "Network protocol analysis",
                    "Netflow/Enclave netflow",
                    "Packet capture"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--9e7452df-5144-4b6e-b04a-b66dd4016747",
                "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged attack where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)\n\nAdversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.\n\nThere have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the attack and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)",
                "name": "Internal Spearphishing",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "external_id": "T1534",
                        "source_name": "mitre-attack",
                        "url": "https://attack.mitre.org/techniques/T1534"
                    },
                    {
                        "description": "Chris Taylor. (2017, October 5). When Phishing Starts from the Inside. Retrieved October 8, 2019.",
                        "url": "https://blog.trendmicro.com/phishing-starts-inside/",
                        "source_name": "Trend Micro When Phishing Starts from the Inside 2017"
                    },
                    {
                        "description": "THE FINANCIAL TIMES. (2019, September 2). A sobering day. Retrieved October 8, 2019.",
                        "url": " https://labs.ft.com/2013/05/a-sobering-day/?mhq5j=e6 ",
                        "source_name": "THE FINANCIAL TIMES LTD 2019."
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }],
                "modified": "2020-03-31T22:13:33.718Z",
                "created": "2019-09-04T19:26:12.441Z",
                "x_mitre_is_subtechnique": false,
                "x_mitre_data_sources": [
                    "SSL/TLS inspection",
                    "DNS records",
                    "Anti-virus",
                    "Web proxy",
                    "File monitoring",
                    "Mail server",
                    "Office 365 trace logs"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux",
                    "Office 365",
                    "SaaS"
                ],
                "x_mitre_contributors": [
                    "Tim MalcomVetter",
                    "Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)"
                ],
                "x_mitre_detection": "Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)",
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1036.001",
                        "url": "https://attack.mitre.org/techniques/T1036/001"
                    },
                    {
                        "source_name": "Threatexpress MetaTwin 2017",
                        "url": "https://threatexpress.com/blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/",
                        "description": "Vest, J. (2017, October 9). Borrowing Microsoft MetaData and Signatures to Hide Binary Payloads. Retrieved September 10, 2019."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Invalid Code Signature",
                "description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
                "id": "attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-02-10T19:52:47.724Z",
                "created": "2020-02-10T19:49:46.752Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process monitoring",
                    "Binary file metadata"
                ],
                "x_mitre_platforms": [
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1059.007",
                        "url": "https://attack.mitre.org/techniques/T1059/007"
                    },
                    {
                        "source_name": "NodeJS",
                        "url": "https://nodejs.org/",
                        "description": "OpenJS Foundation. (n.d.). Node.js. Retrieved June 23, 2020."
                    },
                    {
                        "source_name": "JScrip May 2018",
                        "url": "https://docs.microsoft.com/windows/win32/com/translating-to-jscript",
                        "description": "Microsoft. (2018, May 31). Translating to JScript. Retrieved June 23, 2020."
                    },
                    {
                        "source_name": "Microsoft JScript 2007",
                        "url": "https://docs.microsoft.com/archive/blogs/gauravseth/the-world-of-jscript-javascript-ecmascript",
                        "description": "Microsoft. (2007, August 15). The World of JScript, JavaScript, ECMAScript \u2026. Retrieved June 23, 2020."
                    },
                    {
                        "source_name": "Microsoft Windows Scripts",
                        "url": "https://docs.microsoft.com/scripting/winscript/windows-script-interfaces",
                        "description": "Microsoft. (2017, January 18). Windows Script Interfaces. Retrieved June 23, 2020."
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "JavaScript/JScript",
                "description": "Adversaries may abuse JavaScript and/or JScript for execution. JavaScript (JS) is a platform-agnostic scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nAdversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
                "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }],
                "modified": "2020-06-25T03:23:13.804Z",
                "created": "2020-06-23T19:12:24.924Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
                "x_mitre_data_sources": [
                    "Loaded DLLs",
                    "DLL monitoring",
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1001.001",
                        "url": "https://attack.mitre.org/techniques/T1001/001"
                    },
                    {
                        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                        "source_name": "University of Birmingham C2"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Junk Data",
                "description": "Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ",
                "id": "attack-pattern--f7c0689c-4dbd-489b-81be-7cb7c7079ade",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "command-and-control"
                }],
                "modified": "2020-03-15T00:30:25.444Z",
                "created": "2020-03-15T00:30:25.444Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)",
                "x_mitre_data_sources": [
                    "Packet capture",
                    "Process use of network",
                    "Process monitoring",
                    "Network protocol analysis"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "id": "attack-pattern--b39d03cb-7b98-41c4-a878-c40c1a913dc0",
                "name": "Kerberoasting",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1208",
                        "url": "https://attack.mitre.org/techniques/T1208"
                    },
                    {
                        "url": "https://blogs.technet.microsoft.com/motiba/2018/02/23/detecting-kerberoasting-activity-using-azure-security-center/",
                        "description": "Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018.",
                        "source_name": "Microsoft Detecting Kerberoasting Feb 2018"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/ms677949.aspx",
                        "description": "Microsoft. (n.d.). Service Principal Names. Retrieved March 22, 2018.",
                        "source_name": "Microsoft SPN"
                    },
                    {
                        "url": "https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx",
                        "description": "Microsoft. (2010, April 13). Service Principal Names (SPNs) SetSPN Syntax (Setspn.exe). Retrieved March 22, 2018.",
                        "source_name": "Microsoft SetSPN"
                    },
                    {
                        "description": "Medin, T. (2014, November). Attacking Kerberos - Kicking the Guard Dog of Hades. Retrieved March 22, 2018.",
                        "source_name": "SANS Attacking Kerberos Nov 2014"
                    },
                    {
                        "url": "https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/",
                        "description": "Schroeder, W. (2016, November 1). Kerberoasting Without Mimikatz. Retrieved March 23, 2018.",
                        "source_name": "Harmj0y Kerberoast Nov 2016"
                    },
                    {
                        "url": "https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1",
                        "description": "EmpireProject. (2016, October 31). Invoke-Kerberoast.ps1. Retrieved March 22, 2018.",
                        "source_name": "Empire InvokeKerberoast Oct 2016"
                    },
                    {
                        "url": "https://adsecurity.org/?p=2293",
                        "description": "Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast \u2013 Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018.",
                        "source_name": "AdSecurity Cracking Kerberos Dec 2015"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-11T20:35:32.042Z",
                "created": "2018-04-18T17:59:24.739Z"
            },
            {
                "id": "attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee",
                "description": "Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\n\nThis same attack could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "name": "Kerberoasting",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1558.003",
                        "url": "https://attack.mitre.org/techniques/T1558/003"
                    },
                    {
                        "url": "https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1",
                        "description": "EmpireProject. (2016, October 31). Invoke-Kerberoast.ps1. Retrieved March 22, 2018.",
                        "source_name": "Empire InvokeKerberoast Oct 2016"
                    },
                    {
                        "url": "https://adsecurity.org/?p=2293",
                        "description": "Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast \u2013 Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018.",
                        "source_name": "AdSecurity Cracking Kerberos Dec 2015"
                    },
                    {
                        "url": "https://blogs.technet.microsoft.com/motiba/2018/02/23/detecting-kerberoasting-activity-using-azure-security-center/",
                        "description": "Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018.",
                        "source_name": "Microsoft Detecting Kerberoasting Feb 2018"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/ms677949.aspx",
                        "description": "Microsoft. (n.d.). Service Principal Names. Retrieved March 22, 2018.",
                        "source_name": "Microsoft SPN"
                    },
                    {
                        "url": "https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx",
                        "description": "Microsoft. (2010, April 13). Service Principal Names (SPNs) SetSPN Syntax (Setspn.exe). Retrieved March 22, 2018.",
                        "source_name": "Microsoft SetSPN"
                    },
                    {
                        "description": "Medin, T. (2014, November). Attacking Kerberos - Kicking the Guard Dog of Hades. Retrieved March 22, 2018.",
                        "source_name": "SANS Attacking Kerberos Nov 2014"
                    },
                    {
                        "url": "https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/",
                        "description": "Schroeder, W. (2016, November 1). Kerberoasting Without Mimikatz. Retrieved March 23, 2018.",
                        "source_name": "Harmj0y Kerberoast Nov 2016"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-02-27T18:25:30.124Z",
                "created": "2020-02-11T18:43:38.588Z",
                "x_mitre_contributors": [
                    "Praetorian"
                ],
                "x_mitre_data_sources": [
                    "Authentication logs",
                    "Windows event logs"
                ],
                "x_mitre_system_requirements": [
                    "Valid domain account or the ability to sniff traffic within a domain"
                ],
                "x_mitre_detection": "Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)",
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1215",
                        "url": "https://attack.mitre.org/techniques/T1215"
                    },
                    {
                        "source_name": "Linux Kernel Programming",
                        "url": "https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf",
                        "description": "Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018."
                    },
                    {
                        "url": "http://www.tldp.org/LDP/lkmpg/2.4/html/x437.html",
                        "description": "Pomerantz, O., Salzman, P. (2003, April 4). Modules vs Programs. Retrieved April 6, 2018.",
                        "source_name": "Linux Kernel Module Programming Guide"
                    },
                    {
                        "url": "https://volatility-labs.blogspot.com/2012/10/phalanx-2-revealed-using-volatility-to.html",
                        "description": "Case, A. (2012, October 10). Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit. Retrieved April 9, 2018.",
                        "source_name": "Volatility Phalanx2"
                    },
                    {
                        "url": "https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/",
                        "description": "Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.",
                        "source_name": "CrowdStrike Linux Rootkit"
                    },
                    {
                        "url": "https://github.com/f0rb1dd3n/Reptile",
                        "description": "Augusto, I. (2018, March 8). Reptile - LMK Linux rootkit. Retrieved April 9, 2018.",
                        "source_name": "GitHub Reptile"
                    },
                    {
                        "url": "https://github.com/m0nad/Diamorphine",
                        "description": "Mello, V. (2018, March 8). Diamorphine - LMK rootkit for Linux Kernels 2.6.x/3.x/4.x (x86 and x86_64). Retrieved April 9, 2018.",
                        "source_name": "GitHub Diamorphine"
                    },
                    {
                        "url": "http://www.megasecurity.org/papers/Rootkits.pdf",
                        "description": "Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved April 6, 2018.",
                        "source_name": "iDefense Rootkit Overview"
                    },
                    {
                        "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf",
                        "description": "Wardle, P. (2015, April). Malware Persistence on OS X Yosemite. Retrieved April 6, 2018.",
                        "source_name": "RSAC 2015 San Francisco Patrick Wardle"
                    },
                    {
                        "url": "https://www.synack.com/2017/09/08/high-sierras-secure-kernel-extension-loading-is-broken/",
                        "description": "Wardle, P. (2017, September 8). High Sierra\u2019s \u2018Secure Kernel Extension Loading\u2019 is Broken. Retrieved April 6, 2018.",
                        "source_name": "Synack Secure Kernel Extension Broken"
                    },
                    {
                        "url": "https://securelist.com/the-ventir-trojan-assemble-your-macos-spy/67267/",
                        "description": "Mikhail, K. (2014, October 16). The Ventir Trojan: assemble your MacOS spy. Retrieved April 6, 2018.",
                        "source_name": "Securelist Ventir"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Loadable_kernel_module#Linux",
                        "description": "Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018.",
                        "source_name": "Wikipedia Loadable Kernel Module"
                    },
                    {
                        "url": "http://tldp.org/HOWTO/Module-HOWTO/x197.html",
                        "description": "Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved April 9, 2018.",
                        "source_name": "Linux Loadable Kernel Module Insert and Remove LKMs"
                    }
                ],
                "name": "Kernel Modules and Extensions",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T17:57:51.019Z",
                "created": "2018-04-18T17:59:24.739Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1547.006",
                        "url": "https://attack.mitre.org/techniques/T1547/006"
                    },
                    {
                        "source_name": "Linux Kernel Programming",
                        "url": "https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf",
                        "description": "Pomerantz, O., Salzman, P.. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018."
                    },
                    {
                        "url": "http://www.tldp.org/LDP/lkmpg/2.4/html/x437.html",
                        "description": "Pomerantz, O., Salzman, P. (2003, April 4). Modules vs Programs. Retrieved April 6, 2018.",
                        "source_name": "Linux Kernel Module Programming Guide"
                    },
                    {
                        "url": "http://www.megasecurity.org/papers/Rootkits.pdf",
                        "description": "Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved April 6, 2018.",
                        "source_name": "iDefense Rootkit Overview"
                    },
                    {
                        "url": "https://volatility-labs.blogspot.com/2012/10/phalanx-2-revealed-using-volatility-to.html",
                        "description": "Case, A. (2012, October 10). Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit. Retrieved April 9, 2018.",
                        "source_name": "Volatility Phalanx2"
                    },
                    {
                        "url": "https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/",
                        "description": "Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.",
                        "source_name": "CrowdStrike Linux Rootkit"
                    },
                    {
                        "url": "https://github.com/f0rb1dd3n/Reptile",
                        "description": "Augusto, I. (2018, March 8). Reptile - LMK Linux rootkit. Retrieved April 9, 2018.",
                        "source_name": "GitHub Reptile"
                    },
                    {
                        "url": "https://github.com/m0nad/Diamorphine",
                        "description": "Mello, V. (2018, March 8). Diamorphine - LMK rootkit for Linux Kernels 2.6.x/3.x/4.x (x86 and x86_64). Retrieved April 9, 2018.",
                        "source_name": "GitHub Diamorphine"
                    },
                    {
                        "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf",
                        "description": "Wardle, P. (2015, April). Malware Persistence on OS X Yosemite. Retrieved April 6, 2018.",
                        "source_name": "RSAC 2015 San Francisco Patrick Wardle"
                    },
                    {
                        "url": "https://www.synack.com/2017/09/08/high-sierras-secure-kernel-extension-loading-is-broken/",
                        "description": "Wardle, P. (2017, September 8). High Sierra\u2019s \u2018Secure Kernel Extension Loading\u2019 is Broken. Retrieved April 6, 2018.",
                        "source_name": "Synack Secure Kernel Extension Broken"
                    },
                    {
                        "url": "https://securelist.com/the-ventir-trojan-assemble-your-macos-spy/67267/",
                        "description": "Mikhail, K. (2014, October 16). The Ventir Trojan: assemble your MacOS spy. Retrieved April 6, 2018.",
                        "source_name": "Securelist Ventir"
                    },
                    {
                        "source_name": "Trend Micro Skidmap",
                        "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/skidmap-linux-malware-uses-rootkit-capabilities-to-hide-cryptocurrency-mining-payload/",
                        "description": "Remillano, A., Urbanec, J. (2019, September 19). Skidmap Linux Malware Uses Rootkit Capabilities to Hide Cryptocurrency-Mining Payload. Retrieved June 4, 2020."
                    },
                    {
                        "url": "http://tldp.org/HOWTO/Module-HOWTO/x197.html",
                        "description": "Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved April 9, 2018.",
                        "source_name": "Linux Loadable Kernel Module Insert and Remove LKMs"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Loadable_kernel_module#Linux",
                        "description": "Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018.",
                        "source_name": "Wikipedia Loadable Kernel Module"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Kernel Modules and Extensions",
                "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0\n\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands.\n\nAdversaries can use LKMs and kexts to covertly persist on a system and elevate privileges. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir) (Citation: Trend Micro Skidmap)",
                "id": "attack-pattern--a1b52199-c8c5-438a-9ded-656f1d0888c6",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "modified": "2020-06-30T21:23:15.188Z",
                "created": "2020-01-24T17:42:23.339Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "root"
                ],
                "x_mitre_detection": "Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:<code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)\n\nFor macOS, monitor for execution of <code>kextload</code> commands and correlate with other unknown or suspicious activity.\n\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly.\u00a0These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>",
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "Process command-line parameters"
                ],
                "x_mitre_contributors": [
                    "Anastasios Pingios",
                    "Jeremy Galloway",
                    "Red Canary"
                ],
                "x_mitre_platforms": [
                    "macOS",
                    "Linux"
                ]
            },
            {
                "id": "attack-pattern--9e09ddb2-1746-4448-9cad-7f8b41777d6d",
                "name": "Keychain",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1142",
                        "url": "https://attack.mitre.org/techniques/T1142"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Keychain_(software)",
                        "description": "Wikipedia. (n.d.). Keychain (software). Retrieved July 5, 2017.",
                        "source_name": "Wikipedia keychain"
                    },
                    {
                        "url": "http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way",
                        "description": "Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.",
                        "source_name": "External to DA, the OS X Way"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-12T18:55:55.305Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "created": "2020-02-12T18:55:24.728Z",
                "modified": "2020-02-17T13:14:31.140Z",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "type": "attack-pattern",
                "id": "attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3",
                "description": "Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in <code>~/Library/Keychains/</code>,<code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>. (Citation: Wikipedia keychain) The <code>security</code> command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.\n\nTo manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault. (Citation: External to DA, the OS X Way) By default, the passphrase for the keychain is the user\u2019s logon credentials.",
                "name": "Keychain",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1555.001",
                        "url": "https://attack.mitre.org/techniques/T1555/001"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Keychain_(software)",
                        "description": "Wikipedia. (n.d.). Keychain (software). Retrieved July 5, 2017.",
                        "source_name": "Wikipedia keychain"
                    },
                    {
                        "url": "http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way",
                        "description": "Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.",
                        "source_name": "External to DA, the OS X Way"
                    }
                ],
                "x_mitre_platforms": [
                    "macOS"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.",
                "x_mitre_permissions_required": [
                    "Administrator"
                ],
                "x_mitre_data_sources": [
                    "PowerShell logs",
                    "Process monitoring",
                    "File monitoring",
                    "System calls",
                    "API monitoring"
                ]
            },
            {
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.",
                "name": "Keylogging",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1056.001",
                        "url": "https://attack.mitre.org/techniques/T1056/001"
                    },
                    {
                        "external_id": "CAPEC-568",
                        "source_name": "capec",
                        "url": "https://capec.mitre.org/data/definitions/568.html"
                    },
                    {
                        "url": "http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf",
                        "description": "Tinaztepe,  E. (n.d.). The Adventures of a Keystroke:  An in-depth look into keyloggers on Windows. Retrieved April 27, 2016.",
                        "source_name": "Adventures of a Keystroke"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "collection"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "credential-access"
                    }
                ],
                "modified": "2020-03-24T20:45:52.998Z",
                "created": "2020-02-11T18:58:11.791Z",
                "x_mitre_platforms": [
                    "Windows",
                    "macOS",
                    "Linux"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0",
                "x_mitre_detection": "Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.",
                "x_mitre_permissions_required": [
                    "Administrator",
                    "root",
                    "SYSTEM",
                    "User"
                ],
                "x_mitre_data_sources": [
                    "Windows Registry",
                    "Process monitoring",
                    "API monitoring"
                ]
            },
            {
                "id": "attack-pattern--04ef4356-8926-45e2-9441-634b6f3dcecb",
                "name": "LC_LOAD_DYLIB Addition",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1161",
                        "url": "https://attack.mitre.org/techniques/T1161"
                    },
                    {
                        "url": "https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf",
                        "description": "Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.",
                        "source_name": "Writing Bad Malware for OSX"
                    },
                    {
                        "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf",
                        "description": "Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.",
                        "source_name": "Malware Persistence on OS X"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T14:22:27.531Z",
                "created": "2017-12-14T16:46:06.044Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1546.006",
                        "url": "https://attack.mitre.org/techniques/T1546/006"
                    },
                    {
                        "url": "https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf",
                        "description": "Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.",
                        "source_name": "Writing Bad Malware for OSX"
                    },
                    {
                        "url": "https://www.rsaconference.com/writable/presentations/file_upload/ht-r03-malware-persistence-on-os-x-yosemite_final.pdf",
                        "description": "Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.",
                        "source_name": "Malware Persistence on OS X"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "LC_LOAD_DYLIB Addition",
                "description": "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. (Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn\u2019t checked at load time. (Citation: Malware Persistence on OS X)",
                "id": "attack-pattern--10ff21b9-5a01-4268-a1b5-3b55015f1847",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    }
                ],
                "modified": "2020-03-24T16:50:36.235Z",
                "created": "2020-01-24T14:21:52.750Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.",
                "x_mitre_data_sources": [
                    "File monitoring",
                    "Process command-line parameters",
                    "Process monitoring",
                    "Binary file metadata"
                ],
                "x_mitre_platforms": [
                    "macOS"
                ]
            },
            {
                "id": "attack-pattern--a0a189c8-d3bd-4991-bf6f-153d185ee373",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "LC_MAIN Hijacking",
                "description": "**This technique has been deprecated and should no longer be used.**\n\nAs of OS X 10.8, mach-O binaries introduced a new header called LC_MAIN that points to the binary\u2019s entry point for execution. Previously, there were two headers to achieve this same effect: LC_THREAD and LC_UNIXTHREAD  (Citation: Prolific OSX Malware History). The entry point for a binary can be hijacked so that initial execution flows to a malicious addition (either another section or a code cave) and then goes back to the initial entry point so that the victim doesn\u2019t know anything was different  (Citation: Methods of Mac Malware Persistence). By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same.",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1149",
                        "url": "https://attack.mitre.org/techniques/T1149"
                    },
                    {
                        "url": "https://assets.documentcloud.org/documents/2459197/bit9-carbon-black-threat-research-report-2015.pdf",
                        "description": "Bit9 + Carbon Black Threat Research Team. (2015). 2015: The Most Prolific Year in History for OS X Malware. Retrieved July 8, 2017.",
                        "source_name": "Prolific OSX Malware History"
                    },
                    {
                        "url": "https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf",
                        "description": "Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.",
                        "source_name": "Methods of Mac Malware Persistence"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "defense-evasion"
                }],
                "modified": "2020-03-30T13:53:57.518Z",
                "created": "2017-12-14T16:46:06.044Z",
                "x_mitre_deprecated": true,
                "x_mitre_is_subtechnique": false,
                "x_mitre_platforms": [
                    "macOS"
                ],
                "x_mitre_permissions_required": [
                    "User",
                    "Administrator"
                ],
                "x_mitre_defense_bypassed": [
                    "Application whitelisting",
                    "Process whitelisting",
                    "Whitelisting by file name or path"
                ],
                "x_mitre_detection": "Determining the original entry point for a binary is difficult, but checksum and signature verification is very possible. Modifying the LC_MAIN entry point or adding in an additional LC_MAIN entry point invalidates the signature for the file and can be detected. Collect running process information and compare against known applications to look for suspicious behavior.",
                "x_mitre_data_sources": [
                    "Binary file metadata",
                    "Malware reverse engineering",
                    "Process monitoring"
                ],
                "x_mitre_version": "2.0"
            },
            {
                "id": "attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825",
                "description": "Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries. The dynamic linker is used to load shared library dependencies needed by an executing program. The dynamic linker will typically check provided absolute paths and common directories for these dependencies, but can be overridden by shared objects specified by LD_PRELOAD to be loaded before all others.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)\n\nAdversaries may set LD_PRELOAD to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. LD_PRELOAD can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by LD_PRELOAD with be loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS) (Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)\n\nLD_PRELOAD hijacking may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. Execution via LD_PRELOAD hijacking may also evade detection from security products since the execution is masked under a legitimate process.",
                "name": "LD_PRELOAD",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1574.006",
                        "url": "https://attack.mitre.org/techniques/T1574/006"
                    },
                    {
                        "source_name": "Man LD.SO",
                        "url": "https://www.man7.org/linux/man-pages/man8/ld.so.8.html",
                        "description": "Kerrisk, M. (2020, June 13). Linux Programmer's Manual. Retrieved June 15, 2020."
                    },
                    {
                        "source_name": "TLDP Shared Libraries",
                        "url": "https://www.tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html",
                        "description": "The Linux Documentation Project. (n.d.). Shared Libraries. Retrieved January 31, 2020."
                    },
                    {
                        "source_name": "Code Injection on Linux and macOS",
                        "url": "https://www.datawire.io/code-injection-on-linux-and-macos/",
                        "description": "Itamar Turner-Trauring. (2017, April 18). \u201cThis will only hurt for a moment\u201d: code injection on Linux and macOS with LD_PRELOAD. Retrieved December 20, 2017."
                    },
                    {
                        "url": "http://hick.org/code/skape/papers/needle.txt",
                        "description": "skape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.",
                        "source_name": "Uninformed Needle"
                    },
                    {
                        "url": "http://phrack.org/issues/51/8.html",
                        "description": "halflife. (1997, September 1). Shared Library Redirection Techniques. Retrieved December 20, 2017.",
                        "source_name": "Phrack halfdead 1997"
                    }
                ],
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "defense-evasion"
                    }
                ],
                "modified": "2020-06-15T21:59:25.358Z",
                "created": "2020-03-13T20:09:59.569Z",
                "x_mitre_platforms": [
                    "Linux"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "File monitoring",
                    "Environment variable"
                ],
                "x_mitre_detection": "Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1171",
                        "url": "https://attack.mitre.org/techniques/T1171"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Link-Local_Multicast_Name_Resolution",
                        "description": "Wikipedia. (2016, July 7). Link-Local Multicast Name Resolution. Retrieved November 17, 2017.",
                        "source_name": "Wikipedia LLMNR"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/cc958811.aspx",
                        "description": "Microsoft. (n.d.). NetBIOS Name Resolution. Retrieved November 17, 2017.",
                        "source_name": "TechNet NetBIOS"
                    },
                    {
                        "source_name": "byt3bl33d3r NTLM Relaying",
                        "url": "https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html",
                        "description": "Salvati, M. (2017, June 2). Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes). Retrieved February 7, 2019."
                    },
                    {
                        "source_name": "Secure Ideas SMB Relay",
                        "url": "https://blog.secureideas.com/2018/04/ever-run-a-relay-why-smb-relays-should-be-on-your-mind.html",
                        "description": "Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019."
                    },
                    {
                        "url": "https://github.com/nomex/nbnspoof",
                        "description": "Nomex. (2014, February 7). NBNSpoof. Retrieved November 17, 2017.",
                        "source_name": "GitHub NBNSpoof"
                    },
                    {
                        "url": "https://www.rapid7.com/db/modules/auxiliary/spoof/llmnr/llmnr_response",
                        "description": "Francois, R. (n.d.). LLMNR Spoofer. Retrieved November 17, 2017.",
                        "source_name": "Rapid7 LLMNR Spoofer"
                    },
                    {
                        "url": "https://github.com/SpiderLabs/Responder",
                        "description": "Gaffie, L. (2016, August 25). Responder. Retrieved November 17, 2017.",
                        "source_name": "GitHub Responder"
                    },
                    {
                        "url": "https://www.sternsecurity.com/blog/local-network-attacks-llmnr-and-nbt-ns-poisoning",
                        "description": "Sternstein, J. (2013, November). Local Network Attacks: LLMNR and NBT-NS Poisoning. Retrieved November 17, 2017.",
                        "source_name": "Sternsecurity LLMNR-NBTNS"
                    },
                    {
                        "url": "https://github.com/Kevin-Robertson/Conveigh",
                        "description": "Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017.",
                        "source_name": "GitHub Conveigh"
                    }
                ],
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-02-11T19:09:48.452Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1557.001",
                        "url": "https://attack.mitre.org/techniques/T1557/001"
                    },
                    {
                        "url": "https://en.wikipedia.org/wiki/Link-Local_Multicast_Name_Resolution",
                        "description": "Wikipedia. (2016, July 7). Link-Local Multicast Name Resolution. Retrieved November 17, 2017.",
                        "source_name": "Wikipedia LLMNR"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/cc958811.aspx",
                        "description": "Microsoft. (n.d.). NetBIOS Name Resolution. Retrieved November 17, 2017.",
                        "source_name": "TechNet NetBIOS"
                    },
                    {
                        "source_name": "byt3bl33d3r NTLM Relaying",
                        "url": "https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html",
                        "description": "Salvati, M. (2017, June 2). Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes). Retrieved February 7, 2019."
                    },
                    {
                        "source_name": "Secure Ideas SMB Relay",
                        "url": "https://blog.secureideas.com/2018/04/ever-run-a-relay-why-smb-relays-should-be-on-your-mind.html",
                        "description": "Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019."
                    },
                    {
                        "url": "https://github.com/nomex/nbnspoof",
                        "description": "Nomex. (2014, February 7). NBNSpoof. Retrieved November 17, 2017.",
                        "source_name": "GitHub NBNSpoof"
                    },
                    {
                        "url": "https://www.rapid7.com/db/modules/auxiliary/spoof/llmnr/llmnr_response",
                        "description": "Francois, R. (n.d.). LLMNR Spoofer. Retrieved November 17, 2017.",
                        "source_name": "Rapid7 LLMNR Spoofer"
                    },
                    {
                        "url": "https://github.com/SpiderLabs/Responder",
                        "description": "Gaffie, L. (2016, August 25). Responder. Retrieved November 17, 2017.",
                        "source_name": "GitHub Responder"
                    },
                    {
                        "url": "https://www.sternsecurity.com/blog/local-network-attacks-llmnr-and-nbt-ns-poisoning",
                        "description": "Sternstein, J. (2013, November). Local Network Attacks: LLMNR and NBT-NS Poisoning. Retrieved November 17, 2017.",
                        "source_name": "Sternsecurity LLMNR-NBTNS"
                    },
                    {
                        "url": "https://github.com/Kevin-Robertson/Conveigh",
                        "description": "Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017.",
                        "source_name": "GitHub Conveigh"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "LLMNR/NBT-NS Poisoning and SMB Relay",
                "description": "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--650c784b-7504-4df7-ab2c-4ea882384d1e",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "credential-access"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "collection"
                    }
                ],
                "modified": "2020-03-31T13:54:08.239Z",
                "created": "2020-02-11T19:08:51.677Z",
                "x_mitre_contributors": [
                    "Eric Kuehn, Secure Ideas",
                    "Matthew Demaske, Adaptforward"
                ],
                "x_mitre_data_sources": [
                    "Windows event logs",
                    "Windows Registry",
                    "Packet capture",
                    "Netflow/Enclave netflow"
                ],
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor <code>HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient</code> for changes to the \"EnableMulticast\" DWORD value. A value of \u201c0\u201d indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)\n\nMonitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.\n\nDeploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1003.004",
                        "url": "https://attack.mitre.org/techniques/T1003/004"
                    },
                    {
                        "source_name": "Passcape LSA Secrets",
                        "url": "https://www.passcape.com/index.php?section=docsys&cmd=details&id=23",
                        "description": "Passcape. (n.d.). Windows LSA secrets. Retrieved February 21, 2020."
                    },
                    {
                        "source_name": "Microsoft AD Admin Tier Model",
                        "url": "https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material?redirectedfrom=MSDN",
                        "description": "Microsoft. (2019, February 14). Active Directory administrative tier model. Retrieved February 21, 2020."
                    },
                    {
                        "source_name": "Tilbury Windows Credentials",
                        "url": "https://www.first.org/resources/papers/conf2017/Windows-Credentials-Attacks-and-Mitigation-Techniques.pdf",
                        "description": "Chad Tilbury. (2017, August 8). 1Windows Credentials: Attack, Mitigation, Defense. Retrieved February 21, 2020."
                    },
                    {
                        "source_name": "ired Dumping LSA Secrets",
                        "url": "ttps://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-lsa-secrets",
                        "description": "Mantvydas Baranauskas. (2019, November 16). Dumping LSA Secrets. Retrieved February 21, 2020."
                    },
                    {
                        "url": "https://github.com/mattifestation/PowerSploit",
                        "description": "PowerSploit. (n.d.). Retrieved December 4, 2014.",
                        "source_name": "Powersploit"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "LSA Secrets",
                "description": "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\n\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)",
                "id": "attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-03-24T20:35:42.440Z",
                "created": "2020-02-21T16:22:09.493Z",
                "x_mitre_contributors": [
                    "Ed Williams, Trustwave, SpiderLabs"
                ],
                "x_mitre_data_sources": [
                    "Process monitoring",
                    "PowerShell logs",
                    "Process command-line parameters"
                ],
                "x_mitre_detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_permissions_required": [
                    "SYSTEM"
                ],
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1177",
                        "url": "https://attack.mitre.org/techniques/T1177"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/cc961760.aspx",
                        "description": "Microsoft. (n.d.). Security Subsystem Architecture. Retrieved November 27, 2017.",
                        "source_name": "Microsoft Security Subsystem"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/dn408187.aspx",
                        "description": "Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017.",
                        "source_name": "Microsoft LSA Protection Mar 2014"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ff919712.aspx",
                        "description": "Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017.",
                        "source_name": "Microsoft DLL Security"
                    }
                ],
                "name": "LSASS Driver",
                "id": "attack-pattern--6e6845c2-347a-4a6f-a2d1-b74a18ebd352",
                "revoked": true,
                "type": "attack-pattern",
                "modified": "2020-01-24T18:50:28.846Z",
                "created": "2018-01-16T16:13:52.465Z"
            },
            {
                "created": "2020-01-24T18:38:55.801Z",
                "modified": "2020-03-25T16:52:26.567Z",
                "kill_chain_phases": [{
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "persistence"
                    },
                    {
                        "kill_chain_name": "mitre-attack",
                        "phase_name": "privilege-escalation"
                    }
                ],
                "type": "attack-pattern",
                "id": "attack-pattern--f0589bc3-a6ae-425a-a3d5-5659bfee07f4",
                "description": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. (Citation: Microsoft Security Subsystem)\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",
                "name": "LSASS Driver",
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1547.008",
                        "url": "https://attack.mitre.org/techniques/T1547/008"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/cc961760.aspx",
                        "description": "Microsoft. (n.d.). Security Subsystem Architecture. Retrieved November 27, 2017.",
                        "source_name": "Microsoft Security Subsystem"
                    },
                    {
                        "url": "https://technet.microsoft.com/library/dn408187.aspx",
                        "description": "Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017.",
                        "source_name": "Microsoft LSA Protection Mar 2014"
                    },
                    {
                        "url": "https://msdn.microsoft.com/library/windows/desktop/ff919712.aspx",
                        "description": "Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017.",
                        "source_name": "Microsoft DLL Security"
                    },
                    {
                        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                        "source_name": "TechNet Autoruns"
                    }
                ],
                "x_mitre_platforms": [
                    "Windows"
                ],
                "x_mitre_contributors": [
                    "Vincent Le Toux"
                ],
                "x_mitre_data_sources": [
                    "DLL monitoring",
                    "File monitoring",
                    "Loaded DLLs",
                    "Process monitoring"
                ],
                "x_mitre_detection": "With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\n\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. ",
                "x_mitre_permissions_required": [
                    "SYSTEM",
                    "Administrator"
                ],
                "x_mitre_is_subtechnique": true,
                "x_mitre_version": "1.0"
            },
            {
                "external_references": [{
                        "source_name": "mitre-attack",
                        "external_id": "T1003.001",
                        "url": "https://attack.mitre.org/techniques/T1003/001"
                    },
                    {
                        "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html",
                        "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.",
                        "source_name": "Graeber 2014"
                    },
                    {
                        "url": "https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/",
                        "description": "Wilson, B. (2016, April 18). The Importance of KB2871997 and KB2928120 for Credential Protection. Retrieved April 11, 2018.",
                        "source_name": "TechNet Blogs Credential Protection"
                    },
                    {
                        "description": "French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.",
                        "url": "https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea",
                        "source_name": "Medium Detecting Attempts to Steal Passwords from Memory"
                    },
                    {
                        "url": "https://github.com/mattifestation/PowerSploit",
                        "description": "PowerSploit. (n.d.). Retrieved December 4, 2014.",
                        "source_name": "Powersploit"
                    }
                ],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "LSASS Memory",
                "description": "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\n",
                "id": "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "credential-access"
                }],
                "modified": "2020-06-09T20:46:00.393Z",
                "created": "2020-02-11T18:41:44.783Z",
                "x_mitre_contributors": [
                    "Ed Williams, Trustwave, SpiderLabs"
                ],
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "PowerShell logs",
                    "Process monitoring"
                ],
                "x_mitre_permissions_required": [
                    "Administrator",
                    "SYSTEM"
                ],
                "x_mitre_detection": "Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": true,
                "x_mitre_platforms": [
                    "Windows"
                ]
            },
            {
                "external_references": [{
                    "source_name": "mitre-attack",
                    "external_id": "T1570",
                    "url": "https://attack.mitre.org/techniques/T1570"
                }],
                "object_marking_refs": [
                    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                ],
                "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                "name": "Lateral Tool Transfer",
                "description": "Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) or [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001). Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.",
                "id": "attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5",
                "type": "attack-pattern",
                "kill_chain_phases": [{
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "lateral-movement"
                }],
                "modified": "2020-03-23T22:10:10.862Z",
                "created": "2020-03-11T21:01:00.959Z",
                "x_mitre_version": "1.0",
                "x_mitre_is_subtechnique": false,
                "x_mitre_permissions_required": [
                    "User"
                ],
                "x_mitre_detection": "Monitor for file creation and files transferred within a network using protocols such as SMB. Unusual processes with internal network connections creating files on-system may be suspicious. Consider monitoring for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Considering monitoring for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.",
                "x_mitre_data_sources": [
                    "Process command-line parameters",
                    "File monitoring",
                    "Packet capture",
                    "Process use of network",
                    "Netflow/Enclave netflow",
                    "Network protocol analysis",
                    "Process monitoring"
                ],
                "x_mitre_platforms": [
                    "Linux",
                    "macOS",
                    "Windows"
                ]
            },
            {
                "external_references": [{
                            "source_name": "mitre-attack",
                            "external_id": "T1159",
                            "url": "https://attack.mitre.org/techniques/T1159"
                        },
                        {
                            "url": "https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html",
                            "description": "Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.",
                            "source_name": "AppleDocs Launch Agent Daemons"
                        },
                        {
                            "url": "https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/",
                            "description": "Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.",
                            "source_name": "OSX Keydnap malware"
                        },
                        {
                            "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/",
                            "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
                            "source_name": "Antiquated Mac Malware"
                        },
                        {
                            "url": "https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/",
                            "description": "Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.",
                            "source_name": "OSX.Dok Malware"
                        },
                        {
                            "url": "https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/",